{"code":"import { ParameterType } from \"jspsych\";\nconst info = {\n    name: \"survey-number\",\n    parameters: {\n        questions: {\n            type: ParameterType.COMPLEX,\n            array: true,\n            pretty_name: \"Questions\",\n            default: undefined,\n            nested: {\n                /** Question prompt. */\n                prompt: {\n                    type: ParameterType.HTML_STRING,\n                    pretty_name: \"Prompt\",\n                    default: undefined,\n                },\n                /** Placeholder text in the response text box. */\n                placeholder: {\n                    type: ParameterType.STRING,\n                    pretty_name: \"Placeholder\",\n                    default: \"\",\n                },\n                /** The number of rows for the response text box. */\n                rows: {\n                    type: ParameterType.INT,\n                    pretty_name: \"Rows\",\n                    default: 1,\n                },\n                /** The number of columns for the response text box. */\n                columns: {\n                    type: ParameterType.INT,\n                    pretty_name: \"Columns\",\n                    default: 40,\n                },\n                /** Whether or not a response to this question must be given in order to continue. */\n                required: {\n                    type: ParameterType.BOOL,\n                    pretty_name: \"Required\",\n                    default: false,\n                },\n                /** Name of the question in the trial data. If no name is given, the questions are named Q0, Q1, etc. */\n                name: {\n                    type: ParameterType.STRING,\n                    pretty_name: \"Question Name\",\n                    default: \"\",\n                },\n            },\n        },\n        /** If true, the order of the questions in the 'questions' array will be randomized. */\n        randomize_question_order: {\n            type: ParameterType.BOOL,\n            pretty_name: \"Randomize Question Order\",\n            default: false,\n        },\n        /** HTML-formatted string to display at top of the page above all of the questions. */\n        preamble: {\n            type: ParameterType.HTML_STRING,\n            pretty_name: \"Preamble\",\n            default: null,\n        },\n        /** Label of the button to submit responses. */\n        button_label: {\n            type: ParameterType.STRING,\n            pretty_name: \"Button label\",\n            default: \"Continue\",\n        },\n        /** Setting this to true will enable browser auto-complete or auto-fill for the form. */\n        autocomplete: {\n            type: ParameterType.BOOL,\n            pretty_name: \"Allow autocomplete\",\n            default: false,\n        },\n    },\n};\n/**\n * **survey-number**\n *\n * Collects a number response in a text box\n *\n * @author Josh de Leeuw\n * @see {@link https://github.com/jspsych/jspsych-contrib/packages/plugin-survey-number/README.md}}\n */\nclass SurveyNumberPlugin {\n    constructor(jsPsych) {\n        this.jsPsych = jsPsych;\n    }\n    trial(display_element, trial) {\n        for (var i = 0; i < trial.questions.length; i++) {\n            if (typeof trial.questions[i].rows == \"undefined\") {\n                trial.questions[i].rows = 1;\n            }\n        }\n        for (var i = 0; i < trial.questions.length; i++) {\n            if (typeof trial.questions[i].columns == \"undefined\") {\n                trial.questions[i].columns = 40;\n            }\n        }\n        for (var i = 0; i < trial.questions.length; i++) {\n            if (typeof trial.questions[i].value == \"undefined\") {\n                trial.questions[i].value = \"\";\n            }\n        }\n        var html = \"\";\n        // show preamble text\n        if (trial.preamble !== null) {\n            html +=\n                '<div id=\"jspsych-survey-text-preamble\" class=\"jspsych-survey-text-preamble\">' +\n                    trial.preamble +\n                    \"</div>\";\n        }\n        // start form\n        if (trial.autocomplete) {\n            html += '<form id=\"jspsych-survey-text-form\">';\n        }\n        else {\n            html += '<form id=\"jspsych-survey-text-form\" autocomplete=\"off\">';\n        }\n        // generate question order\n        var question_order = [];\n        for (var i = 0; i < trial.questions.length; i++) {\n            question_order.push(i);\n        }\n        if (trial.randomize_question_order) {\n            question_order = this.jsPsych.randomization.shuffle(question_order);\n        }\n        // add questions\n        for (var i = 0; i < trial.questions.length; i++) {\n            var question = trial.questions[question_order[i]];\n            var question_index = question_order[i];\n            html +=\n                '<div id=\"jspsych-survey-text-' +\n                    question_index +\n                    '\" class=\"jspsych-survey-text-question\" style=\"margin: 2em 0em;\">';\n            html += '<p class=\"jspsych-survey-text\">' + question.prompt + \"</p>\";\n            var autofocus = i == 0 ? \"autofocus\" : \"\";\n            var req = question.required ? \"required\" : \"\";\n            if (question.rows == 1) {\n                html +=\n                    '<input type=\"number\" id=\"input-' +\n                        question_index +\n                        '\"  name=\"#jspsych-survey-text-response-' +\n                        question_index +\n                        '\" data-name=\"' +\n                        question.name +\n                        '\" size=\"' +\n                        question.columns +\n                        '\" ' +\n                        autofocus +\n                        \" \" +\n                        req +\n                        ' placeholder=\"' +\n                        question.placeholder +\n                        '\"></input>';\n            }\n            else {\n                html +=\n                    '<textarea id=\"input-' +\n                        question_index +\n                        '\" name=\"#jspsych-survey-text-response-' +\n                        question_index +\n                        '\" data-name=\"' +\n                        question.name +\n                        '\" cols=\"' +\n                        question.columns +\n                        '\" rows=\"' +\n                        question.rows +\n                        '\" ' +\n                        autofocus +\n                        \" \" +\n                        req +\n                        ' placeholder=\"' +\n                        question.placeholder +\n                        '\"></textarea>';\n            }\n            html += \"</div>\";\n        }\n        // add submit button\n        html +=\n            '<input type=\"submit\" id=\"jspsych-survey-text-next\" class=\"jspsych-btn jspsych-survey-text\" value=\"' +\n                trial.button_label +\n                '\"></input>';\n        html += \"</form>\";\n        display_element.innerHTML = html;\n        // backup in case autofocus doesn't work\n        display_element.querySelector(\"#input-\" + question_order[0]).focus();\n        display_element.querySelector(\"#jspsych-survey-text-form\").addEventListener(\"submit\", (e) => {\n            e.preventDefault();\n            // measure response time\n            var endTime = performance.now();\n            var response_time = Math.round(endTime - startTime);\n            // create object to hold responses\n            var question_data = {};\n            for (var index = 0; index < trial.questions.length; index++) {\n                var id = \"Q\" + index;\n                var q_element = document\n                    .querySelector(\"#jspsych-survey-text-\" + index)\n                    .querySelector(\"textarea, input\");\n                var val = q_element.value;\n                var name = q_element.attributes[\"data-name\"].value;\n                if (name == \"\") {\n                    name = id;\n                }\n                var obje = {};\n                obje[name] = val;\n                Object.assign(question_data, obje);\n            }\n            // save data\n            var trialdata = {\n                rt: response_time,\n                response: question_data,\n            };\n            display_element.innerHTML = \"\";\n            // next trial\n            this.jsPsych.finishTrial(trialdata);\n        });\n        var startTime = performance.now();\n    }\n}\nSurveyNumberPlugin.info = info;\nexport default SurveyNumberPlugin;\n//# sourceMappingURL=index.js.map","references":["/Users/jackie3/Desktop/URSI/jspsych-contrib/node_modules/jspsych/dist/index.d.ts"],"map":"{\"version\":3,\"file\":\"index.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../src/index.ts\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"/Users/jackie3/Desktop/URSI/jspsych-contrib/packages/plugin-survey-number/node_modules/.cache/rollup-plugin-typescript2/placeholder/index.d.ts","writeByteOrderMark":false,"text":"import { JsPsych, JsPsychPlugin, ParameterType, TrialType } from \"jspsych\";\ndeclare const info: {\n    readonly name: \"survey-number\";\n    readonly parameters: {\n        readonly questions: {\n            readonly type: ParameterType.COMPLEX;\n            readonly array: true;\n            readonly pretty_name: \"Questions\";\n            readonly default: any;\n            readonly nested: {\n                /** Question prompt. */\n                readonly prompt: {\n                    readonly type: ParameterType.HTML_STRING;\n                    readonly pretty_name: \"Prompt\";\n                    readonly default: any;\n                };\n                /** Placeholder text in the response text box. */\n                readonly placeholder: {\n                    readonly type: ParameterType.STRING;\n                    readonly pretty_name: \"Placeholder\";\n                    readonly default: \"\";\n                };\n                /** The number of rows for the response text box. */\n                readonly rows: {\n                    readonly type: ParameterType.INT;\n                    readonly pretty_name: \"Rows\";\n                    readonly default: 1;\n                };\n                /** The number of columns for the response text box. */\n                readonly columns: {\n                    readonly type: ParameterType.INT;\n                    readonly pretty_name: \"Columns\";\n                    readonly default: 40;\n                };\n                /** Whether or not a response to this question must be given in order to continue. */\n                readonly required: {\n                    readonly type: ParameterType.BOOL;\n                    readonly pretty_name: \"Required\";\n                    readonly default: false;\n                };\n                /** Name of the question in the trial data. If no name is given, the questions are named Q0, Q1, etc. */\n                readonly name: {\n                    readonly type: ParameterType.STRING;\n                    readonly pretty_name: \"Question Name\";\n                    readonly default: \"\";\n                };\n            };\n        };\n        /** If true, the order of the questions in the 'questions' array will be randomized. */\n        readonly randomize_question_order: {\n            readonly type: ParameterType.BOOL;\n            readonly pretty_name: \"Randomize Question Order\";\n            readonly default: false;\n        };\n        /** HTML-formatted string to display at top of the page above all of the questions. */\n        readonly preamble: {\n            readonly type: ParameterType.HTML_STRING;\n            readonly pretty_name: \"Preamble\";\n            readonly default: any;\n        };\n        /** Label of the button to submit responses. */\n        readonly button_label: {\n            readonly type: ParameterType.STRING;\n            readonly pretty_name: \"Button label\";\n            readonly default: \"Continue\";\n        };\n        /** Setting this to true will enable browser auto-complete or auto-fill for the form. */\n        readonly autocomplete: {\n            readonly type: ParameterType.BOOL;\n            readonly pretty_name: \"Allow autocomplete\";\n            readonly default: false;\n        };\n    };\n};\ntype Info = typeof info;\n/**\n * **survey-number**\n *\n * Collects a number response in a text box\n *\n * @author Josh de Leeuw\n * @see {@link https://github.com/jspsych/jspsych-contrib/packages/plugin-survey-number/README.md}}\n */\ndeclare class SurveyNumberPlugin implements JsPsychPlugin<Info> {\n    private jsPsych;\n    static info: {\n        readonly name: \"survey-number\";\n        readonly parameters: {\n            readonly questions: {\n                readonly type: ParameterType.COMPLEX;\n                readonly array: true;\n                readonly pretty_name: \"Questions\";\n                readonly default: any;\n                readonly nested: {\n                    /** Question prompt. */\n                    readonly prompt: {\n                        readonly type: ParameterType.HTML_STRING;\n                        readonly pretty_name: \"Prompt\";\n                        readonly default: any;\n                    };\n                    /** Placeholder text in the response text box. */\n                    readonly placeholder: {\n                        readonly type: ParameterType.STRING;\n                        readonly pretty_name: \"Placeholder\";\n                        readonly default: \"\";\n                    };\n                    /** The number of rows for the response text box. */\n                    readonly rows: {\n                        readonly type: ParameterType.INT;\n                        readonly pretty_name: \"Rows\";\n                        readonly default: 1;\n                    };\n                    /** The number of columns for the response text box. */\n                    readonly columns: {\n                        readonly type: ParameterType.INT;\n                        readonly pretty_name: \"Columns\";\n                        readonly default: 40;\n                    };\n                    /** Whether or not a response to this question must be given in order to continue. */\n                    readonly required: {\n                        readonly type: ParameterType.BOOL;\n                        readonly pretty_name: \"Required\";\n                        readonly default: false;\n                    };\n                    /** Name of the question in the trial data. If no name is given, the questions are named Q0, Q1, etc. */\n                    readonly name: {\n                        readonly type: ParameterType.STRING;\n                        readonly pretty_name: \"Question Name\";\n                        readonly default: \"\";\n                    };\n                };\n            };\n            /** If true, the order of the questions in the 'questions' array will be randomized. */\n            readonly randomize_question_order: {\n                readonly type: ParameterType.BOOL;\n                readonly pretty_name: \"Randomize Question Order\";\n                readonly default: false;\n            };\n            /** HTML-formatted string to display at top of the page above all of the questions. */\n            readonly preamble: {\n                readonly type: ParameterType.HTML_STRING;\n                readonly pretty_name: \"Preamble\";\n                readonly default: any;\n            };\n            /** Label of the button to submit responses. */\n            readonly button_label: {\n                readonly type: ParameterType.STRING;\n                readonly pretty_name: \"Button label\";\n                readonly default: \"Continue\";\n            };\n            /** Setting this to true will enable browser auto-complete or auto-fill for the form. */\n            readonly autocomplete: {\n                readonly type: ParameterType.BOOL;\n                readonly pretty_name: \"Allow autocomplete\";\n                readonly default: false;\n            };\n        };\n    };\n    constructor(jsPsych: JsPsych);\n    trial(display_element: HTMLElement, trial: TrialType<Info>): void;\n}\nexport default SurveyNumberPlugin;\n"}}
