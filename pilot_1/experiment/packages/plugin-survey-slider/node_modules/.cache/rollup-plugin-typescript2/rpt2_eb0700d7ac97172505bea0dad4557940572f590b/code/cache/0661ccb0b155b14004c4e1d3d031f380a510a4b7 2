{"code":"import { ParameterType } from \"jspsych\";\n// BOOL, STRING, INT, FLOAT, FUNCTION, KEY, KEYS, SELECT, HTML_STRING, IMAGE, AUDIO, VIDEO, OBJECT, COMPLEX\nconst info = {\n    name: \"survey-slider\",\n    parameters: {\n        questions: {\n            type: ParameterType.COMPLEX,\n            array: true,\n            pretty_name: \"Questions\",\n            default: undefined,\n            nested: {\n                /** The HTML string to be displayed */\n                stimulus: {\n                    type: ParameterType.HTML_STRING,\n                    pretty_name: \"Stimulus\",\n                    default: \"\",\n                },\n                prompt: {\n                    type: ParameterType.STRING,\n                    pretty_name: \"Prompt\",\n                    default: undefined,\n                    description: \"Content to be displayed below the stimulus and above the slider\",\n                },\n                // Labels to appear to the left of each slider, one in line with the top row ticks and one in line with the bottom\n                labels: {\n                    type: ParameterType.STRING,\n                    pretty_name: \"Labels\",\n                    default: [],\n                    array: true,\n                    description: \"Labels of the sliders.\",\n                },\n                /** Array containing the ticks to show along the slider. Ticks will be displayed at equidistant locations along the slider. Note this parameter is called Labels in the original plugin.*/\n                ticks: {\n                    type: ParameterType.HTML_STRING,\n                    pretty_name: \"Ticks\",\n                    default: [],\n                    array: true,\n                    description: \"Ticks of the sliders.\",\n                },\n                name: {\n                    type: ParameterType.STRING,\n                    pretty_name: \"Question Name\",\n                    default: \"\",\n                    description: \"Controls the name of data values associated with this question\",\n                },\n                min: {\n                    type: ParameterType.INT,\n                    pretty_name: \"Min slider\",\n                    default: 0,\n                    description: \"Sets the minimum value of the slider.\",\n                },\n                max: {\n                    type: ParameterType.INT,\n                    pretty_name: \"Max slider\",\n                    default: 100,\n                    description: \"Sets the maximum value of the slider\",\n                },\n                slider_start: {\n                    type: ParameterType.INT,\n                    pretty_name: \"Slider starting value\",\n                    default: 50,\n                    description: \"Sets the starting value of the slider\",\n                },\n                step: {\n                    type: ParameterType.INT,\n                    pretty_name: \"Step\",\n                    default: 1,\n                    description: \"Sets the step of the slider\",\n                },\n            },\n        },\n        randomize_question_order: {\n            type: ParameterType.BOOL,\n            pretty_name: \"Randomize Question Order\",\n            default: false,\n            description: \"If true, the order of the questions will be randomized\",\n        },\n        preamble: {\n            type: ParameterType.HTML_STRING,\n            pretty_name: \"Preamble\",\n            default: null,\n            description: \"String to display at top of the page.\",\n        },\n        button_label: {\n            type: ParameterType.STRING,\n            pretty_name: \"Button label\",\n            default: \"Continue\",\n            description: \"Label of the button.\",\n        },\n        autocomplete: {\n            type: ParameterType.BOOL,\n            pretty_name: \"Allow autocomplete\",\n            default: false,\n            description: \"Setting this to true will enable browser auto-complete or auto-fill for the form.\",\n        },\n        require_movement: {\n            type: ParameterType.BOOL,\n            pretty_name: \"Require movement\",\n            default: false,\n            description: \"If true, the participant will have to move the slider before continuing.\",\n        },\n        slider_width: {\n            type: ParameterType.INT,\n            pretty_name: \"Slider width\",\n            default: 500,\n            description: \"Width of the slider in pixels.\",\n        },\n    },\n};\n/**\n * **survey-slider**\n *\n * Add several analogue scales on the same page for use in questionnaires\n *\n * @author Dominique Makowski\n * @see {@link https://github.com/jspsych/jspsych-contrib/packages/plugin-survey-slider/README.md}}\n */\nclass SurveySliderPlugin {\n    constructor(jsPsych) {\n        this.jsPsych = jsPsych;\n    }\n    trial(display_element, trial) {\n        for (var i = 0; i < trial.questions.length; i++) {\n            //same as survey-number\n            if (typeof trial.questions[i].value == \"undefined\") {\n                trial.questions[i].value = \"\";\n            }\n        }\n        // half of the thumb width value from jspsych.css, used to adjust the label positions\n        var half_thumb_width = 7.5;\n        var html = '<div id=\"jspsych-html-slider-response-wrapper\" style=\"margin: 100px 0px;\">';\n        html +=\n            '<div class=\"jspsych-html-slider-response-container\" style=\"position:relative; margin: 0 auto 3em auto; ';\n        if (trial.slider_width !== null) {\n            html += \"width:\" + trial.slider_width + \"px;\";\n        }\n        else {\n            html += \"width:auto;\";\n        }\n        html += '\">';\n        // show preamble text\n        if (trial.preamble !== null) {\n            // html += '<div style=\"position: relative; left: calc(-20%); width:130%\" id=\"jspsych-survey-slider-preamble\" class=\"jspsych-survey-slider-preamble\">'+trial.preamble+'</div><br>';\n            html +=\n                '<div style=\"position: relative; width:100%\" id=\"jspsych-survey-slider-preamble\" class=\"jspsych-survey-slider-preamble\">' +\n                    trial.preamble +\n                    \"</div><br>\";\n        }\n        if (trial.autocomplete) {\n            html += '<form id=\"jspsych-survey-slider-form\">';\n        }\n        else {\n            html += '<form id=\"jspsych-survey-slider-form\" autocomplete=\"off\">';\n        }\n        // add sliders questions ///\n        // generate question order. this is randomized here as opposed to randomizing the order of trial.questions\n        // so that the data are always associated with the same question regardless of order\n        var question_order = [];\n        for (var i = 0; i < trial.questions.length; i++) {\n            question_order.push(i);\n        }\n        if (trial.randomize_question_order) {\n            // const shuffle = () => {\n            //   question_order = this.jsPsych.randomization.shuffle(question_order);\n            // }\n            question_order = this.jsPsych.randomization.shuffle(question_order);\n        }\n        for (var i = 0; i < trial.questions.length; i++) {\n            var question = trial.questions[question_order[i]];\n            // Add stimulus\n            html += '<div id=\"jspsych-html-slider-response-stimulus\">' + question.stimulus + \"</div>\";\n            // add prompt\n            html += '<label class=\"jspsych-survey-slider-statement\">' + question.prompt + \"</label><br>\";\n            // add top left label\n            if (question.labels.length > 0) {\n                html +=\n                    '<div style=\"font-size: 100%; font-weight: bold; position: absolute; left: calc(-15%)\">' +\n                        question.labels[0] +\n                        \"</div>\";\n            }\n            // html += '<div style=\"font-size: 100%; font-weight: bold; position: absolute; right: calc(-25%)\">' + question.labels[1] + '</div>'\n            // Add top row ticks in ascending order\n            // for(var j=0; j < question.ticks.length; j++){\n            //   var label_width_perc = 95/(question.ticks.length-1);\n            //   var percent_of_range = 5 + j * (95/(question.ticks.length - 1));\n            //   var percent_dist_from_center = ((percent_of_range-50)/50)*100;\n            //   var offset = (percent_dist_from_center * half_thumb_width)/100;\n            //   html += '<div style=\"border: 1px solid transparent; position: absolute; '+\n            //   'left:calc('+percent_of_range+'% - ('+label_width_perc+'% / 2) - '+offset+'px); text-align: center; width: '+label_width_perc+'%;\">';\n            //   html += '<span style=\"text-align: center; font-size: 100%;\">'+question.ticks[j]+'</span>';\n            //   html += '</div>'\n            // }\n            // html += '<br>'\n            // add sliders\n            // html += '<input style=\"width: 95%; float: right\" type=\"range\" class=\"jspsych-slider\" value=\"'+(question.slider_start)+'\" min=\"'+question.min+'\" max=\"'+question.max+'\" step=\"'+question.step+'\" id=\"jspsych-html-slider-response-response-'+i+'\" name=\"Q'+i+'\" data-name=\"'+question.name+'\"></input><br>';\n            html +=\n                '<input style=\"width: 100%\" type=\"range\" class=\"jspsych-slider\" value=\"' +\n                    question.slider_start +\n                    '\" min=\"' +\n                    question.min +\n                    '\" max=\"' +\n                    question.max +\n                    '\" step=\"' +\n                    question.step +\n                    '\" id=\"jspsych-html-slider-response-response-' +\n                    i +\n                    '\" name=\"Q' +\n                    i +\n                    '\" data-name=\"' +\n                    question.name +\n                    '\"></input><br>';\n            // add bottom left label\n            if (question.labels.length > 0) {\n                html +=\n                    '<div style=\"font-size: 100%; font-weight: bold; position: absolute; left: calc(-15%)\">' +\n                        question.labels[1] +\n                        \"</div>\";\n            }\n            // Bottom row ticks - reverse the ticks list and then do the same thing as before\n            // var reversed_ticks = question.ticks.reverse()\n            // for(var j=0; j < question.ticks.length; j++){\n            //   var label_width_perc = 95/(question.ticks.length-1);\n            //   var percent_of_range = 5 + j * (95/(question.ticks.length - 1));\n            //   var percent_dist_from_center = ((percent_of_range-50)/50)*100;\n            //   var offset = (percent_dist_from_center * half_thumb_width)/100;\n            //   html += '<div style=\"border: 1px solid transparent; display: inline-block; position: absolute; '+\n            //   'left:calc('+percent_of_range+'% - ('+label_width_perc+'% / 2) - '+offset+'px); text-align: center; width: '+label_width_perc+'%;\">';\n            //   html += '<span style=\"text-align: center; font-size: 80%;\">'+reversed_ticks[j]+'</span>';\n            //   html += '</div>'\n            // }\n            for (var j = 0; j < question.ticks.length; j++) {\n                var label_width_perc = 100 / (question.ticks.length - 1);\n                var percent_of_range = j * (100 / (question.ticks.length - 1));\n                var percent_dist_from_center = ((percent_of_range - 50) / 50) * 100;\n                var offset = (percent_dist_from_center * half_thumb_width) / 100;\n                html +=\n                    '<div style=\"border: 1px solid transparent; position: absolute; ' +\n                        \"left:calc(\" +\n                        percent_of_range +\n                        \"% - (\" +\n                        label_width_perc +\n                        \"% / 2) - \" +\n                        offset +\n                        \"px); text-align: center; width: \" +\n                        label_width_perc +\n                        '%;\">';\n                html +=\n                    '<span style=\"text-align: center; font-size: 100%;\">' + question.ticks[j] + \"</span>\";\n                html += \"</div>\";\n            }\n            // add some space between the sliders\n            html += \"<br/><br/>\";\n        }\n        // add some space before the next button\n        html += \"<br/>\";\n        // add submit button\n        html +=\n            '<input type=\"submit\" id=\"jspsych-survey-slider-next\" class=\"jspsych-survey-slider jspsych-btn\" value=\"' +\n                trial.button_label +\n                '\"></input>';\n        html += \"</form>\";\n        html += \"</div>\";\n        html += \"</div>\";\n        display_element.innerHTML = html;\n        // require responses\n        if (trial.require_movement) {\n            // disable by default the next button\n            document.getElementById(\"jspsych-survey-slider-next\").disabled = true;\n            // check whether all sliders have been clicked\n            function check_reponses() {\n                var all_sliders = document.querySelectorAll(\".jspsych-slider\");\n                var all_clicked = true;\n                for (var i = 0; i < all_sliders.length; i++) {\n                    if (!all_sliders[i].classList.contains(\"clicked\")) {\n                        // if any one slider doesn't have the 'clicked' class, then we know that they haven't all been clicked\n                        all_clicked = false;\n                        break;\n                    }\n                }\n                if (all_clicked) {\n                    // if they have been clicked then enable the next button\n                    document.getElementById(\"jspsych-survey-slider-next\").disabled =\n                        false;\n                }\n            }\n            var all_sliders = document.querySelectorAll(\".jspsych-slider\");\n            all_sliders.forEach(function (slider) {\n                slider.addEventListener(\"click\", function () {\n                    slider.classList.add(\"clicked\"); // record the fact that this slider has been clicked\n                    check_reponses(); // each time a slider is clicked, check to see if they've all been clicked\n                });\n                slider.addEventListener(\"change\", function () {\n                    slider.classList.add(\"clicked\"); // record the fact that this slider has been clicked\n                    check_reponses(); // each time a slider is clicked, check to see if they've all been clicked\n                });\n            });\n        }\n        // display_element.querySelector('#jspsych-survey-slider-form').addEventListener('submit', function(e){\n        // Josh de Leeuw responded to my post in the support thread and told me to replace the line above with the line below but\n        // I still have the same error message as I did before\n        display_element.querySelector(\"#jspsych-survey-slider-form\").addEventListener(\"submit\", (e) => {\n            e.preventDefault();\n            // measure response time\n            var endTime = performance.now();\n            var response_time = endTime - startTime;\n            // create object to hold responses\n            var question_data = {};\n            // hold responses\n            var matches = display_element.querySelectorAll('input[type=\"range\"]');\n            // store responses\n            for (var index = 0; index < matches.length; index++) {\n                var q_element = document.querySelector(\"#jspsych-html-slider-response-response-\" + index); //CHECK\n                var id = q_element.name;\n                var response = q_element.value;\n                var obje = {};\n                if (matches[index].attributes[\"data-name\"].value !== \"\") {\n                    var name = matches[index].attributes[\"data-name\"].value;\n                }\n                else {\n                    var name = id;\n                }\n                obje[name] = response;\n                Object.assign(question_data, obje);\n            }\n            // save data\n            var trial_data = {\n                rt: response_time,\n                response: JSON.stringify(question_data),\n                question_order: JSON.stringify(question_order),\n            };\n            display_element.innerHTML = \"\";\n            // next trial\n            this.jsPsych.finishTrial(trial_data);\n        });\n        var startTime = performance.now();\n    }\n}\nSurveySliderPlugin.info = info;\nexport default SurveySliderPlugin;\n//# sourceMappingURL=index.js.map","references":["/Users/jackie3/Desktop/URSI/jspsych-contrib/node_modules/jspsych/dist/index.d.ts"],"map":"{\"version\":3,\"file\":\"index.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../src/index.ts\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"/Users/jackie3/Desktop/URSI/jspsych-contrib/packages/plugin-survey-slider/node_modules/.cache/rollup-plugin-typescript2/placeholder/index.d.ts","writeByteOrderMark":false,"text":"import { JsPsych, JsPsychPlugin, ParameterType, TrialType } from \"jspsych\";\ndeclare const info: {\n    readonly name: \"survey-slider\";\n    readonly parameters: {\n        readonly questions: {\n            readonly type: ParameterType.COMPLEX;\n            readonly array: true;\n            readonly pretty_name: \"Questions\";\n            readonly default: any;\n            readonly nested: {\n                /** The HTML string to be displayed */\n                readonly stimulus: {\n                    readonly type: ParameterType.HTML_STRING;\n                    readonly pretty_name: \"Stimulus\";\n                    readonly default: \"\";\n                };\n                readonly prompt: {\n                    readonly type: ParameterType.STRING;\n                    readonly pretty_name: \"Prompt\";\n                    readonly default: any;\n                    readonly description: \"Content to be displayed below the stimulus and above the slider\";\n                };\n                readonly labels: {\n                    readonly type: ParameterType.STRING;\n                    readonly pretty_name: \"Labels\";\n                    readonly default: readonly [];\n                    readonly array: true;\n                    readonly description: \"Labels of the sliders.\";\n                };\n                /** Array containing the ticks to show along the slider. Ticks will be displayed at equidistant locations along the slider. Note this parameter is called Labels in the original plugin.*/\n                readonly ticks: {\n                    readonly type: ParameterType.HTML_STRING;\n                    readonly pretty_name: \"Ticks\";\n                    readonly default: readonly [];\n                    readonly array: true;\n                    readonly description: \"Ticks of the sliders.\";\n                };\n                readonly name: {\n                    readonly type: ParameterType.STRING;\n                    readonly pretty_name: \"Question Name\";\n                    readonly default: \"\";\n                    readonly description: \"Controls the name of data values associated with this question\";\n                };\n                readonly min: {\n                    readonly type: ParameterType.INT;\n                    readonly pretty_name: \"Min slider\";\n                    readonly default: 0;\n                    readonly description: \"Sets the minimum value of the slider.\";\n                };\n                readonly max: {\n                    readonly type: ParameterType.INT;\n                    readonly pretty_name: \"Max slider\";\n                    readonly default: 100;\n                    readonly description: \"Sets the maximum value of the slider\";\n                };\n                readonly slider_start: {\n                    readonly type: ParameterType.INT;\n                    readonly pretty_name: \"Slider starting value\";\n                    readonly default: 50;\n                    readonly description: \"Sets the starting value of the slider\";\n                };\n                readonly step: {\n                    readonly type: ParameterType.INT;\n                    readonly pretty_name: \"Step\";\n                    readonly default: 1;\n                    readonly description: \"Sets the step of the slider\";\n                };\n            };\n        };\n        readonly randomize_question_order: {\n            readonly type: ParameterType.BOOL;\n            readonly pretty_name: \"Randomize Question Order\";\n            readonly default: false;\n            readonly description: \"If true, the order of the questions will be randomized\";\n        };\n        readonly preamble: {\n            readonly type: ParameterType.HTML_STRING;\n            readonly pretty_name: \"Preamble\";\n            readonly default: any;\n            readonly description: \"String to display at top of the page.\";\n        };\n        readonly button_label: {\n            readonly type: ParameterType.STRING;\n            readonly pretty_name: \"Button label\";\n            readonly default: \"Continue\";\n            readonly description: \"Label of the button.\";\n        };\n        readonly autocomplete: {\n            readonly type: ParameterType.BOOL;\n            readonly pretty_name: \"Allow autocomplete\";\n            readonly default: false;\n            readonly description: \"Setting this to true will enable browser auto-complete or auto-fill for the form.\";\n        };\n        readonly require_movement: {\n            readonly type: ParameterType.BOOL;\n            readonly pretty_name: \"Require movement\";\n            readonly default: false;\n            readonly description: \"If true, the participant will have to move the slider before continuing.\";\n        };\n        readonly slider_width: {\n            readonly type: ParameterType.INT;\n            readonly pretty_name: \"Slider width\";\n            readonly default: 500;\n            readonly description: \"Width of the slider in pixels.\";\n        };\n    };\n};\ntype Info = typeof info;\n/**\n * **survey-slider**\n *\n * Add several analogue scales on the same page for use in questionnaires\n *\n * @author Dominique Makowski\n * @see {@link https://github.com/jspsych/jspsych-contrib/packages/plugin-survey-slider/README.md}}\n */\ndeclare class SurveySliderPlugin implements JsPsychPlugin<Info> {\n    private jsPsych;\n    static info: {\n        readonly name: \"survey-slider\";\n        readonly parameters: {\n            readonly questions: {\n                readonly type: ParameterType.COMPLEX;\n                readonly array: true;\n                readonly pretty_name: \"Questions\";\n                readonly default: any;\n                readonly nested: {\n                    /** The HTML string to be displayed */\n                    readonly stimulus: {\n                        readonly type: ParameterType.HTML_STRING;\n                        readonly pretty_name: \"Stimulus\";\n                        readonly default: \"\";\n                    };\n                    readonly prompt: {\n                        readonly type: ParameterType.STRING;\n                        readonly pretty_name: \"Prompt\";\n                        readonly default: any;\n                        readonly description: \"Content to be displayed below the stimulus and above the slider\";\n                    };\n                    readonly labels: {\n                        readonly type: ParameterType.STRING;\n                        readonly pretty_name: \"Labels\";\n                        readonly default: readonly [];\n                        readonly array: true;\n                        readonly description: \"Labels of the sliders.\";\n                    };\n                    /** Array containing the ticks to show along the slider. Ticks will be displayed at equidistant locations along the slider. Note this parameter is called Labels in the original plugin.*/\n                    readonly ticks: {\n                        readonly type: ParameterType.HTML_STRING;\n                        readonly pretty_name: \"Ticks\";\n                        readonly default: readonly [];\n                        readonly array: true;\n                        readonly description: \"Ticks of the sliders.\";\n                    };\n                    readonly name: {\n                        readonly type: ParameterType.STRING;\n                        readonly pretty_name: \"Question Name\";\n                        readonly default: \"\";\n                        readonly description: \"Controls the name of data values associated with this question\";\n                    };\n                    readonly min: {\n                        readonly type: ParameterType.INT;\n                        readonly pretty_name: \"Min slider\";\n                        readonly default: 0;\n                        readonly description: \"Sets the minimum value of the slider.\";\n                    };\n                    readonly max: {\n                        readonly type: ParameterType.INT;\n                        readonly pretty_name: \"Max slider\";\n                        readonly default: 100;\n                        readonly description: \"Sets the maximum value of the slider\";\n                    };\n                    readonly slider_start: {\n                        readonly type: ParameterType.INT;\n                        readonly pretty_name: \"Slider starting value\";\n                        readonly default: 50;\n                        readonly description: \"Sets the starting value of the slider\";\n                    };\n                    readonly step: {\n                        readonly type: ParameterType.INT;\n                        readonly pretty_name: \"Step\";\n                        readonly default: 1;\n                        readonly description: \"Sets the step of the slider\";\n                    };\n                };\n            };\n            readonly randomize_question_order: {\n                readonly type: ParameterType.BOOL;\n                readonly pretty_name: \"Randomize Question Order\";\n                readonly default: false;\n                readonly description: \"If true, the order of the questions will be randomized\";\n            };\n            readonly preamble: {\n                readonly type: ParameterType.HTML_STRING;\n                readonly pretty_name: \"Preamble\";\n                readonly default: any;\n                readonly description: \"String to display at top of the page.\";\n            };\n            readonly button_label: {\n                readonly type: ParameterType.STRING;\n                readonly pretty_name: \"Button label\";\n                readonly default: \"Continue\";\n                readonly description: \"Label of the button.\";\n            };\n            readonly autocomplete: {\n                readonly type: ParameterType.BOOL;\n                readonly pretty_name: \"Allow autocomplete\";\n                readonly default: false;\n                readonly description: \"Setting this to true will enable browser auto-complete or auto-fill for the form.\";\n            };\n            readonly require_movement: {\n                readonly type: ParameterType.BOOL;\n                readonly pretty_name: \"Require movement\";\n                readonly default: false;\n                readonly description: \"If true, the participant will have to move the slider before continuing.\";\n            };\n            readonly slider_width: {\n                readonly type: ParameterType.INT;\n                readonly pretty_name: \"Slider width\";\n                readonly default: 500;\n                readonly description: \"Width of the slider in pixels.\";\n            };\n        };\n    };\n    constructor(jsPsych: JsPsych);\n    trial(display_element: HTMLElement, trial: TrialType<Info>): void;\n}\nexport default SurveySliderPlugin;\n"}}
