{"code":"import { ParameterType } from \"jspsych\";\nimport Snap from \"snapsvg\";\nconst info = {\n    name: \"vsl-animate-occlusion\",\n    parameters: {\n        /** Array containing path(s) to image file(s). */\n        stimuli: {\n            type: ParameterType.IMAGE,\n            pretty_name: \"Stimuli\",\n            default: undefined,\n            array: true,\n        },\n        /** Array containing the key(s) that the subject is allowed to press in order to respond to the stimulus. */\n        choices: {\n            type: ParameterType.KEYS,\n            pretty_name: \"Choices\",\n            default: \"ALL_KEYS\",\n        },\n        /** Array specifying the width and height of the area that the animation will display in. */\n        canvas_size: {\n            type: ParameterType.INT,\n            pretty_name: \"Canvas size\",\n            array: true,\n            default: [400, 400],\n        },\n        /** Array specifying the width and height of the images to show. */\n        image_size: {\n            type: ParameterType.INT,\n            pretty_name: \"Image size\",\n            array: true,\n            default: [100, 100],\n        },\n        /** Which direction the stimulus should move first. */\n        initial_direction: {\n            type: ParameterType.SELECT,\n            pretty_name: \"Initial direction\",\n            choices: [\"left\", \"right\"],\n            default: \"left\",\n        },\n        /** If true, display a rectangle in the center of the screen that is just wide enough to occlude the image completely as it passes behind. */\n        occlude_center: {\n            type: ParameterType.BOOL,\n            pretty_name: \"Occlude center\",\n            default: true,\n        },\n        /** How long it takes for a stimulus in the sequence to make a complete cycle. */\n        cycle_duration: {\n            type: ParameterType.INT,\n            pretty_name: \"Cycle duration\",\n            default: 1000,\n        },\n        /** How long to wait before the stimuli starts moving from behind the center rectangle. */\n        pre_movement_duration: {\n            type: ParameterType.INT,\n            pretty_name: \"Pre movement duration\",\n            default: 500,\n        },\n    },\n};\n/**\n * **vsl-animate-occlusion**\n *\n * jsPsych plugin for showing animations that mimic the experiment described in\n * Fiser, J., & Aslin, R. N. (2002). Statistical learning of higher-order\n * temporal structure from visual shape sequences. Journal of Experimental\n * Psychology: Learning, Memory, and Cognition, 28(3), 458.\n *\n * @author Josh de Leeuw\n * @see {@link https://www.jspsych.org/plugins/jspsych-vsl-animate-occlusion/ vsl-animate-occlusion plugin documentation on jspsych.org}\n */\nclass VslAnimateOcclusionPlugin {\n    constructor(jsPsych) {\n        this.jsPsych = jsPsych;\n    }\n    trial(display_element, trial) {\n        // variable to keep track of timing info and responses\n        var start_time;\n        var responses = [];\n        var directions = [\n            [\n                {\n                    params: {\n                        x: trial.canvas_size[0] - trial.image_size[0],\n                    },\n                    ms: trial.cycle_duration / 2,\n                },\n                {\n                    params: {\n                        x: trial.canvas_size[0] / 2 - trial.image_size[0] / 2,\n                    },\n                    ms: trial.cycle_duration / 2,\n                },\n            ],\n            [\n                {\n                    params: {\n                        x: 0,\n                    },\n                    ms: trial.cycle_duration / 2,\n                },\n                {\n                    params: {\n                        x: trial.canvas_size[0] / 2 - trial.image_size[0] / 2,\n                    },\n                    ms: trial.cycle_duration / 2,\n                },\n            ],\n        ];\n        var which_image = 0;\n        var next_direction = trial.initial_direction == \"right\" ? 0 : 1;\n        function next_step() {\n            if (trial.stimuli.length == which_image) {\n                endTrial();\n            }\n            else {\n                var d = directions[next_direction];\n                next_direction === 0 ? (next_direction = 1) : (next_direction = 0);\n                var i = trial.stimuli[which_image];\n                which_image++;\n                c.animate(d[0].params, d[0].ms, mina.linear, function () {\n                    c.animate(d[1].params, d[1].ms, mina.linear, function () {\n                        next_step();\n                    });\n                });\n                c.attr({\n                    href: i,\n                });\n                // start timer for this trial\n                start_time = performance.now();\n            }\n        }\n        display_element.innerHTML =\n            \"<svg id='jspsych-vsl-animate-occlusion-canvas' width=\" +\n                trial.canvas_size[0] +\n                \" height=\" +\n                trial.canvas_size[1] +\n                \"></svg>\";\n        var paper = Snap(\"#jspsych-vsl-animate-occlusion-canvas\");\n        var c = paper\n            .image(trial.stimuli[which_image], trial.canvas_size[0] / 2 - trial.image_size[0] / 2, trial.canvas_size[1] / 2 - trial.image_size[1] / 2, trial.image_size[0], trial.image_size[1])\n            .attr({\n            id: \"jspsych-vsl-animate-occlusion-moving-image\",\n        });\n        display_element\n            .querySelector(\"#jspsych-vsl-animate-occlusion-moving-image\")\n            .removeAttribute(\"preserveAspectRatio\");\n        if (trial.occlude_center) {\n            paper\n                .rect(trial.canvas_size[0] / 2 - trial.image_size[0] / 2, 0, trial.image_size[0], trial.canvas_size[1])\n                .attr({\n                fill: \"#000\",\n            });\n        }\n        // add key listener\n        var after_response = function (info) {\n            responses.push({\n                key: info.key,\n                stimulus: which_image - 1,\n                rt: info.rt,\n            });\n        };\n        var key_listener = this.jsPsych.pluginAPI.getKeyboardResponse({\n            callback_function: after_response,\n            valid_responses: trial.choices,\n            rt_method: \"performance\",\n            persist: true,\n            allow_held_key: false,\n        });\n        if (trial.pre_movement_duration > 0) {\n            this.jsPsych.pluginAPI.setTimeout(function () {\n                next_step();\n            }, trial.pre_movement_duration);\n        }\n        else {\n            next_step();\n        }\n        const endTrial = () => {\n            display_element.innerHTML = \"\";\n            this.jsPsych.pluginAPI.cancelKeyboardResponse(key_listener);\n            var trial_data = {\n                stimuli: trial.stimuli,\n                response: responses,\n            };\n            this.jsPsych.finishTrial(trial_data);\n        };\n    }\n}\nVslAnimateOcclusionPlugin.info = info;\nexport default VslAnimateOcclusionPlugin;\n//# sourceMappingURL=index.js.map","references":["/Users/jackie3/Desktop/URSI/jspsych-contrib/node_modules/jspsych/dist/index.d.ts","/Users/jackie3/Desktop/URSI/jspsych-contrib/node_modules/@types/snapsvg/index.d.ts"],"map":"{\"version\":3,\"file\":\"index.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../src/index.ts\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"/Users/jackie3/Desktop/URSI/jspsych-contrib/packages/plugin-vsl-animate-occlusion/node_modules/.cache/rollup-plugin-typescript2/placeholder/index.d.ts","writeByteOrderMark":false,"text":"import { JsPsych, JsPsychPlugin, ParameterType, TrialType } from \"jspsych\";\ndeclare const info: {\n    readonly name: \"vsl-animate-occlusion\";\n    readonly parameters: {\n        /** Array containing path(s) to image file(s). */\n        readonly stimuli: {\n            readonly type: ParameterType.IMAGE;\n            readonly pretty_name: \"Stimuli\";\n            readonly default: any;\n            readonly array: true;\n        };\n        /** Array containing the key(s) that the subject is allowed to press in order to respond to the stimulus. */\n        readonly choices: {\n            readonly type: ParameterType.KEYS;\n            readonly pretty_name: \"Choices\";\n            readonly default: \"ALL_KEYS\";\n        };\n        /** Array specifying the width and height of the area that the animation will display in. */\n        readonly canvas_size: {\n            readonly type: ParameterType.INT;\n            readonly pretty_name: \"Canvas size\";\n            readonly array: true;\n            readonly default: readonly [400, 400];\n        };\n        /** Array specifying the width and height of the images to show. */\n        readonly image_size: {\n            readonly type: ParameterType.INT;\n            readonly pretty_name: \"Image size\";\n            readonly array: true;\n            readonly default: readonly [100, 100];\n        };\n        /** Which direction the stimulus should move first. */\n        readonly initial_direction: {\n            readonly type: ParameterType.SELECT;\n            readonly pretty_name: \"Initial direction\";\n            readonly choices: readonly [\"left\", \"right\"];\n            readonly default: \"left\";\n        };\n        /** If true, display a rectangle in the center of the screen that is just wide enough to occlude the image completely as it passes behind. */\n        readonly occlude_center: {\n            readonly type: ParameterType.BOOL;\n            readonly pretty_name: \"Occlude center\";\n            readonly default: true;\n        };\n        /** How long it takes for a stimulus in the sequence to make a complete cycle. */\n        readonly cycle_duration: {\n            readonly type: ParameterType.INT;\n            readonly pretty_name: \"Cycle duration\";\n            readonly default: 1000;\n        };\n        /** How long to wait before the stimuli starts moving from behind the center rectangle. */\n        readonly pre_movement_duration: {\n            readonly type: ParameterType.INT;\n            readonly pretty_name: \"Pre movement duration\";\n            readonly default: 500;\n        };\n    };\n};\ntype Info = typeof info;\n/**\n * **vsl-animate-occlusion**\n *\n * jsPsych plugin for showing animations that mimic the experiment described in\n * Fiser, J., & Aslin, R. N. (2002). Statistical learning of higher-order\n * temporal structure from visual shape sequences. Journal of Experimental\n * Psychology: Learning, Memory, and Cognition, 28(3), 458.\n *\n * @author Josh de Leeuw\n * @see {@link https://www.jspsych.org/plugins/jspsych-vsl-animate-occlusion/ vsl-animate-occlusion plugin documentation on jspsych.org}\n */\ndeclare class VslAnimateOcclusionPlugin implements JsPsychPlugin<Info> {\n    private jsPsych;\n    static info: {\n        readonly name: \"vsl-animate-occlusion\";\n        readonly parameters: {\n            /** Array containing path(s) to image file(s). */\n            readonly stimuli: {\n                readonly type: ParameterType.IMAGE;\n                readonly pretty_name: \"Stimuli\";\n                readonly default: any;\n                readonly array: true;\n            };\n            /** Array containing the key(s) that the subject is allowed to press in order to respond to the stimulus. */\n            readonly choices: {\n                readonly type: ParameterType.KEYS;\n                readonly pretty_name: \"Choices\";\n                readonly default: \"ALL_KEYS\";\n            };\n            /** Array specifying the width and height of the area that the animation will display in. */\n            readonly canvas_size: {\n                readonly type: ParameterType.INT;\n                readonly pretty_name: \"Canvas size\";\n                readonly array: true;\n                readonly default: readonly [400, 400];\n            };\n            /** Array specifying the width and height of the images to show. */\n            readonly image_size: {\n                readonly type: ParameterType.INT;\n                readonly pretty_name: \"Image size\";\n                readonly array: true;\n                readonly default: readonly [100, 100];\n            };\n            /** Which direction the stimulus should move first. */\n            readonly initial_direction: {\n                readonly type: ParameterType.SELECT;\n                readonly pretty_name: \"Initial direction\";\n                readonly choices: readonly [\"left\", \"right\"];\n                readonly default: \"left\";\n            };\n            /** If true, display a rectangle in the center of the screen that is just wide enough to occlude the image completely as it passes behind. */\n            readonly occlude_center: {\n                readonly type: ParameterType.BOOL;\n                readonly pretty_name: \"Occlude center\";\n                readonly default: true;\n            };\n            /** How long it takes for a stimulus in the sequence to make a complete cycle. */\n            readonly cycle_duration: {\n                readonly type: ParameterType.INT;\n                readonly pretty_name: \"Cycle duration\";\n                readonly default: 1000;\n            };\n            /** How long to wait before the stimuli starts moving from behind the center rectangle. */\n            readonly pre_movement_duration: {\n                readonly type: ParameterType.INT;\n                readonly pretty_name: \"Pre movement duration\";\n                readonly default: 500;\n            };\n        };\n    };\n    constructor(jsPsych: JsPsych);\n    trial(display_element: HTMLElement, trial: TrialType<Info>): void;\n}\nexport default VslAnimateOcclusionPlugin;\n"}}
