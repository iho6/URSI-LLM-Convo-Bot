{"version":3,"file":"index.browser.min.js","sources":["../src/index.ts"],"sourcesContent":["import { JsPsych, JsPsychPlugin, ParameterType, TrialType } from \"jspsych\";\n\nconst info = <const>{\n  name: \"vsl-grid-scene\",\n  parameters: {\n    /** An array of images that defines a grid. */\n    stimuli: {\n      type: ParameterType.IMAGE,\n      pretty_name: \"Stimuli\",\n      array: true,\n      default: undefined,\n    },\n    /** Array specifying the width and height of the images to show. */\n    image_size: {\n      type: ParameterType.INT,\n      pretty_name: \"Image size\",\n      array: true,\n      default: [100, 100],\n    },\n    /** How long to show the stimulus for in milliseconds. */\n    trial_duration: {\n      type: ParameterType.INT,\n      pretty_name: \"Trial duration\",\n      default: 2000,\n    },\n  },\n};\n\ntype Info = typeof info;\n\n/**\n * **vsl-grid-scene**\n *\n * jsPsych plugin for showing scenes that mimic the experiments described in\n * Fiser, J., & Aslin, R. N. (2001). Unsupervised statistical learning of\n * higher-order spatial structures from visual scenes. Psychological science,\n * 12(6), 499-504.\n *\n * @author Josh de Leeuw\n * @see {@link https://www.jspsych.org/plugins/jspsych-vsl-grid-scene/ vsl-grid-scene plugin documentation on jspsych.org}\n */\nclass VslGridScenePlugin implements JsPsychPlugin<Info> {\n  static info = info;\n\n  constructor(private jsPsych: JsPsych) {}\n\n  trial(display_element: HTMLElement, trial: TrialType<Info>) {\n    display_element.innerHTML = VslGridScenePlugin.generate_stimulus(\n      trial.stimuli,\n      trial.image_size\n    );\n\n    this.jsPsych.pluginAPI.setTimeout(function () {\n      endTrial();\n    }, trial.trial_duration);\n\n    const endTrial = () => {\n      display_element.innerHTML = \"\";\n\n      var trial_data = {\n        stimulus: trial.stimuli,\n      };\n\n      this.jsPsych.finishTrial(trial_data);\n    };\n  }\n\n  static generate_stimulus(pattern, image_size: number[]) {\n    var nrows = pattern.length;\n    var ncols = pattern[0].length;\n\n    // create blank element to hold code that we generate\n    var html = '<div id=\"jspsych-vsl-grid-scene-dummy\" css=\"display: none;\">';\n\n    // create table\n    html +=\n      '<table id=\"jspsych-vsl-grid-scene table\" ' +\n      'style=\"border-collapse: collapse; margin-left: auto; margin-right: auto;\">';\n\n    for (var row = 0; row < nrows; row++) {\n      html +=\n        '<tr id=\"jspsych-vsl-grid-scene-table-row-' +\n        row +\n        '\" css=\"height: ' +\n        image_size[1] +\n        'px;\">';\n\n      for (var col = 0; col < ncols; col++) {\n        html +=\n          '<td id=\"jspsych-vsl-grid-scene-table-' +\n          row +\n          \"-\" +\n          col +\n          '\" ' +\n          'style=\"padding: ' +\n          image_size[1] / 10 +\n          \"px \" +\n          image_size[0] / 10 +\n          'px; border: 1px solid #555;\">' +\n          '<div id=\"jspsych-vsl-grid-scene-table-cell-' +\n          row +\n          \"-\" +\n          col +\n          '\" style=\"width: ' +\n          image_size[0] +\n          \"px; height: \" +\n          image_size[1] +\n          'px;\">';\n        if (pattern[row][col] !== 0) {\n          html +=\n            \"<img \" +\n            'src=\"' +\n            pattern[row][col] +\n            '\" style=\"width: ' +\n            image_size[0] +\n            \"px; height: \" +\n            image_size[1] +\n            '\"></img>';\n        }\n        html += \"</div>\";\n        html += \"</td>\";\n      }\n      html += \"</tr>\";\n    }\n\n    html += \"</table>\";\n    html += \"</div>\";\n\n    return html;\n  }\n}\n\nexport default VslGridScenePlugin;\n"],"names":["info","name","parameters","stimuli","type","ParameterType","IMAGE","pretty_name","array","default","undefined","image_size","INT","trial_duration","VslGridScenePlugin","jsPsych","_classCallCheck","this","key","value","pattern","nrows","length","ncols","html","row","col","display_element","trial","_this","innerHTML","generate_stimulus","pluginAPI","setTimeout","endTrial","trial_data","stimulus","finishTrial"],"mappings":"kiBAEA,IAAMA,EAAc,CAClBC,KAAM,iBACNC,WAAY,CAEVC,QAAS,CACPC,KAAMC,EAAaA,cAACC,MACpBC,YAAa,UACbC,OAAO,EACPC,aAASC,GAGXC,WAAY,CACVP,KAAMC,EAAaA,cAACO,IACpBL,YAAa,aACbC,OAAO,EACPC,QAAS,CAAC,IAAK,MAGjBI,eAAgB,CACdT,KAAMC,EAAaA,cAACO,IACpBL,YAAa,iBACbE,QAAS,OAkBTK,EAAkB,WAGtB,SAAAA,EAAoBC,gGAAgBC,MAAAF,GAAhBG,KAAOF,QAAPA,CAAmB,WAqFtC,SArFuCD,IAqBvC,CAAA,CAAAI,IAAA,oBAAAC,MAED,SAAyBC,EAAST,GAChC,IAAIU,EAAQD,EAAQE,OAChBC,EAAQH,EAAQ,GAAGE,OAGnBE,EAAO,+DAGXA,GACE,sHAGF,IAAK,IAAIC,EAAM,EAAGA,EAAMJ,EAAOI,IAAO,CACpCD,GACE,4CACAC,EACA,kBACAd,EAAW,GACX,QAEF,IAAK,IAAIe,EAAM,EAAGA,EAAMH,EAAOG,IAC7BF,GACE,wCACAC,EACA,IACAC,EAHA,qBAMAf,EAAW,GAAK,GAChB,MACAA,EAAW,GAAK,GARhB,2EAWAc,EACA,IACAC,EACA,mBACAf,EAAW,GACX,eACAA,EAAW,GACX,QACwB,IAAtBS,EAAQK,GAAKC,KACfF,GACE,aAEAJ,EAAQK,GAAKC,GACb,mBACAf,EAAW,GACX,eACAA,EAAW,GACX,YAEJa,GAAQ,SACRA,GAAQ,QAEVA,GAAQ,OACV,CAKA,OAHAA,GAAQ,WACRA,GAAQ,QAGV,OArFwC,CAAA,CAAAN,IAAA,QAAAC,MAExC,SAAMQ,EAA8BC,GAAsB,IAAAC,EAAAZ,KACxDU,EAAgBG,UAAYhB,EAAmBiB,kBAC7CH,EAAMzB,QACNyB,EAAMjB,YAGRM,KAAKF,QAAQiB,UAAUC,YAAW,WAChCC,GACF,GAAGN,EAAMf,gBAET,IAAMqB,EAAW,WACfP,EAAgBG,UAAY,GAE5B,IAAIK,EAAa,CACfC,SAAUR,EAAMzB,SAGlB0B,EAAKd,QAAQsB,YAAYF,GAE7B,oFAgECrB,CAAA,CAxFqB,UACfA,EAAId,KAAGA"}