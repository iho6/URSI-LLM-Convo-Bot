{"version":3,"file":"index.browser.js","sources":["../src/index.ts"],"sourcesContent":["import { JsPsych, JsPsychPlugin, ParameterType, TrialType } from \"jspsych\";\n\nconst info = <const>{\n  name: \"pipe\",\n  parameters: {\n    /**\n     * The 12-character experiment ID provided by pipe.jspsych.org.\n     */\n    experiment_id: {\n      type: ParameterType.STRING,\n      default: undefined,\n    },\n    /**\n     * The action to take. Can be `\"save\"`, `\"saveBase64\"`, or `\"condition\"`.\n     * If `\"save\"`, the data will be saved to the OSF.\n     * If `\"saveBase64\"`, the data should be a base64-encoded string and will be decoded to binary before being saved to the OSF.\n     * If `\"condition\"`, this will get the next condition for the experiment and save it in the data for this trial.\n     */\n    action: {\n      type: ParameterType.STRING,\n      default: undefined,\n    },\n    /**\n     * Name of the file to create on the OSF. It should include the extension.\n     * If the file already exists, no data will be saved.\n     */\n    filename: {\n      type: ParameterType.STRING,\n      default: null,\n    },\n    /**\n     * A string-based representation of the data to save.\n     *\n     * To save JSON, you can use `()=>jsPsych.data.get().json()`.\n     * To save CSV, you can use `()=>jsPsych.data.get().csv()`.\n     *\n     * The use of a function is necessary to get the updated data at\n     * the time of saving.\n     */\n    data_string: {\n      type: ParameterType.STRING,\n      default: null,\n    },\n    /**\n     * An html message to be displayed above the loading graphics in the experiment during data save.\n     */\n    wait_message: {\n      type: ParameterType.HTML_STRING,\n      default: `<p>Saving data. Please do not close this page.</p>`,\n    },\n  },\n};\n\ntype Info = typeof info;\n\n/**\n * **jsPsychPipe**\n *\n * This plugin facilitates communication with DataPipe (https://pipe.jspsych.org), a tool for\n * sending data from jsPsych experiments to the OSF (https://osf.io/). You will need a DataPipe\n * account to use this plugin.\n *\n * @author Josh de Leeuw\n * @see {@link https://DOCUMENTATION_URL DOCUMENTATION LINK TEXT}\n */\nclass PipePlugin implements JsPsychPlugin<Info> {\n  static info = info;\n\n  constructor(private jsPsych: JsPsych) {}\n\n  trial(display_element: HTMLElement, trial: TrialType<Info>) {\n    this.run(display_element, trial);\n  }\n\n  private async run(display_element: HTMLElement, trial: TrialType<Info>) {\n    // show circular progress bar\n    const progressCSS = `\n      .spinner {\n        animation: rotate 2s linear infinite;\n        width: 50px;\n        height: 50px;\n      }\n        \n      .spinner .path {\n        stroke: rgb(25,25,25);\n        stroke-linecap: round;\n        animation: dash 1.5s ease-in-out infinite;\n      }\n\n      @keyframes rotate {\n        100% {\n          transform: rotate(360deg);\n        }\n      }\n      \n      @keyframes dash {\n        0% {\n          stroke-dasharray: 1, 150;\n          stroke-dashoffset: 0;\n        }\n        50% {\n          stroke-dasharray: 90, 150;\n          stroke-dashoffset: -35;\n        }\n        100% {\n          stroke-dasharray: 90, 150;\n          stroke-dashoffset: -124;\n        }\n      }\n    `;\n\n    const progressHTML = `\n    <style>${progressCSS}</style>\n      ${trial.wait_message}\n      <svg class=\"spinner\" viewBox=\"0 0 50 50\">\n        <circle class=\"path\" cx=\"25\" cy=\"25\" r=\"20\" fill=\"none\" stroke-width=\"5\"></circle>\n      </svg>`;\n\n    display_element.innerHTML = progressHTML;\n\n    let result: any;\n    if (trial.action === \"save\") {\n      result = await PipePlugin.saveData(trial.experiment_id, trial.filename, trial.data_string);\n    }\n    if (trial.action === \"saveBase64\") {\n      result = await PipePlugin.saveBase64Data(\n        trial.experiment_id,\n        trial.filename,\n        trial.data_string\n      );\n    }\n    if (trial.action === \"condition\") {\n      result = await PipePlugin.getCondition(trial.experiment_id);\n    }\n\n    display_element.innerHTML = \"\";\n\n    // data saving\n    var trial_data = {\n      result: result,\n      success: result.error ? false : true,\n    };\n\n    // end trial\n    this.jsPsych.finishTrial(trial_data);\n  }\n\n  /**\n   * Save data to the OSF using pipe.jspsych.org.\n   *\n   * @param expID The 12-character experiment ID provided by pipe.jspsych.org.\n   * @param filename A unique filename to save the data to. It should include the extension.\n   * @param data The data as a string. Any text-basd format (e.g., JSON, CSV, TXT) is acceptable.\n   * @returns The response from the server.\n   */\n  static async saveData(expID: string, filename: string, data: string): Promise<any> {\n    if (!expID || !filename || !data) {\n      throw new Error(\"Missing required parameter(s).\");\n    }\n    let response: Response;\n    try {\n      response = await fetch(\"https://pipe.jspsych.org/api/data/\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Accept: \"*/*\",\n        },\n        body: JSON.stringify({\n          experimentID: expID,\n          filename: filename,\n          data: data,\n        }),\n      });\n    } catch (error) {\n      return error;\n    }\n    return await response.json();\n  }\n\n  /**\n   * Save base64-encoded data to the OSF using pipe.jspsych.org.\n   *\n   * @param expID The 12-character experiment ID provided by pipe.jspsych.org.\n   * @param filename A unique filename to save the data to. It should include the extension.\n   * @param data The data as a base64-encoded string. It will be decoded by the server before being stored in the OSF.\n   * @returns The response from the server.\n   */\n  static async saveBase64Data(expID: string, filename: string, data: string): Promise<any> {\n    if (!expID || !filename || !data) {\n      throw new Error(\"Missing required parameter(s).\");\n    }\n    let response: Response;\n    try {\n      response = await fetch(\"https://pipe.jspsych.org/api/base64/\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Accept: \"*/*\",\n        },\n        body: JSON.stringify({\n          experimentID: expID,\n          filename: filename,\n          data: data,\n        }),\n      });\n    } catch (error) {\n      return error;\n    }\n    return await response.json();\n  }\n\n  /**\n   * Get the condition assignment for the current participant using pipe.jspsych.org.\n   *\n   * @param expID The 12-character experiment ID provided by pipe.jspsych.org.\n   * @returns The condition assignment as an integer.\n   */\n  static async getCondition(expID: string): Promise<any> {\n    if (!expID) {\n      throw new Error(\"Missing required parameter(s).\");\n    }\n    let response: Response;\n    try {\n      response = await fetch(\"https://pipe.jspsych.org/api/condition/\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Accept: \"*/*\",\n        },\n        body: JSON.stringify({\n          experimentID: expID,\n        }),\n      });\n    } catch (error) {\n      return error;\n    }\n    const result = await response.json();\n    return result.condition;\n  }\n}\n\nexport default PipePlugin;\n"],"names":["ParameterType"],"mappings":"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"}