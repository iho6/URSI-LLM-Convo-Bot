{"code":"/**\n * **Extension-Countdown**\n *\n * jsPsych extension for adding a countdown for a trial\n *\n * @author Shaobin Jiang\n */\nclass CountdownExtension {\n    constructor(jsPsych) {\n        this.jsPsych = jsPsych;\n        this.time_elapsed = 0;\n        this.is_running = true;\n        this.initialize = () => {\n            return new Promise((resolve, _) => {\n                resolve();\n            });\n        };\n        this.on_start = ({ format = (time) => String(Math.floor(time / 1000)), time, update_time = 50, }) => {\n            this.format = format;\n            this.time = time;\n            this.update_time = update_time;\n            this.time_elapsed = 0;\n            this.countdown_element = document.createElement(\"div\");\n            this.countdown_element.innerHTML = this.format(time);\n            this.countdown_element.className = \"jspsych-extension-countdown\";\n            this.countdown_element.style.cssText = \"font-size: 18px; position: fixed; top: 5%; right: 5%;\";\n        };\n        this.on_load = () => {\n            this.jsPsych.getDisplayContainerElement().appendChild(this.countdown_element);\n            this.last_recorded_time = performance.now();\n            this.timer = window.setInterval(() => {\n                let now = performance.now();\n                if (this.is_running) {\n                    this.time_elapsed += now - this.last_recorded_time;\n                }\n                this.last_recorded_time = now;\n                let time_left = this.time - this.time_elapsed;\n                if (time_left <= 0) {\n                    window.clearInterval(this.timer);\n                }\n                else {\n                    this.countdown_element.innerHTML = this.format(time_left);\n                }\n            }, this.update_time);\n        };\n        this.on_finish = () => {\n            window.clearInterval(this.timer);\n            this.countdown_element.remove();\n            return {};\n        };\n        this.pause = () => {\n            this.is_running = false;\n        };\n        this.resume = () => {\n            this.is_running = true;\n        };\n        this.get_time_left = () => {\n            return this.time - this.time_elapsed;\n        };\n    }\n}\nCountdownExtension.info = {\n    name: \"countdown\",\n};\nexport default CountdownExtension;\n//# sourceMappingURL=index.js.map","references":["/Users/jackie3/Desktop/URSI/jspsych-contrib/node_modules/jspsych/dist/index.d.ts"],"map":"{\"version\":3,\"file\":\"index.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../src/index.ts\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"/Users/jackie3/Desktop/URSI/jspsych-contrib/packages/extension-countdown/node_modules/.cache/rollup-plugin-typescript2/placeholder/index.d.ts","writeByteOrderMark":false,"text":"import { JsPsych, JsPsychExtension, JsPsychExtensionInfo } from \"jspsych\";\ninterface OnStartParameters {\n    format: (time: number) => string;\n    time: number;\n    update_time: number;\n}\n/**\n * **Extension-Countdown**\n *\n * jsPsych extension for adding a countdown for a trial\n *\n * @author Shaobin Jiang\n */\ndeclare class CountdownExtension implements JsPsychExtension {\n    private jsPsych;\n    static info: JsPsychExtensionInfo;\n    constructor(jsPsych: JsPsych);\n    private format;\n    private time;\n    private update_time;\n    private countdown_element;\n    private timer;\n    private last_recorded_time;\n    private time_elapsed;\n    private is_running;\n    initialize: () => Promise<void>;\n    on_start: ({ format, time, update_time, }: OnStartParameters) => void;\n    on_load: () => void;\n    on_finish: () => {};\n    pause: () => void;\n    resume: () => void;\n    get_time_left: () => number;\n}\nexport default CountdownExtension;\n"}}
