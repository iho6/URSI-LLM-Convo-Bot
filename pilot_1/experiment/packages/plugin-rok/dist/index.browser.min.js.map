{"version":3,"file":"index.browser.min.js","sources":["../src/index.ts"],"sourcesContent":["import { JsPsych, JsPsychPlugin, ParameterType, TrialType } from \"jspsych\";\n\nconst info = <const>{\n  name: \"rok\",\n  parameters: {\n    /** The valid keys that the subject can press to indicate a response. */\n    choices: {\n      type: ParameterType.KEYS,\n      pretty_name: \"Choices\",\n      default: \"ALL_KEYS\",\n    },\n    /** The correct keys for that trial. */\n    correct_choice: {\n      type: ParameterType.KEYS,\n      pretty_name: \"Correct choice\",\n      default: undefined,\n    },\n    /** The length of stimulus presentation. Zero for endless loop. */\n    trial_duration: {\n      type: ParameterType.INT,\n      pretty_name: \"Trial duration\",\n      default: 0,\n    },\n    /** If true, then any valid key will end the trial. */\n    response_ends_trial: {\n      type: ParameterType.BOOL,\n      pretty_name: \"Response ends trial\",\n      default: true,\n    },\n    /** The number of oriented objects per set in the stimulus. */\n    number_of_oobs: {\n      type: ParameterType.INT,\n      pretty_name: \"Number of oriented objectes\",\n      default: 300,\n    },\n    /** The direction of coherent motion in degrees (0 degre meaning right). */\n    coherent_movement_direction: {\n      type: ParameterType.INT,\n      pretty_name: \"Coherent movement direction\",\n      default: 0,\n    },\n    /** The orientation of the objects in degree (0 degree meaning right). */\n    coherent_orientation: {\n      type: ParameterType.INT,\n      pretty_name: \"Coherent object orientation\",\n      default: 0,\n    },\n    /** The percentage of oriented objects moving in the coherent direction. */\n    coherence_movement: {\n      type: ParameterType.INT,\n      pretty_name: \"Movement coherence\",\n      default: 50,\n    },\n    /** The percentage of objects that are oriented in the coherent orientation. */\n    coherence_orientation: {\n      type: ParameterType.INT,\n      pretty_name: \"Orientation coherence\",\n      default: 50,\n    },\n    /** The percentage of oriented objects moving in the direction opposite of the coherent direction. */\n    coherence_movement_opposite: {\n      type: ParameterType.INT,\n      pretty_name: \"Opposite movement coherence\",\n      default: 0,\n    },\n    /** The percentage of objects that are oriented opposite of the coherent orientation. */\n    coherence_orientation_opposite: {\n      type: ParameterType.INT,\n      pretty_name: \"Opposite orientation coherence\",\n      default: 0,\n    },\n    /** The movement speed of the oobs in (percentage of aperature_width)/second. */\n    movement_speed: {\n      type: ParameterType.INT,\n      pretty_name: \"Movement Speed\",\n      default: 10,\n    },\n    /** The percentage of randomisation in movement speed \" +\n         \"(0 meaning all orientated objects move with speed defined in movement_speed,\" +\n         \" 100 meaning movement speeds from 0 to 2x movement_speed). */\n    movement_speed_randomisation: {\n      type: ParameterType.INT,\n      pretty_name: \"Movement speed randomisation\",\n      default: 0,\n    },\n    /** The size of the orientated objects in percentage of aperture_width. */\n    oob_size: {\n      type: ParameterType.INT,\n      pretty_name: \"Object size\",\n      default: 2,\n    },\n    /** The width of the aperture in pixels. */\n    aperture_width: {\n      type: ParameterType.INT,\n      pretty_name: \"Aperture width\",\n      default: 600,\n    },\n    /** The height of the aperture in pixels. */\n    aperture_height: {\n      type: ParameterType.INT,\n      pretty_name: \"Aperture height\",\n      default: 400,\n    },\n    /** The color of the dots. */\n    oob_color: {\n      type: ParameterType.STRING,\n      pretty_name: \"Dot color\",\n      default: \"white\",\n    },\n    /** The background of the stimulus. */\n    background_color: {\n      type: ParameterType.STRING,\n      pretty_name: \"Background color\",\n      default: \"gray\",\n    },\n    /** The presence of a border around the aperture. */\n    border: {\n      type: ParameterType.BOOL,\n      pretty_name: \"Border\",\n      default: false,\n    },\n    /** The thickness of the border in pixels. */\n    border_thickness: {\n      type: ParameterType.INT,\n      pretty_name: \"Border width\",\n      default: 1,\n    },\n    /**The color of the border. */\n    border_color: {\n      type: ParameterType.STRING,\n      pretty_name: \"Border Color\",\n      default: 1,\n    },\n    /** Apperance of stimulus (0-triangles, 1-circle, 2-square, 3-origami_birds, 4-image). */\n    stimulus_type: {\n      type: ParameterType.INT,\n      pretty_name: \"Stimulus type\",\n      default: 0,\n    },\n    /** Shade of aperture (0 - rectangular, 1 - elliptic). */\n    aperture_shape: {\n      type: ParameterType.INT,\n      pretty_name: \"aperture shape\",\n      default: 0,\n    },\n    /** Backgroundcolor of aperture */\n    aperture_background_color: {\n      type: ParameterType.STRING,\n      pretty_name: \"Background of aperture\",\n      default: \"#0000\",\n    },\n    /** Type of random movement (0 direction is random but fixed, 1 movement direction of incoherent oobs changes over time). */\n    random_movement_type: {\n      type: ParameterType.INT,\n      pretty_name: \"Random movement type\",\n      default: 0,\n    },\n    /** Type of random movement (0 - orientation is random but fixed, 1 - orientation of incoherent oobs changes over time). */\n    random_orientation_type: {\n      type: ParameterType.INT,\n      pretty_name: \"Random orientation type\",\n      default: 0,\n    },\n    /** Number of apertures. If greater then one, other parameters of trial should be arrays. */\n    number_of_apertures: {\n      type: ParameterType.INT,\n      pretty_name: \"Number of apertures\",\n      default: 1,\n    },\n    /** If this parameter is set, number_of_objects is interpreted as average number_of_objects per density_unit_area (in pixels). */\n    density_unit_area: {\n      type: ParameterType.INT,\n      pretty_name: \"Density area\",\n      default: null,\n    },\n    /** Position of midpoint of aperture in x direction in percentage of window width (50 being middle). */\n    aperture_position_left: {\n      type: ParameterType.INT,\n      pretty_name: \"Horizontal position of aperature\",\n      default: 50,\n    },\n    /** Position of midpoint of aperture in y direction in percentage of window width (0 being top, 50 being middle, 100 being bot). */\n    aperture_position_top: {\n      type: ParameterType.INT,\n      pretty_name: \"Vertical position of aperature\",\n      default: 50,\n    },\n    /** Prompt that is presented above the stimulus. */\n    prompt: {\n      type: ParameterType.STRING,\n      pretty_name: \"Prompt\",\n      default: null,\n    },\n    /** Fade the oobs on the edges of the aperture. */\n    fade_out: {\n      type: ParameterType.INT,\n      pretty_name: \"Fade out on edges\",\n      default: 0,\n    },\n    /** Pictures of stimuli, can be key-framed(animated) or randomised, see documentation. */\n    stimulus_image: {\n      type: ParameterType.IMAGE,\n      pretty_name: \"Stimuli pictures\",\n      default: null,\n    },\n    /** Background image, can be key-framed(animated) or randomised, see documentation. */\n    background_image: {\n      type: ParameterType.IMAGE,\n      pretty_name: \"Background image\",\n      default: null,\n    },\n    /** Number of keyframes in stimulus images. */\n    stimulus_image_keyframes: {\n      type: ParameterType.INT,\n      pretty_name: \"Keyframes of stimulus pictures\",\n      default: 1,\n    },\n    /** Number of keyframes in background pictures. */\n    background_image_keyframes: {\n      type: ParameterType.INT,\n      pretty_name: \"Keframse of background pictures\",\n      default: 1,\n    },\n    /** Time between keyframes. */\n    stimulus_keyframe_time: {\n      type: ParameterType.FLOAT,\n      pretty_name: \"Keyframe time\",\n      default: 0.1,\n    },\n    /** Mirror image instead of rotating (1 - x axis, 2 - y axis). */\n    stimulus_mirror: {\n      type: ParameterType.INT,\n      pretty_name: \"Mirror image time\",\n      default: 0,\n    },\n    /** Sets experiment to congruency mode: experiment_main_task has to be  set (0 = movement or 1 = orientation) if this is set to 1 or 2. The\" +\n         \"congruency of the task does only apply to coherent oobs of main task. If this is set to 1 the remaining oobs secondary feature (the non task feature) is set at random.\" +\n         \"If this is set to 2 the remaining oobs have the same direction and orientation .*/\n    experiment_congruency_mode: {\n      type: ParameterType.INT,\n      pretty_name: \"Experiment congruency mode\",\n      default: 0,\n    },\n    /** Sets the main task when experiment is in congruency mode. The congruency of the other task then only\" +\n         \"applies to non random oobs of main task. */\n    experiment_main_task: {\n      type: ParameterType.INT,\n      pretty_name:\n        \"Main task when experiment is set to congruency mode (0- movement, 1-orientation)\",\n      default: 0,\n    },\n    /** Units in which size and speed of oobs is expressed (null - percentage of aperture width, px - pixels). */\n    units: {\n      type: ParameterType.STRING,\n      pretty_name: \"Units in which size and speed of oobs is expressed\",\n      default: null,\n    },\n    /** Should stimuli be drawn on top of each other or intermixed **/\n    aperture_draw_mode: {\n      type: ParameterType.STRING,\n      pretty_name:\n        \"When in overlay draws stimuli of different apertures on top of each other. When in intermixed oobs all show up in one aperture intermixed\",\n      default: \"overlay\",\n    },\n  },\n};\n\ntype Info = typeof info;\n\n/**\n * **ROK**\n *\n * jsPsych plugin for showing a random object kinematogram stimulus and recording a keyboard response\n *\n * @author Younes Strittmatter\n * @see {@link https://www.jspsych.org/plugins/jspsych-rok/ RDK plugin documentation on jspsych.org}\n * @copyright\n *\n *    We would appreciate it if you cited this paper when you use the ROK:\n *\n * ----------------------\n *\n * Copyright (C) 2021 Younes Strittmatter\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n */\nclass RokPlugin implements JsPsychPlugin<Info> {\n  static info = info;\n\n  constructor(private jsPsych: JsPsych) {}\n\n  trial(display_element: HTMLElement, trial: TrialType<Info>) {\n    //--------------------------------------\n    //---------SET PARAMETERS BEGIN---------\n    //--------------------------------------\n\n    //Note on '||' logical operator: If the first option is 'undefined', it evalutes to 'false' and the second option is returned as the assignment\n    // Note: trial properties are now read-only, so these params have all been changed to separate variables here and throughout trial function\n    var choices = assignParameterValue(trial.choices, []); //info.parameters.choices.default);\n    var correct_choice = assignParameterValue(trial.correct_choice, undefined); //info.parameters.correct_choice.default);\n    var trial_duration = assignParameterValue(trial.trial_duration, 0); //info.parameters.trial_duration.default);\n    var response_ends_trial = assignParameterValue(trial.response_ends_trial, true); //info.parameters.response_ends_trial.default);\n    var number_of_oobs = assignParameterValue(trial.number_of_oobs, 300); //info.parameters.number_of_oobs.default);\n    var coherent_movement_direction = assignParameterValue(trial.coherent_movement_direction, 0); // info.parameters.coherent_movement_direction.default);\n    var coherent_orientation = assignParameterValue(trial.coherent_orientation, 0); // info.parameters.coherent_orientation.default);\n    var coherence_movement = assignParameterValue(trial.coherence_movement, 50); //info.parameters.coherence_movement.default);\n    var coherence_orientation = assignParameterValue(trial.coherence_orientation, 50); //info.parameters.coherence_orientation.default);\n    var coherence_movement_opposite = assignParameterValue(trial.coherence_movement_opposite, 50); //info.parameters.coherence_movement_opposite.default);\n    var coherence_orientation_opposite = assignParameterValue(\n      trial.coherence_orientation_opposite,\n      50\n    ); //info.parameters.coherence_orientation_opposite.default);\n    var movement_speed = assignParameterValue(trial.movement_speed, 10); //info.parameters.movement_speed.default);\n    var movement_speed_randomisation = assignParameterValue(trial.movement_speed_randomisation, 0); // info.parameters.movement_speed_randomisation.default);\n    var oob_size = assignParameterValue(trial.oob_size, 2); //info.parameters.oob_size.default);\n    var aperture_width = assignParameterValue(trial.aperture_width, 600); //info.parameters.aperture_width.default);\n    var aperture_height = assignParameterValue(trial.aperture_height, 400); //info.parameters.aperture_height.default);\n    var oob_color = assignParameterValue(trial.oob_color, \"white\"); //info.parameters.oob_color.default);\n    var background_color = assignParameterValue(trial.background_color, \"gray\"); //info.parameters.background_color.default);\n    var aperture_background_color = assignParameterValue(trial.aperture_background_color, \"#0000\");\n    var border = assignParameterValue(trial.border, false); //info.parameters.border.default);\n    var border_thickness = assignParameterValue(trial.border_thickness, 1); //info.parameters.border_thickness.default);\n    var border_color = assignParameterValue(trial.border_color, \"white\"); //info.parameters.border_color.default);\n    var stimulus_type = assignParameterValue(trial.stimulus_type, 0); //info.parameters.stimulus_type.default);\n    var aperture_shape = assignParameterValue(trial.aperture_shape, 0); //info.parameters.aperture_shape.default);\n    var random_movement_type = assignParameterValue(trial.random_movement_type, 0); //info.parameters.random_movement_type.default);\n    var random_orientation_type = assignParameterValue(trial.random_orientation_type, 0); //info.parameters.random_orientation_type.default);\n    var number_of_apertures = assignParameterValue(trial.number_of_apertures, 1); //info.parameters.number_of_apertures.default);\n    var density_unit_area = assignParameterValue(trial.density_unit_area, null); //info.parameters.number_of_apertures.default);\n    var aperture_position_left = assignParameterValue(trial.aperture_position_left, 50); //info.parameters.aperture_position_left.default);\n    var aperture_position_top = assignParameterValue(trial.aperture_position_top, 50); //info.parameters.aperture_position_top.default);\n    var prompt = assignParameterValue(trial.prompt, null); //info.parameters.prompt.default);\n    var fade_out = assignParameterValue(trial.fade_out, 0); //info.parameters.fade_out.default);\n    var stimulus_image = assignParameterValue(trial.stimulus_image, null); //info.parameters.stimulus_image.default);\n    var background_image = assignParameterValue(trial.background_image, null); //info.parameters.background_image.default);\n    var stimulus_image_keyframes = assignParameterValue(trial.stimulus_image_keyframes, 1); //info.parameters.stimulus_image_keyframes.default);\n    var background_image_keyframes = assignParameterValue(trial.background_image_keyframes, 1); //info.parameters.background_image_keyframes.default);\n    var stimulus_keyframe_time = assignParameterValue(trial.stimulus_keyframe_time, 0.1); //info.parameters.stimulus_keyframe_time.default);\n    var stimulus_mirror = assignParameterValue(trial.stimulus_mirror, 0); //info.parameters.stimulus_mirror.default);\n    var experiment_congruency_mode = assignParameterValue(trial.experiment_congruency_mode, 0); //info.parameters.experiment_congruency_mode.default);\n    var experiment_main_task = assignParameterValue(trial.experiment_main_task, 0); //info.parameters.experiment_main_task.default);\n    var units = assignParameterValue(trial.units, null);\n    var aperture_mode = assignParameterValue(trial.aperture_draw_mode, \"overlay\");\n\n    //--------------------------------------\n    //----------SET PARAMETERS END----------\n    //--------------------------------------\n\n    //--------Set up canvases BEGIN -------\n    let nApertures = number_of_apertures;\n    let nAperturesTmp = nApertures;\n    if (aperture_mode !== \"overlay\") {\n      nApertures = 1;\n    }\n\n    //Create canvas elements and append it to the DOM\n    var canvasArray = [];\n    var containerArray = [];\n    if (nApertures > 1) {\n      for (let i = 0; i < nApertures; i++) {\n        containerArray.push(document.createElement(\"div\"));\n        canvasArray.push(document.createElement(\"canvas\"));\n      }\n    } else {\n      containerArray.push(document.createElement(\"div\"));\n      canvasArray.push(document.createElement(\"canvas\"));\n    }\n    for (let i = 0; i < nApertures; i++) {\n      let imgPath = getValueFromArrayOrNot(background_image, i);\n      if (imgPath != null) {\n        containerArray[i].style.backgroundImage =\n          \"url(\" + getValueFromArrayOrNot(background_image, i) + \")\";\n        containerArray[i].style.backgroundRepeat = \"no-repeat\";\n        containerArray[i].style.backgroundSize = \"cover\";\n      }\n\n      display_element.appendChild(containerArray[i]);\n\n      containerArray[i].appendChild(canvasArray[i]);\n      if (Array.isArray(prompt)) {\n        let p = document.createElement(\"div\");\n        p.style.margin = \"0\";\n        p.style.padding = \"0\";\n        containerArray[i].appendChild(p);\n        p.style.textAlign = \"center\";\n        p.innerHTML = prompt[i];\n        p.style.position = \"absolute\";\n        p.style.transform = \"translate(-50%, 100%)\";\n        p.style.textAlign = \"center\";\n        p.style.top = 10 + getValueFromArrayOrNot(aperture_height, 0) / 2 + \"px\";\n        p.style.width = getValueFromArrayOrNot(aperture_width, 0) + \"px\";\n      }\n    }\n\n    if (prompt != null && !Array.isArray(prompt)) {\n      let p = document.createElement(\"div\");\n      p.style.margin = \"0\";\n      p.style.padding = \"0\";\n      containerArray[0].appendChild(p);\n      p.style.textAlign = \"center\";\n      p.innerHTML = prompt;\n      p.style.position = \"absolute\";\n      p.style.transform = \"translate(-50%, 100%)\";\n      p.style.textAlign = \"center\";\n      p.style.top = 10 + getValueFromArrayOrNot(aperture_height, 0) / 2 + \"px\";\n      p.style.width = getValueFromArrayOrNot(aperture_width, 0) + \"px\";\n    }\n\n    //Get body element from jsPsych\n    let body = document.getElementsByClassName(\"jspsych-display-element\")[0] as HTMLElement;\n\n    //Save the current settings to be restored later\n    let originalMargin = body.style.margin;\n    let originalPadding = body.style.padding;\n    let originalBackgroundColor = body.style.backgroundColor;\n\n    //Remove the margins and paddings of the display_element\n    body.style.margin = \"0\";\n    body.style.padding = \"0\";\n\n    //Remove the margins and padding of the canvas, center it\n    for (let i = 0; i < nApertures; i++) {\n      containerArray[i].style.margin = \"0px\";\n      containerArray[i].style.margin = \"0px\";\n      canvasArray[i].style.margin = \"0px\";\n      canvasArray[i].style.padding = \"0px\";\n      canvasArray[i].style.position = \"absolute\";\n      canvasArray[i].style.transform = \"translate(-50%, -50%)\";\n    }\n\n    //Set background color of body to be the same as\n    body.style.backgroundColor = background_color;\n\n    //Get the contexts of the canvases\n    let ctxArray = [];\n    for (let i = 0; i < nApertures; i++) {\n      ctxArray.push(canvasArray[i].getContext(\"2d\"));\n    }\n\n    // get dimensions of display element\n    const disp_size = body.getBoundingClientRect();\n\n    //Set canvases width, height, position and color;\n    for (let i = 0; i < nApertures; i++) {\n      canvasArray[i].width = getValueFromArrayOrNot(aperture_width, i);\n      canvasArray[i].height = getValueFromArrayOrNot(aperture_height, i);\n      canvasArray[i].style.backgroundColor = getValueFromArrayOrNot(aperture_background_color, i);\n      containerArray[i].style.position = \"absolute\";\n\n      if (Array.isArray(aperture_position_left) && Array.isArray(aperture_position_top)) {\n        // calculate top from display size (resize module doesn't work with top beeing a percentage)\n        let top = Math.round((aperture_position_top[i] * disp_size.height) / 100);\n        containerArray[i].style.top = top.toString() + \"px\";\n\n        containerArray[i].style.left = aperture_position_left[i].toString() + \"%\";\n      } else {\n        if (nApertures > 1) {\n          let x;\n          if (nApertures % 2 == 0) {\n            x = i * (100 / nApertures) + 100 / (2 * nApertures);\n          } else {\n            x = i * (100 / (nApertures + 1)) + 100 / (2 * (nApertures - 1));\n          }\n\n          // calculate top from display size (resize module doesn't work with top being a percentage)\n          let top = Math.round((aperture_position_top * disp_size.height) / 100);\n          containerArray[i].style.top = top.toString() + \"px\";\n\n          containerArray[i].style.left = x.toString() + \"%\";\n        } else {\n          // calculate top from display size (resize module doesn't work with top being a percentage)\n          let top = Math.round((aperture_position_top * disp_size.height) / 100);\n          containerArray[i].style.top = top.toString() + \"px\";\n\n          containerArray[i].style.left = aperture_position_left.toString() + \"%\";\n        }\n      }\n    }\n\n    //--------Set up canvases END-------\n\n    //--------rok variables and function calls begin--------\n\n    //Initialize stopping condition for animation function that runs in a loop\n    let stopOobMotion = false;\n\n    //Variable to control the frame rate, to ensure that the first frame is skipped because it follows a different timing\n    let firstFrame = true;\n\n    //Variable to start the timer\n    let timerHasStarted = false;\n\n    //Initialize object to store the response data. Default values of -1 are used if the trial times out and the subject has not pressed a valid key\n    let response = {\n      rt: -1,\n      key: \"\",\n    };\n\n    //Declare a global timeout ID to be initialized below in animateDotMotion function and to be used in after_response function\n    let timeoutID;\n\n    //Declare global variable to be defined in startKeyboardListener function and to be used in end_trial function\n    let keyboardListener;\n\n    //Declare global variable to store the frame rate of the trial\n    var frameRate: number | number[] = []; //How often the monitor refreshes, in ms. Currently an array to store all the intervals. Will be converted into a single number (the average) in end_trial function.\n\n    //variable to store how many frames were presented.\n    let numberOfFrames = 0;\n\n    // get the images if specified\n    let img = [];\n    if (stimulus_image != null) {\n      let imgSrc = stimulus_image;\n      if (!Array.isArray(imgSrc)) {\n        let i = document.createElement(\"img\");\n        i.src = imgSrc;\n        img.push(i);\n      } else {\n        for (let j = 0; j < imgSrc.length; j++) {\n          let iS = imgSrc[j];\n          if (!Array.isArray(iS)) {\n            let i = document.createElement(\"img\");\n            i.src = iS;\n            img.push(i);\n          } else {\n            let i = [];\n            for (let k = 0; k < iS[j].length; k++) {\n              let p = document.createElement(\"img\");\n              p.src = iS[k];\n              i.push(p);\n            }\n            img.push(i);\n          }\n        }\n      }\n    }\n\n    let oobs = [];\n\n    //Calculate the number of coherent, opposite coherent, and incoherent oobs for movement/orientation\n    for (let i = 0; i < nAperturesTmp; i++) {\n      let nOob = getValueFromArrayOrNot(number_of_oobs, i);\n\n      // set number of objects, if density_unit_area is set\n      if (density_unit_area != null) {\n        let width = getValueFromArrayOrNot(aperture_width, i);\n        let height = getValueFromArrayOrNot(aperture_height, i);\n        let area = width * height;\n        nOob = (nOob * area) / density_unit_area;\n      }\n\n      let tmpCoherenceMovement = getValueFromArrayOrNot(coherence_movement, i);\n      let tmpOppositeCoherenceMovement = getValueFromArrayOrNot(coherence_movement_opposite, i);\n      let tmpCoherenceOrientation = getValueFromArrayOrNot(coherence_orientation, i);\n      let tmpOppositeCoherenceOrientation = getValueFromArrayOrNot(\n        coherence_orientation_opposite,\n        i\n      );\n\n      let experimentMode = getValueFromArrayOrNot(experiment_congruency_mode, i);\n      let mainTask = getValueFromArrayOrNot(experiment_main_task, i);\n\n      let tmpOrientation = [];\n      let tmpMovementDirection = [];\n\n      if (experimentMode === 0) {\n        let [nCoherentMovement, nCoherentOppositeMovement, nIncoherentMovement] = getNumbers(\n          tmpCoherenceMovement,\n          tmpOppositeCoherenceMovement,\n          nOob\n        );\n        let [nCoherentOrientation, nCoherentOppositeOrientation, nIncoherentOrientation] =\n          getNumbers(tmpCoherenceOrientation, tmpOppositeCoherenceOrientation, nOob);\n        for (let j = 0; j < nCoherentMovement; j++) {\n          tmpMovementDirection.push(1);\n        }\n        for (let j = 0; j < nCoherentOppositeMovement; j++) {\n          tmpMovementDirection.push(-1);\n        }\n        for (let j = 0; j < nIncoherentMovement; j++) {\n          tmpMovementDirection.push(0);\n        }\n        for (let j = 0; j < nCoherentOrientation; j++) {\n          tmpOrientation.push(1);\n        }\n        for (let j = 0; j < nCoherentOppositeOrientation; j++) {\n          tmpOrientation.push(-1);\n        }\n        for (let j = 0; j < nIncoherentOrientation; j++) {\n          tmpOrientation.push(0);\n        }\n        tmpOrientation = shuffleArray(tmpOrientation);\n        tmpMovementDirection = shuffleArray(tmpMovementDirection);\n      } else if (mainTask === 0) {\n        let [nCoherentMovement, nCoherentOppositeMovement, nIncoherentMovement] = getNumbers(\n          tmpCoherenceMovement,\n          tmpOppositeCoherenceMovement,\n          nOob\n        );\n        let nCoherentOrientation = Math.floor((tmpCoherenceOrientation / 100) * nCoherentMovement);\n        let nCoherentOppositeOrientation = Math.floor(\n          (tmpOppositeCoherenceOrientation / 100) * nCoherentMovement\n        );\n        if (tmpCoherenceOrientation + tmpOppositeCoherenceOrientation === 100) {\n          nCoherentOppositeOrientation = nCoherentMovement - nCoherentOrientation;\n        }\n        for (let j = 0; j < nCoherentMovement; j++) {\n          tmpMovementDirection.push(1);\n        }\n        for (let j = 0; j < nCoherentOppositeMovement; j++) {\n          tmpMovementDirection.push(-1);\n        }\n        for (let j = 0; j < nIncoherentMovement; j++) {\n          tmpMovementDirection.push(0);\n        }\n        for (let j = 0; j < nCoherentOrientation; j++) {\n          tmpOrientation.push(1);\n        }\n        for (let j = 0; j < nCoherentOppositeOrientation; j++) {\n          tmpOrientation.push(-1);\n        }\n\n        for (let j = 0; j < nOob - (nCoherentOrientation + nCoherentOppositeOrientation); j++) {\n          tmpOrientation.push(0);\n        }\n      } else if (mainTask === 1) {\n        let [nCoherentOrientation, nCoherentOppositeOrientation, nIncoherentOrientation] =\n          getNumbers(tmpCoherenceOrientation, tmpOppositeCoherenceOrientation, nOob);\n        let nCoherentMovement = Math.floor((tmpCoherenceMovement / 100) * nCoherentOrientation);\n        let nCoherentOppositeMovement = Math.floor(\n          (tmpOppositeCoherenceMovement / 100) * nCoherentOrientation\n        );\n        if (tmpCoherenceMovement + tmpOppositeCoherenceMovement === 100) {\n          nCoherentOppositeMovement = nCoherentOrientation - nCoherentMovement;\n        }\n        for (let j = 0; j < nCoherentOrientation; j++) {\n          tmpOrientation.push(1);\n        }\n        for (let j = 0; j < nCoherentOppositeOrientation; j++) {\n          tmpOrientation.push(-1);\n        }\n        for (let j = 0; j < nIncoherentOrientation; j++) {\n          tmpOrientation.push(0);\n        }\n        for (let j = 0; j < nCoherentMovement; j++) {\n          tmpMovementDirection.push(1);\n        }\n        for (let j = 0; j < nCoherentOppositeMovement; j++) {\n          tmpMovementDirection.push(-1);\n        }\n        if (experimentMode === 1) {\n          for (let j = 0; j < nOob - (nCoherentMovement + nCoherentOppositeMovement); j++) {\n            tmpMovementDirection.push(0);\n          }\n        } else {\n          for (let j = 0; j < nOob - (nCoherentMovement + nCoherentOppositeMovement); j++) {\n            tmpOrientation.push(tmpOrientation[j + nCoherentMovement + nCoherentOppositeMovement]);\n          }\n        }\n      }\n\n      let oobColor = getValueFromArrayOrNot(oob_color, i);\n\n      let stimulusType = getValueFromArrayOrNot(stimulus_type, i);\n      if (stimulusType === 3) {\n        oobColor = standardColor(oobColor);\n      }\n      let apertureType = getValueFromArrayOrNot(aperture_shape, i);\n      let speed = getValueFromArrayOrNot(movement_speed, i);\n      let speedRandomisation = getValueFromArrayOrNot(movement_speed_randomisation, i);\n      let size = getValueFromArrayOrNot(oob_size, i);\n\n      let isFade = getValueFromArrayOrNot(fade_out, i);\n\n      for (let j = 0; j < nOob; j++) {\n        let randomWalk = 0;\n        let randomOrient = 0;\n        let orientation = getValueFromArrayOrNot(coherent_orientation, i);\n        if (tmpOrientation[j] === -1) {\n          orientation += 180;\n        } else if (tmpOrientation[j] === 0) {\n          orientation = Math.floor(Math.random() * 360);\n          randomOrient = getValueFromArrayOrNot(random_orientation_type, i);\n        }\n        let movementDirection = getValueFromArrayOrNot(coherent_movement_direction, i);\n        if (tmpMovementDirection[j] === -1) {\n          movementDirection += 180;\n        } else if (tmpMovementDirection[j] === 0) {\n          movementDirection = Math.floor(Math.random() * 360);\n          randomWalk = getValueFromArrayOrNot(random_movement_type, i);\n        }\n        if (\n          experimentMode === 2 &&\n          mainTask === 0 &&\n          tmpOrientation[j] === 0 &&\n          tmpMovementDirection[j] != 1\n        ) {\n          orientation = movementDirection;\n        } else if (\n          experimentMode === 2 &&\n          mainTask === 1 &&\n          tmpMovementDirection[j] === 0 &&\n          tmpOrientation[j] != 1\n        ) {\n          movementDirection = orientation;\n        }\n\n        let oob;\n\n        let ctx = ctxArray[i];\n        let cvs = canvasArray[i];\n        if (aperture_mode !== \"overlay\") {\n          ctx = ctxArray[0];\n          cvs = canvasArray[0];\n        }\n\n        if (stimulusType === 0) {\n          oob = new Oob(\n            size,\n            oobColor,\n            orientation,\n            movementDirection,\n            speed,\n            speedRandomisation,\n            apertureType,\n            randomWalk,\n            randomOrient,\n            isFade,\n            cvs,\n            ctx,\n            units\n          );\n        } else if (stimulusType === 1) {\n          oob = new OobCircle(\n            size,\n            oobColor,\n            orientation,\n            movementDirection,\n            speed,\n            speedRandomisation,\n            apertureType,\n            randomWalk,\n            randomOrient,\n            isFade,\n            cvs,\n            ctx,\n            units\n          );\n        } else if (stimulusType === 2) {\n          oob = new OobSquare(\n            size,\n            oobColor,\n            orientation,\n            movementDirection,\n            speed,\n            speedRandomisation,\n            apertureType,\n            randomWalk,\n            randomOrient,\n            isFade,\n            cvs,\n            ctx,\n            units\n          );\n        } else if (stimulusType === 3) {\n          oob = new OobBird(\n            size,\n            oobColor,\n            orientation,\n            movementDirection,\n            speed,\n            speedRandomisation,\n            apertureType,\n            randomWalk,\n            randomOrient,\n            isFade,\n            cvs,\n            ctx,\n            units\n          );\n        } else if (stimulusType === 4) {\n          let imageArray, keyframes, keyframeTime, mirrorType;\n          if (nAperturesTmp === 1) {\n            imageArray = img;\n            keyframes = stimulus_image_keyframes;\n            keyframeTime = stimulus_keyframe_time;\n            mirrorType = stimulus_mirror;\n          } else {\n            imageArray = getValueFromArrayOrNot(img, i);\n            keyframes = getValueFromArrayOrNot(stimulus_image_keyframes, i);\n            keyframeTime = getValueFromArrayOrNot(stimulus_keyframe_time, i);\n            mirrorType = getValueFromArrayOrNot(stimulus_mirror, i);\n          }\n\n          oob = new OobImage(\n            size,\n            oobColor,\n            orientation,\n            movementDirection,\n            speed,\n            speedRandomisation,\n            apertureType,\n            randomWalk,\n            randomOrient,\n            isFade,\n            imageArray,\n            keyframes,\n            keyframeTime,\n            mirrorType,\n            cvs,\n            ctx,\n            units\n          );\n        }\n        oobs.push(oob);\n      }\n    }\n\n    oobs = shuffleArray(oobs);\n\n    //--------RDK variables and function calls end--------\n\n    //-------------------------------------\n    //-----------FUNCTIONS BEGIN-----------\n    //-------------------------------------\n\n    //----JsPsych Functions Begin----\n\n    //Function to start the keyboard listener\n    const startKeyboardListener = () => {\n      //Start the response listener if there are choices for keys\n      if (choices != \"NO_KEYS\") {\n        //Create the keyboard listener to listen for subjects' key response\n        keyboardListener = this.jsPsych.pluginAPI.getKeyboardResponse({\n          callback_function: after_response, //Function to call once the subject presses a valid key\n          valid_responses: choices, //The keys that will be considered a valid response and cause the callback function to be called\n          rt_method: \"performance\", //The type of method to record timing information.\n          persist: false, //If set to false, keyboard listener will only trigger the first time a valid key is pressed. If set to true, it has to be explicitly cancelled by the cancelKeyboardResponse plugin API.\n          allow_held_key: false, //Only register the key once, after this getKeyboardResponse function is called. (Check JsPsych docs for better info under 'jsPsych.pluginAPI.getKeyboardResponse').\n        });\n      }\n    };\n\n    //Function to end the trial proper\n    const end_trial = () => {\n      //Stop the dot motion animation\n      stopOobMotion = true;\n\n      //Store the number of frames\n      numberOfFrames = (frameRate as number[]).length;\n\n      //Variable to store the frame rate array\n      let frameRateArray = frameRate;\n\n      //Calculate the average frame rate\n      if (numberOfFrames > 0) {\n        //Check to make sure that the array is not empty\n        frameRate =\n          (frameRate as number[]).reduce((total, current) => total + current) / numberOfFrames; //Sum up all the elements in the array\n      } else {\n        frameRate = 0; //Set to zero if the subject presses an answer before a frame is shown (i.e. if frameRate is an empty array)\n      }\n\n      //Cancel the keyboard listener if keyboardListener has been defined\n      if (typeof keyboardListener !== \"undefined\") {\n        this.jsPsych.pluginAPI.cancelKeyboardResponse(keyboardListener);\n      }\n\n      //Place all the data to be saved from this trial in one data object\n      let trial_data = {\n        rt: response.rt, //The response time\n        key_press: response.key, //The key that the subject pressed\n        correct: correctOrNot(), //If the subject response was correct\n        choices: choices, //The set of valid keys\n        correct_choice: correct_choice, //The correct choice\n        trial_duration: trial_duration, //The trial duration\n        response_ends_trial: response_ends_trial, //If the response ends the trial\n        number_of_oobs: number_of_oobs,\n        coherent_movement_direction: coherent_movement_direction,\n        coherence_movement: coherence_movement,\n        opposite_coherence_movement: coherence_movement_opposite,\n        coherent_orientation: coherent_orientation,\n        coherence_orientation: coherence_orientation,\n        opposite_coherence_orientation: coherence_orientation_opposite,\n        movement_speed: movement_speed,\n        oob_size: oob_size,\n        oob_color: oob_color,\n        movement_speed_randomisation: movement_speed_randomisation,\n        aperture_width: aperture_width,\n        aperture_height: aperture_height,\n        background_color: background_color,\n        aperture_background_color: aperture_background_color,\n        frame_rate: frameRate, //The average frame rate for the trial\n        frame_rate_array: frameRateArray, //The array of ms per frame in this trial, in the form of a JSON string\n        number_of_frames: numberOfFrames, //The number of frames in this trial\n        stimulus_type: stimulus_type,\n        aperture_shape: aperture_shape,\n        random_movemet_type: random_movement_type,\n        random_orientation_type: random_orientation_type,\n        number_of_apertures: number_of_apertures,\n        density_unit_area: density_unit_area,\n        prompt: prompt,\n        aperture_position_left: aperture_position_left,\n        aperture_position_top: aperture_position_top,\n        aperture_mode: aperture_mode,\n      };\n\n      //Clear the body\n      display_element.innerHTML = \"\";\n\n      //Restore the settings to JsPsych defaults\n      body.style.margin = originalMargin;\n      body.style.padding = originalPadding;\n      body.style.backgroundColor = originalBackgroundColor;\n\n      //End this trial and move on to the next trial\n      this.jsPsych.finishTrial(trial_data);\n    }; //End of end_trial\n\n    //start animation\n    animateDotMotion();\n\n    //Function to record the first response by the subject\n    function after_response(info) {\n      //If the response has not been recorded, record it\n      if (response.key == \"\") {\n        response = info; //Replace the response object created above\n      }\n\n      //If the parameter is set such that the response ends the trial, then kill the timeout and end the trial\n      if (response_ends_trial) {\n        window.clearTimeout(timeoutID);\n        end_trial();\n      }\n    } //End of after_response\n\n    //Function that determines if the response is correct\n    const correctOrNot = () => {\n      //Check that the correct_choice has been defined and that it is an array\n      if (typeof correct_choice !== \"undefined\" && correct_choice.constructor === Array) {\n        if (typeof correct_choice[0] === \"string\" || correct_choice[0] instanceof String) {\n          var key_in_choices = correct_choice.every((x: string) => {\n            return this.jsPsych.pluginAPI.compareKeys(x, response.key);\n          });\n          return key_in_choices; //If the response is included in the correct_choice array, return true. Else, return false.\n        } else if (typeof correct_choice[0] === \"number\") {\n          // the elements are numbers (javascript character codes)\n          console.error(\n            \"Error in ROK plugin: elements in the correct_choice array must be key characters (strings).\"\n          );\n          return false; // added due to TS error: not all code paths return a value\n        } else {\n          console.error(\n            \"Error in ROK plugin: elements in the correct_choice array must be key characters (strings).\"\n          );\n          return false; // added due to TS error: not all code paths return a value\n        }\n      } else {\n        console.error(\n          \"Error in ROK plugin: you must specify an array of key characters for the correct_choice parameter.\"\n        );\n        return false; // added due to TS error: not all code paths return a value\n      }\n    };\n\n    //Function that clears the dots on the canvas by drawing over it with the color of the baclground\n\n    function update(deltaTime) {\n      for (let i = 0; i < oobs.length; i++) {\n        oobs[i].update(deltaTime);\n      }\n    }\n\n    //Draw the dots on the canvas after they're updated\n    function draw() {\n      for (let i = 0; i < canvasArray.length; i++) {\n        ctxArray[i].clearRect(0, 0, canvasArray[i].width, canvasArray[i].height);\n      }\n      for (let i = 0; i < oobs.length; i++) {\n        oobs[i].draw();\n      }\n    } //End of draw\n\n    //Function to make the dots move on the canvas\n    function animateDotMotion() {\n      let previousTimestamp;\n      let dT = 0;\n      //frameRequestID saves a long integer that is the ID of this frame request. The ID is then used to terminate the request below.\n      let frameRequestID = window.requestAnimationFrame(animate);\n\n      //Start to listen to subject's key responses\n      startKeyboardListener();\n\n      //Declare a timestamp\n\n      function animate() {\n        //If stopping condition has been reached, then stop the animation\n        if (stopOobMotion) {\n          window.cancelAnimationFrame(frameRequestID); //Cancels the frame request\n        }\n        //Else continue with another frame request\n        else {\n          frameRequestID = window.requestAnimationFrame(animate); //Calls for another frame request\n\n          //If the timer has not been started and it is set, then start the timer\n          if (!timerHasStarted && trial_duration > 0) {\n            //If the trial duration is set, then set a timer to count down and call the end_trial function when the time is up\n            //(If the subject did not press a valid keyboard response within the trial duration, then this will end the trial)\n            timeoutID = window.setTimeout(end_trial, trial_duration); //This timeoutID is then used to cancel the timeout should the subject press a valid key\n            //The timer has started, so we set the variable to true so it does not start more timers\n            timerHasStarted = true;\n          }\n\n          update(dT);\n\n          draw(); //Draw each of the dots in their respective apertures\n\n          //If this is before the first frame, then start the timestamp\n          if (previousTimestamp === undefined) {\n            previousTimestamp = performance.now();\n          }\n          //Else calculate the time and push it into the array\n          else {\n            let currentTimeStamp = performance.now(); //Variable to hold current timestamp\n            if (document.hasFocus()) {\n              dT = currentTimeStamp - previousTimestamp;\n            } else {\n              previousTimestamp = performance.now();\n            }\n\n            (frameRate as number[]).push(Math.round(currentTimeStamp - previousTimestamp)); //Push the interval into the frameRate array\n            previousTimestamp = currentTimeStamp; //Reset the timestamp\n          }\n        }\n      }\n    }\n\n    //----RDK Functions End----\n\n    //----General Functions Begin//----\n\n    //Function to assign the default values for the staircase parameters\n    function assignParameterValue(argument, defaultValue) {\n      return typeof argument !== \"undefined\" ? argument : defaultValue;\n    }\n\n    //----General Functions End//----\n\n    //-------------------------------------\n    //-----------FUNCTIONS END-------------\n    //-------------------------------------\n  } // END OF TRIAL\n}\n\n//Return the plugin object which contains the trial\n//----RDK Functions End----\n\n//----General Functions Begin//----\n\n//Function to assign the default values for the staircase parameters\n\n//----General Functions End//----\n\n//-------------------------------------\n//-----------FUNCTIONS END-------------\n//-------------------------------------\n\nexport default RokPlugin;\n\nfunction getValueFromArrayOrNot(arrayOrNot, l) {\n  if (Array.isArray(arrayOrNot)) {\n    return arrayOrNot[l];\n  }\n  return arrayOrNot;\n}\n\nfunction standardColor(color) {\n  let cvs = document.createElement(\"canvas\");\n  cvs.height = 1;\n  cvs.width = 1;\n  let ctx = cvs.getContext(\"2d\");\n  ctx.fillStyle = color;\n  ctx.fillRect(0, 0, 1, 1);\n  return ctx.getImageData(0, 0, 1, 1).data;\n}\n\nfunction brighten(color, value) {\n  let col = [0, 0, 0, 255];\n  for (let i = 0; i < 3; i++) {\n    let tmp = color[i] + value;\n    tmp = tmp > 255 ? 255 : tmp;\n    tmp = tmp < 0 ? 0 : tmp;\n    col[i] = tmp;\n  }\n  return col;\n}\n\nfunction byteToHex(num) {\n  // Turns a number (0-255) into a 2-character hex number (00-ff)\n  return (\"0\" + num.toString(16)).slice(-2);\n}\n\nfunction stdColorToHex(color) {\n  // Convert any CSS color to a hex representation\n  // Examples:\n  // colorToHex('red')            # '#ff0000'\n  // colorToHex('rgb(255, 0, 0)') # '#ff0000'\n  let hex;\n  hex = [0, 1, 2]\n    .map(function (idx) {\n      return byteToHex(color[idx]);\n    })\n    .join(\"\");\n  return \"#\" + hex;\n}\n\nfunction getX(angle) {\n  let rad = (angle * Math.PI) / 180;\n  return Math.cos(rad);\n}\n\nfunction getY(angle) {\n  let rad = (angle * Math.PI) / 180;\n  return -Math.sin(rad);\n}\n\nfunction getNumbers(per, perOpp, n) {\n  let nC = Math.round((per / 100) * n);\n  let nCO;\n  if (per + perOpp == 100) {\n    nCO = n - nC;\n  } else {\n    nCO = Math.round((perOpp / 100) * n);\n  }\n  let nR = n - nC - nCO;\n  if (nC + nCO > 100 && per == 50) {\n    nC = 100 - nCO;\n  }\n  return [nC, nCO, nR];\n}\n\nfunction shuffleArray(array) {\n  let curId = array.length;\n  // There remain elements to shuffle\n  while (0 !== curId) {\n    // Pick a remaining element\n    let randId = Math.floor(Math.random() * curId);\n    curId -= 1;\n    // Swap it with the current element.\n    let tmp = array[curId];\n    array[curId] = array[randId];\n    array[randId] = tmp;\n  }\n  return array;\n}\n\nfunction shuffleArraysParalell(arrays) {\n  for (let j = arrays[0].length - 1; j > 0; j--) {\n    for (let i = 0; i < arrays.length; i++) {\n      const k = Math.floor(Math.random() * (j + 1));\n      [arrays[i][j], arrays[i][k]] = [arrays[i][k], arrays[i][j]];\n    }\n  }\n}\n\nfunction getOffset(el) {\n  const rect = el.getBoundingClientRect();\n  return {\n    left: rect.left + window.scrollX,\n    top: rect.top + window.scrollY,\n  };\n}\n\n/// O(rientated) ob(ject)\nclass Oob {\n  protected canvas: any;\n  protected size: number;\n  protected color: any;\n  protected ctx: any;\n  protected pos: {\n    y: number;\n    x: number;\n  };\n  protected vel: {\n    x: number;\n    y: number;\n  };\n  protected alpha: number;\n  protected speedRes: number;\n  protected orientation: any;\n  protected movementDirection: any;\n  protected ld: {\n    y: number;\n    x: number;\n  };\n  protected lu: {\n    y: number;\n    x: number;\n  };\n  protected r: {\n    y: number;\n    x: number;\n  };\n  protected isRandomWalk: any;\n  protected rW: number;\n  protected rO: number;\n  protected isRandomOrientated: any;\n  protected apertureType: any;\n  protected timeToChangeMovement: number;\n  protected timeToChangeOrientation: number;\n  protected isFade: any;\n\n  constructor(\n    size,\n    color,\n    orientation,\n    movementDirection,\n    speed,\n    randomisation,\n    apertureType,\n    isRandomWalk,\n    isRandomOrientated,\n    isFade,\n    canvas,\n    ctx,\n    units\n  ) {\n    this.canvas = canvas;\n    if (units === \"px\") {\n    }\n    this.size = (canvas.width * size) / 100;\n    if (units === \"px\") {\n      this.size = size;\n    }\n    this.color = color;\n    this.ctx = ctx;\n    this.pos = { x: 0, y: 0 };\n    this.vel = { x: 0, y: 0 };\n    if (apertureType == 0) {\n      this.pos.x = Math.random() * canvas.width;\n      this.pos.y = Math.random() * canvas.height;\n    }\n    if (apertureType == 1) {\n      let angle = Math.random() * 2 * Math.PI;\n      let r = Math.sqrt(Math.sqrt(Math.random())) - 0.5;\n      this.pos.x = r * Math.sin(angle) * canvas.width + canvas.width / 2;\n      this.pos.y = r * Math.cos(angle) * canvas.height + canvas.height / 2;\n    }\n    this.speedRes =\n      ((canvas.width * speed) / 100) *\n      (1 + ((randomisation / 100) * Math.random() - randomisation / 100));\n    if (units === \"px\") {\n      this.speedRes = speed * (1 + ((randomisation / 100) * Math.random() - randomisation / 100));\n    }\n    this.orientation = orientation;\n    this.movementDirection = movementDirection;\n    this.setVel();\n    // corners of triangle rel\n    this.ld = { x: 0, y: 0 };\n    this.lu = { x: 0, y: 0 };\n    this.r = { x: 0, y: 0 };\n    this.setOrient();\n    this.isRandomWalk = isRandomWalk;\n    this.rW = (Math.random() - 0.5) * 10;\n    this.isRandomOrientated = isRandomOrientated;\n    this.rO = (Math.random() - 0.5) * 10;\n    this.apertureType = apertureType;\n    this.timeToChangeMovement = Math.random();\n    this.timeToChangeOrientation = Math.random();\n    this.isFade = isFade;\n    this.alpha = 1;\n  }\n\n  setVel() {\n    this.vel.x = getX(this.movementDirection) * this.speedRes;\n    this.vel.y = getY(this.movementDirection) * this.speedRes;\n  }\n\n  setOrient() {\n    this.ld.x = getX(this.orientation + 270) * this.size;\n    this.ld.y = getY(this.orientation + 270) * this.size;\n    this.lu.x = getX(this.orientation + 90) * this.size;\n    this.lu.y = getY(this.orientation + 90) * this.size;\n    this.r.x = getX(this.orientation) * this.size;\n    this.r.y = getY(this.orientation) * this.size;\n  }\n\n  randomMovement(deltaTime) {\n    this.movementDirection += (this.rW * deltaTime) / 1000;\n    this.setVel();\n    this.timeToChangeMovement += deltaTime / 1000;\n    let d = 1 - this.timeToChangeMovement;\n    if (d < 0) {\n      this.rW = (Math.random() - 0.5) * 30;\n      this.timeToChangeMovement = -d;\n    }\n  }\n\n  randomOrientation(deltaTime) {\n    this.orientation += (this.rO * deltaTime) / 1000;\n    if (this.orientation < 0) {\n      this.orientation = 360 - this.orientation;\n    } else if (this.orientation > 360) {\n      this.orientation = this.orientation - 360;\n    }\n    this.setOrient();\n    this.timeToChangeOrientation += deltaTime / 1000;\n    let d = 1 - this.timeToChangeOrientation;\n    if (d < 0) {\n      this.rO = (Math.random() - 0.5) * 60;\n      this.setOrient();\n      this.timeToChangeOrientation = -d;\n    }\n  }\n\n  handleOutOfBounds() {\n    if (this.apertureType == 0) {\n      this.alpha = 0.1;\n      if (this.pos.x < -this.size) {\n        this.pos.x = this.canvas.width + this.size;\n      } else if (this.pos.x > this.canvas.width + this.size) {\n        this.pos.x = -this.size;\n      }\n      if (this.pos.y < -this.size) {\n        this.pos.y = this.canvas.height + this.size;\n      } else if (this.pos.y > this.canvas.height + this.size) {\n        this.pos.y = -this.size;\n      }\n      let d = Math.min(\n        this.pos.x - this.size,\n        this.pos.y - this.size,\n        this.canvas.width - (this.pos.x + this.size),\n        this.canvas.height - (this.pos.y + this.size)\n      );\n      if (d < this.canvas.width / 20 && this.isFade) {\n        this.alpha = d / (this.canvas.width / 20);\n        if (this.alpha < 0) this.alpha = 0;\n      } else {\n        this.alpha = 1;\n      }\n    }\n    if (this.apertureType == 1) {\n      this.alpha = 0.1;\n      let a = this.canvas.width / 2;\n      let b = this.canvas.height / 2;\n      let x = this.pos.x - a;\n      let y = this.pos.y - b;\n      let d = (x * x) / (a * a) + (y * y) / (b * b);\n      if (d > 0.7 && this.isFade) {\n        this.alpha = (1 - d) / 0.3;\n        if (this.alpha < 0) this.alpha = 0;\n      } else {\n        this.alpha = 1;\n      }\n      if (d > 1) {\n        // (a + this.size / 2) * (a + this.size / 2) + (b + this.size / 2) * (b + this.size / 2)) {\n        x *= -0.99;\n        y *= -0.99;\n        this.pos.x = x + a;\n        this.pos.y = y + b;\n      }\n    }\n  }\n\n  // deltaTime is given in ms!\n  update(deltaTime) {\n    // updatePosition\n    this.pos.x += (this.vel.x * deltaTime) / 1000;\n    this.pos.y += (this.vel.y * deltaTime) / 1000;\n    if (this.isRandomWalk) this.randomMovement(deltaTime);\n    if (this.isRandomOrientated) this.randomOrientation(deltaTime);\n    this.handleOutOfBounds();\n  }\n\n  draw() {\n    this.ctx.globalAlpha = this.alpha;\n    this.ctx.beginPath();\n    let x = this.pos.x + this.ld.x;\n    let y = this.pos.y + this.ld.y;\n    this.ctx.moveTo(x, y);\n    x = this.pos.x + this.lu.x;\n    y = this.pos.y + this.lu.y;\n    this.ctx.lineTo(x, y);\n    x = this.pos.x + this.r.x;\n    y = this.pos.y + this.r.y;\n    this.ctx.lineTo(x, y);\n    this.ctx.fillStyle = this.color;\n    this.ctx.fill();\n  }\n}\n\nclass OobBird extends Oob {\n  protected animationTime: number;\n  protected animationFrame: number;\n  protected animdir: number;\n  protected colorsLeft: any[];\n  protected colorsRight: any[];\n\n  constructor(\n    size,\n    color,\n    orientation,\n    movementDirection,\n    speed,\n    randomisation,\n    apertureType,\n    isRandomWalk,\n    isRandomOrientated,\n    isFade,\n    canvas,\n    ctx,\n    units\n  ) {\n    super(\n      size,\n      color,\n      orientation,\n      movementDirection,\n      speed,\n      randomisation,\n      apertureType,\n      isRandomWalk,\n      isRandomOrientated,\n      isFade,\n      canvas,\n      ctx,\n      units\n    );\n    this.animationTime = Math.random();\n    this.animationFrame = 4;\n    if (this.animationTime < 0.8) this.animationFrame = 3;\n    if (this.animationTime < 0.6) this.animationFrame = 2;\n    if (this.animationTime < 0.4) this.animationFrame = 1;\n    if (this.animationTime < 0.2) this.animationFrame = 0;\n    this.animationTime *= 0.1;\n    this.animdir = 1;\n    let stdColor = color;\n    this.makeColors(stdColor, orientation);\n  }\n\n  makeColors(color, orientation) {\n    this.colorsLeft = [];\n    this.colorsRight = [];\n    let brightenStartR = Math.round(-getY(orientation) * 5);\n    let brightenStartL = Math.round(getX(orientation) * 5);\n    let colR = brighten(color, brightenStartR);\n    let colL = brighten(color, brightenStartL);\n    this.colorsRight.push(stdColorToHex(colR));\n    this.colorsLeft.push(stdColorToHex(colL));\n    for (let i = 0; i < 6; i++) {\n      colR = brighten(colR, brightenStartR);\n      colL = brighten(colL, brightenStartL);\n      this.colorsRight.push(stdColorToHex(colR));\n      this.colorsLeft.push(stdColorToHex(colL));\n    }\n  }\n\n  update(deltaTime) {\n    super.update(deltaTime);\n    this.animationTime += deltaTime / 1000;\n    let d = 0.1 - this.animationTime;\n    if (d < 0) {\n      this.animationFrame += this.animdir;\n      this.animationTime = -d;\n      if (this.animationFrame > 5 || this.animationFrame < 1) {\n        this.animationTime -= 0.1;\n        this.animdir *= -1;\n      }\n    }\n    //this.animationFrame = 5;\n  }\n\n  draw() {\n    this.ctx.globalAlpha = this.alpha;\n    let px = this.pos.x + 0.2 * this.r.x;\n    let py = this.pos.y + 0.2 * this.r.y;\n    this.ctx.beginPath();\n    this.ctx.moveTo(px, py);\n    let x = this.pos.x + this.ld.x / (this.animationFrame * 0.1 + 1);\n    let y = this.pos.y + this.ld.y / (this.animationFrame * 0.1 + 1);\n    this.ctx.lineTo(x, y);\n    x = this.pos.x + this.r.x;\n    y = this.pos.y + this.r.y;\n    this.ctx.lineTo(x, y);\n    this.ctx.fillStyle = this.colorsRight[this.animationFrame];\n    this.ctx.fill();\n\n    this.ctx.beginPath();\n    this.ctx.moveTo(px, py);\n    x = this.pos.x + this.lu.x / (this.animationFrame * 0.1 + 1);\n    y = this.pos.y + this.lu.y / (this.animationFrame * 0.1 + 1);\n    this.ctx.lineTo(x, y);\n    x = this.pos.x + this.r.x;\n    y = this.pos.y + this.r.y;\n    this.ctx.lineTo(x, y);\n    this.ctx.fillStyle = this.colorsLeft[this.animationFrame];\n    this.ctx.fill();\n  }\n}\n\nclass OobCircle extends Oob {\n  draw() {\n    this.ctx.globalAlpha = this.alpha;\n    this.ctx.beginPath();\n    this.ctx.arc(this.pos.x, this.pos.y, this.size / 2, 0, Math.PI * 2);\n    this.ctx.fillStyle = this.color;\n    this.ctx.fill();\n  }\n}\n\nclass OobSquare extends Oob {\n  draw() {\n    this.ctx.globalAlpha = this.alpha;\n    this.ctx.beginPath();\n    let x = this.pos.x - this.size / 2;\n    let y = this.pos.y - this.size / 2;\n    this.ctx.moveTo(x, y);\n    x = this.pos.x + this.size / 2;\n    y = this.pos.y - this.size / 2;\n    this.ctx.lineTo(x, y);\n    x = this.pos.x + this.size / 2;\n    y = this.pos.y + this.size / 2;\n    this.ctx.lineTo(x, y);\n    x = this.pos.x - this.size / 2;\n    y = this.pos.y + this.size / 2;\n    this.ctx.lineTo(x, y);\n    this.ctx.fillStyle = this.color;\n    this.ctx.fill();\n  }\n}\n\nclass OobImage extends Oob {\n  private img: any;\n  private keyframes: any;\n  private keyframeTime: any;\n  private mirrorType: any;\n  private imgWidth: number;\n  private imgHeight: number;\n  private actualKeyframe: number;\n  private animationTime: number;\n\n  constructor(\n    size,\n    color,\n    orientation,\n    movementDirection,\n    speed,\n    randomisation,\n    apertureType,\n    isRandomWalk,\n    isRandomOrientated,\n    isFade,\n    imageArray,\n    keyframes,\n    keyframeTime,\n    mirrorType,\n    canvas,\n    ctx,\n    units\n  ) {\n    super(\n      size,\n      color,\n      orientation,\n      movementDirection,\n      speed,\n      randomisation,\n      apertureType,\n      isRandomWalk,\n      isRandomOrientated,\n      isFade,\n      canvas,\n      ctx,\n      units\n    );\n    if (Array.isArray(imageArray)) {\n      let i = Math.floor(Math.random() * imageArray.length);\n      this.img = imageArray[i];\n      this.keyframes = getValueFromArrayOrNot(keyframes, i);\n      this.keyframeTime = getValueFromArrayOrNot(keyframeTime, i);\n      this.mirrorType = getValueFromArrayOrNot(mirrorType, i);\n    } else {\n      this.img = imageArray;\n      this.keyframes = keyframes;\n      this.keyframeTime = keyframeTime;\n      this.mirrorType = mirrorType;\n    }\n    this.imgWidth = this.img.naturalWidth / this.keyframes;\n    this.imgHeight = this.img.naturalHeight;\n    this.actualKeyframe = Math.floor(Math.random() * this.keyframes);\n    this.animationTime = Math.random() * this.keyframeTime;\n  }\n\n  update(deltaTime) {\n    super.update(deltaTime);\n    this.animationTime += deltaTime / 1000;\n    let d = this.keyframeTime - this.animationTime;\n    if (d < 0) {\n      this.animationTime = 0;\n      this.actualKeyframe++;\n      if (this.actualKeyframe >= this.keyframes) this.actualKeyframe = 0;\n    }\n  }\n\n  draw() {\n    this.ctx.globalAlpha = this.alpha;\n    this.ctx.translate(this.pos.x, this.pos.y);\n    if (this.mirrorType === 0) {\n      this.ctx.rotate((-Math.PI * this.orientation) / 180);\n    } else if (this.mirrorType == 1) {\n      if (this.orientation > 90 && this.orientation < 270) {\n        this.ctx.rotate((-Math.PI * (this.orientation - 180)) / 180);\n      } else {\n        this.ctx.rotate((-Math.PI * this.orientation) / 180);\n      }\n    }\n    this.ctx.translate(-this.pos.x, -this.pos.y);\n    if (this.mirrorType === 0) {\n      this.ctx.drawImage(\n        this.img,\n        this.actualKeyframe * this.imgWidth,\n        0,\n        this.imgWidth,\n        this.imgHeight,\n        this.pos.x - this.size / 2,\n        this.pos.y - this.size / 2,\n        this.size,\n        this.size\n      );\n    } else if (this.mirrorType === 1) {\n      if (this.orientation > 90 && this.orientation < 270) {\n        this.ctx.drawImage(\n          this.img,\n          this.actualKeyframe * this.imgWidth,\n          this.imgHeight / 2,\n          this.imgWidth,\n          this.imgHeight / 2,\n          this.pos.x - this.size / 2,\n          this.pos.y - this.size / 2,\n          this.size,\n          this.size\n        );\n      } else {\n        this.ctx.drawImage(\n          this.img,\n          this.actualKeyframe * this.imgWidth,\n          0,\n          this.imgWidth,\n          this.imgHeight / 2,\n          this.pos.x - this.size / 2,\n          this.pos.y - this.size / 2,\n          this.size,\n          this.size\n        );\n      }\n    }\n    this.ctx.translate(this.pos.x, this.pos.y);\n    if (this.mirrorType === 0) {\n      this.ctx.rotate((Math.PI * this.orientation) / 180);\n    } else if (this.mirrorType === 1) {\n      if (this.orientation > 90 && this.orientation < 270) {\n        this.ctx.rotate((Math.PI * (this.orientation - 180)) / 180);\n      } else {\n        this.ctx.rotate((Math.PI * this.orientation) / 180);\n      }\n    }\n    this.ctx.translate(-this.pos.x, -this.pos.y);\n  }\n}\n"],"names":["info","name","parameters","choices","type","ParameterType","KEYS","pretty_name","default","correct_choice","undefined","trial_duration","INT","response_ends_trial","BOOL","number_of_oobs","coherent_movement_direction","coherent_orientation","coherence_movement","coherence_orientation","coherence_movement_opposite","coherence_orientation_opposite","movement_speed","movement_speed_randomisation","oob_size","aperture_width","aperture_height","oob_color","STRING","background_color","border","border_thickness","border_color","stimulus_type","aperture_shape","aperture_background_color","random_movement_type","random_orientation_type","number_of_apertures","density_unit_area","aperture_position_left","aperture_position_top","prompt","fade_out","stimulus_image","IMAGE","background_image","stimulus_image_keyframes","background_image_keyframes","stimulus_keyframe_time","FLOAT","stimulus_mirror","experiment_congruency_mode","experiment_main_task","units","aperture_draw_mode","RokPlugin","jsPsych","_classCallCheck","this","_createClass","key","value","display_element","trial","_this","assignParameterValue","aperture_mode","nApertures","nAperturesTmp","canvasArray","containerArray","i","push","document","createElement","getValueFromArrayOrNot","style","backgroundImage","backgroundRepeat","backgroundSize","appendChild","Array","isArray","p","margin","padding","textAlign","innerHTML","position","transform","top","width","body","getElementsByClassName","originalMargin","originalPadding","originalBackgroundColor","backgroundColor","ctxArray","getContext","disp_size","getBoundingClientRect","height","Math","round","toString","left","x","timeoutID","keyboardListener","stopOobMotion","timerHasStarted","response","rt","frameRate","numberOfFrames","img","imgSrc","j","length","iS","k","src","oobs","nOob","tmpCoherenceMovement","tmpOppositeCoherenceMovement","tmpCoherenceOrientation","tmpOppositeCoherenceOrientation","experimentMode","mainTask","tmpOrientation","tmpMovementDirection","_getNumbers2","_slicedToArray","getNumbers","nCoherentMovement","nCoherentOppositeMovement","nIncoherentMovement","_getNumbers4","nCoherentOrientation","nCoherentOppositeOrientation","nIncoherentOrientation","shuffleArray","_getNumbers6","floor","_getNumbers8","oobColor","stimulusType","standardColor","apertureType","speed","speedRandomisation","size","isFade","randomWalk","randomOrient","orientation","random","movementDirection","oob","ctx","cvs","Oob","OobCircle","OobSquare","OobBird","imageArray","keyframes","keyframeTime","mirrorType","OobImage","previousTimestamp","dT","frameRequestID","end_trial","frameRateArray","reduce","total","current","pluginAPI","cancelKeyboardResponse","trial_data","key_press","correct","correctOrNot","opposite_coherence_movement","opposite_coherence_orientation","frame_rate","frame_rate_array","number_of_frames","random_movemet_type","finishTrial","after_response","window","clearTimeout","requestAnimationFrame","animate","cancelAnimationFrame","setTimeout","deltaTime","update","clearRect","draw","performance","now","currentTimeStamp","hasFocus","getKeyboardResponse","callback_function","valid_responses","rt_method","persist","allow_held_key","constructor","String","key_in_choices","every","compareKeys","console","error","argument","defaultValue","arrayOrNot","l","color","fillStyle","fillRect","getImageData","data","brighten","col","tmp","stdColorToHex","map","idx","slice","join","getX","angle","rad","PI","cos","getY","sin","per","perOpp","n","nCO","nC","nR","array","curId","randId","randomisation","isRandomWalk","isRandomOrientated","canvas","pos","y","vel","r","sqrt","speedRes","setVel","ld","lu","setOrient","rW","rO","timeToChangeMovement","timeToChangeOrientation","alpha","d","min","a","b","randomMovement","randomOrientation","handleOutOfBounds","globalAlpha","beginPath","moveTo","lineTo","fill","_Oob","_this2","_callSuper","animationTime","animationFrame","animdir","stdColor","makeColors","_inherits","colorsLeft","colorsRight","brightenStartR","brightenStartL","colR","colL","_get","_getPrototypeOf","prototype","call","px","py","_Oob2","arguments","arc","_Oob3","_Oob4","_this3","imgWidth","naturalWidth","imgHeight","naturalHeight","actualKeyframe","translate","rotate","drawImage"],"mappings":"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"}