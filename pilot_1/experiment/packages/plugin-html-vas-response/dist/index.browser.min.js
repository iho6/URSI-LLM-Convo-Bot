"use strict";function _typeof(a){"@babel/helpers - typeof";return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(a){return typeof a}:function(a){return a&&"function"==typeof Symbol&&a.constructor===Symbol&&a!==Symbol.prototype?"symbol":typeof a},_typeof(a)}function _classCallCheck(a,b){if(!(a instanceof b))throw new TypeError("Cannot call a class as a function")}function _defineProperties(a,b){for(var c,d=0;d<b.length;d++)c=b[d],c.enumerable=c.enumerable||!1,c.configurable=!0,"value"in c&&(c.writable=!0),Object.defineProperty(a,_toPropertyKey(c.key),c)}function _createClass(a,b,c){return b&&_defineProperties(a.prototype,b),c&&_defineProperties(a,c),Object.defineProperty(a,"prototype",{writable:!1}),a}function _toPropertyKey(a){var b=_toPrimitive(a,"string");return"symbol"==_typeof(b)?b:b+""}function _toPrimitive(a,b){if("object"!=_typeof(a)||!a)return a;var c=a[Symbol.toPrimitive];if(void 0!==c){var d=c.call(a,b||"default");if("object"!=_typeof(d))return d;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===b?String:Number)(a)}var jsPsychHtmlVasResponse=function(a){"use strict";var b={name:"html-vas-response",parameters:{stimulus:{type:a.ParameterType.HTML_STRING,pretty_name:"Stimulus",default:void 0},labels:{type:a.ParameterType.HTML_STRING,pretty_name:"Labels",default:[],array:!0},resp_fcn:{type:a.ParameterType.FUNCTION,pretty_name:"Response function",default:null},ticks:{type:a.ParameterType.BOOL,pretty_name:"Ticks",default:!0},n_scale_points:{type:a.ParameterType.BOOL,pretty_name:"Number of scale points",default:null},scale_width:{type:a.ParameterType.INT,pretty_name:"VAS width",default:null},scale_height:{type:a.ParameterType.INT,pretty_name:"VAS height",default:40},scale_colour:{type:a.ParameterType.STRING,pretty_name:"Scale colour",default:"black"},scale_cursor:{type:a.ParameterType.STRING,pretty_name:"Scale cursor",default:"pointer"},marker_colour:{type:a.ParameterType.STRING,pretty_name:"Marker colour",default:"rgba(0, 0, 0, 0.5)"},tick_colour:{type:a.ParameterType.STRING,pretty_name:"tick colour",default:"black"},prompt:{type:a.ParameterType.HTML_STRING,pretty_name:"Prompt",default:null},button_label:{type:a.ParameterType.HTML_STRING,pretty_name:"Buton label",default:"Continue"},required:{type:a.ParameterType.BOOL,pretty_name:"Response required",default:!1},stimulus_duration:{type:a.ParameterType.INT,pretty_name:"Stimulus duration",default:null},trial_duration:{type:a.ParameterType.INT,pretty_name:"Trial duration",default:null},response_ends_trial:{type:a.ParameterType.BOOL,pretty_name:"Response ends trial",default:!0}}},c=/*#__PURE__*/function(){function b(a){_classCallCheck(this,b),this.jsPsych=a}return _createClass(b,[{key:"trial",value:function trial(b,c){var d=Math.round;function e(){jsPsych.pluginAPI.clearAllTimeouts();// save data
var a={rt:t.rt,stimulus:c.stimulus,response:t.response,clicks:s};b.innerHTML="",jsPsych.finishTrial(a)}// half of the thumb width value from jspsych.css, used to adjust the label positions
var f="<div id=\"jspsych-html-vas-response-wrapper\" style=\"margin: 100px 0px;\">";f+="<div id=\"jspsych-html-vas-response-stimulus\">"+c.stimulus+"</div>",f+="<div class=\"jspsych-html-vas-response-container\" style=\"position:relative; margin: 0 auto 3em auto; ",f+=null===c.scale_width?"width:auto;":"width:"+c.scale_width+"px;",f+="\">",f+="<div id=\"jspsych-html-vas-response-vas\" style=\"position: relative; left: 0px; top: 0px; height: "+c.scale_height+"px; width: 100%; cursor: "+c.scale_cursor+";\">",f+="<div style=\"position: relative; background: "+c.scale_colour+"; width: 100%; height: 2px; top: "+(c.scale_height/2-1)+"px\"></div>",f+="<div id=\"jspsych-html-vas-response-vline\" style=\"visibility: hidden; position: absolute; left: 0px; background-color: "+c.marker_colour+"; height: "+c.scale_height+"px; width: 2px; top: 0px\"></div>",f+="</div>",f+="<div>";for(var g=0;g<c.labels.length;g++){var h=100/(c.labels.length-1),i=g*(100/(c.labels.length-1)),k=100*((i-50)/50),l=k*7.5/100;f+="<div style=\"border: 1px solid transparent; display: inline-block; position: absolute; left:calc("+i+"% - ("+h+"% / 2) - "+l+"px); text-align: center; width: "+h+"%;\">",f+="<span style=\"text-align: center; font-size: 80%;\">"+c.labels[g]+"</span>",f+="</div>"}f+="</div>",f+="</div>",f+="</div>",null!==c.prompt&&(f+=c.prompt),f+="<button id=\"jspsych-html-vas-response-next\" class=\"jspsych-btn\" "+(c.required?"disabled":"")+">"+c.button_label+"</button>",b.innerHTML=f;var m=document.getElementById("jspsych-html-vas-response-vas");// Add minor ticks
if(c.ticks)for(var g=0;g<c.labels.length;g++){var n=100/(c.labels.length-1),o=g*(100/(c.labels.length-1)),p=document.createElement("div");p.style.position="absolute",p.style.height=c.scale_height/2+"px",p.style.width="2px",p.style.top=c.scale_height/4+"px",p.style.background=c.tick_colour,p.style.left=o/100*m.clientWidth-1+"px",m.appendChild(p)}// Function to move vertical tick
var q=null,r=!0,s=[];m.onclick=function(a){var b=performance.now()-v;if(r){var e=document.getElementById("jspsych-html-vas-response-vas"),f=e.getBoundingClientRect();if(a.clientX<=f.right&&a.clientX>=f.left){q=(a.clientX-f.left)/f.width,c.n_scale_points&&(q=d(q*(c.n_scale_points-1))/(c.n_scale_points-1));var g=document.getElementById("jspsych-html-vas-response-vline");g.style.left=q*f.width-1+"px",g.style.visibility="visible";// vas.appendChild(vline);
var h=document.getElementById("jspsych-html-vas-response-next");h.disabled=!1,s.push({time:b,location:q}),c.resp_fcn&&c.resp_fcn(q)}}};var t={rt:null,response:null},u=document.getElementById("jspsych-html-vas-response-next");u.onclick=function(){// measure response time
var a=performance.now();t.rt=d(a-v),t.response=q,c.response_ends_trial?e():r=!1},null!==c.stimulus_duration&&a.pluginAPI.setTimeout(function(){var a=document.getElementById("jspsych-html-vas-response-stimulus");a.style.visibility="hidden"},c.stimulus_duration),null!==c.trial_duration&&a.pluginAPI.setTimeout(e,c.trial_duration);var v=performance.now()}}]),b}();return c.info=b,c}(jsPsychModule);

//# sourceMappingURL=index.browser.min.js.map