{"version":3,"file":"index.cjs","sources":["../../../node_modules/openai/_shims/registry.mjs","../../../node_modules/openai/_shims/MultipartBody.mjs","../../../node_modules/openai/_shims/web-runtime.mjs","../../../node_modules/openai/_shims/index.mjs","../../../node_modules/openai/streaming.mjs","../../../node_modules/openai/core.mjs","../../../node_modules/openai/error.mjs","../../../node_modules/openai/lib/RunnableFunction.mjs","../../../node_modules/openai/lib/chatCompletionUtils.mjs","../../../node_modules/openai/lib/AbstractChatCompletionRunner.mjs","../../../node_modules/openai/lib/ChatCompletionStream.mjs","../src/ChatLog.ts","../src/index.ts"],"sourcesContent":["export let auto = false;\nexport let kind = undefined;\nexport let fetch = undefined;\nexport let Request = undefined;\nexport let Response = undefined;\nexport let Headers = undefined;\nexport let FormData = undefined;\nexport let Blob = undefined;\nexport let File = undefined;\nexport let ReadableStream = undefined;\nexport let getMultipartRequestOptions = undefined;\nexport let getDefaultAgent = undefined;\nexport let fileFromPath = undefined;\nexport let isFsReadStream = undefined;\nexport function setShims(shims, options = { auto: false }) {\n    if (auto) {\n        throw new Error(`you must \\`import 'openai/shims/${shims.kind}'\\` before importing anything else from openai`);\n    }\n    if (kind) {\n        throw new Error(`can't \\`import 'openai/shims/${shims.kind}'\\` after \\`import 'openai/shims/${kind}'\\``);\n    }\n    auto = options.auto;\n    kind = shims.kind;\n    fetch = shims.fetch;\n    Request = shims.Request;\n    Response = shims.Response;\n    Headers = shims.Headers;\n    FormData = shims.FormData;\n    Blob = shims.Blob;\n    File = shims.File;\n    ReadableStream = shims.ReadableStream;\n    getMultipartRequestOptions = shims.getMultipartRequestOptions;\n    getDefaultAgent = shims.getDefaultAgent;\n    fileFromPath = shims.fileFromPath;\n    isFsReadStream = shims.isFsReadStream;\n}\n//# sourceMappingURL=registry.mjs.map","/**\n * Disclaimer: modules in _shims aren't intended to be imported by SDK users.\n */\nexport class MultipartBody {\n    constructor(body) {\n        this.body = body;\n    }\n    get [Symbol.toStringTag]() {\n        return 'MultipartBody';\n    }\n}\n//# sourceMappingURL=MultipartBody.mjs.map","import { MultipartBody } from \"./MultipartBody.mjs\";\nexport function getRuntime({ manuallyImported } = {}) {\n    const recommendation = manuallyImported ?\n        `You may need to use polyfills`\n        : `Add one of these imports before your first \\`import â€¦ from 'openai'\\`:\n- \\`import 'openai/shims/node'\\` (if you're running on Node)\n- \\`import 'openai/shims/web'\\` (otherwise)\n`;\n    let _fetch, _Request, _Response, _Headers;\n    try {\n        // @ts-ignore\n        _fetch = fetch;\n        // @ts-ignore\n        _Request = Request;\n        // @ts-ignore\n        _Response = Response;\n        // @ts-ignore\n        _Headers = Headers;\n    }\n    catch (error) {\n        throw new Error(`this environment is missing the following Web Fetch API type: ${error.message}. ${recommendation}`);\n    }\n    return {\n        kind: 'web',\n        fetch: _fetch,\n        Request: _Request,\n        Response: _Response,\n        Headers: _Headers,\n        FormData: \n        // @ts-ignore\n        typeof FormData !== 'undefined' ? FormData : (class FormData {\n            // @ts-ignore\n            constructor() {\n                throw new Error(`file uploads aren't supported in this environment yet as 'FormData' is undefined. ${recommendation}`);\n            }\n        }),\n        Blob: typeof Blob !== 'undefined' ? Blob : (class Blob {\n            constructor() {\n                throw new Error(`file uploads aren't supported in this environment yet as 'Blob' is undefined. ${recommendation}`);\n            }\n        }),\n        File: \n        // @ts-ignore\n        typeof File !== 'undefined' ? File : (class File {\n            // @ts-ignore\n            constructor() {\n                throw new Error(`file uploads aren't supported in this environment yet as 'File' is undefined. ${recommendation}`);\n            }\n        }),\n        ReadableStream: \n        // @ts-ignore\n        typeof ReadableStream !== 'undefined' ? ReadableStream : (class ReadableStream {\n            // @ts-ignore\n            constructor() {\n                throw new Error(`streaming isn't supported in this environment yet as 'ReadableStream' is undefined. ${recommendation}`);\n            }\n        }),\n        getMultipartRequestOptions: async (\n        // @ts-ignore\n        form, opts) => ({\n            ...opts,\n            body: new MultipartBody(form),\n        }),\n        getDefaultAgent: (url) => undefined,\n        fileFromPath: () => {\n            throw new Error('The `fileFromPath` function is only supported in Node. See the README for more details: https://www.github.com/openai/openai-node#file-uploads');\n        },\n        isFsReadStream: (value) => false,\n    };\n}\n//# sourceMappingURL=web-runtime.mjs.map","/**\n * Disclaimer: modules in _shims aren't intended to be imported by SDK users.\n */\nimport * as shims from './registry.mjs';\nimport * as auto from 'openai/_shims/auto/runtime';\nif (!shims.kind) shims.setShims(auto.getRuntime(), { auto: true });\nexport * from './registry.mjs';\n","import { ReadableStream } from \"./_shims/index.mjs\";\nimport { OpenAIError } from \"./error.mjs\";\nimport { APIError } from 'openai/error';\nexport class Stream {\n    constructor(iterator, controller) {\n        this.iterator = iterator;\n        this.controller = controller;\n    }\n    static fromSSEResponse(response, controller) {\n        let consumed = false;\n        async function* iterator() {\n            if (consumed) {\n                throw new Error('Cannot iterate over a consumed stream, use `.tee()` to split the stream.');\n            }\n            consumed = true;\n            let done = false;\n            try {\n                for await (const sse of _iterSSEMessages(response, controller)) {\n                    if (done)\n                        continue;\n                    if (sse.data.startsWith('[DONE]')) {\n                        done = true;\n                        continue;\n                    }\n                    if (sse.event === null) {\n                        let data;\n                        try {\n                            data = JSON.parse(sse.data);\n                        }\n                        catch (e) {\n                            console.error(`Could not parse message into JSON:`, sse.data);\n                            console.error(`From chunk:`, sse.raw);\n                            throw e;\n                        }\n                        if (data && data.error) {\n                            throw new APIError(undefined, data.error, undefined, undefined);\n                        }\n                        yield data;\n                    }\n                    else {\n                        let data;\n                        try {\n                            data = JSON.parse(sse.data);\n                        }\n                        catch (e) {\n                            console.error(`Could not parse message into JSON:`, sse.data);\n                            console.error(`From chunk:`, sse.raw);\n                            throw e;\n                        }\n                        // TODO: Is this where the error should be thrown?\n                        if (sse.event == 'error') {\n                            throw new APIError(undefined, data.error, data.message, undefined);\n                        }\n                        yield { event: sse.event, data: data };\n                    }\n                }\n                done = true;\n            }\n            catch (e) {\n                // If the user calls `stream.controller.abort()`, we should exit without throwing.\n                if (e instanceof Error && e.name === 'AbortError')\n                    return;\n                throw e;\n            }\n            finally {\n                // If the user `break`s, abort the ongoing request.\n                if (!done)\n                    controller.abort();\n            }\n        }\n        return new Stream(iterator, controller);\n    }\n    /**\n     * Generates a Stream from a newline-separated ReadableStream\n     * where each item is a JSON value.\n     */\n    static fromReadableStream(readableStream, controller) {\n        let consumed = false;\n        async function* iterLines() {\n            const lineDecoder = new LineDecoder();\n            const iter = readableStreamAsyncIterable(readableStream);\n            for await (const chunk of iter) {\n                for (const line of lineDecoder.decode(chunk)) {\n                    yield line;\n                }\n            }\n            for (const line of lineDecoder.flush()) {\n                yield line;\n            }\n        }\n        async function* iterator() {\n            if (consumed) {\n                throw new Error('Cannot iterate over a consumed stream, use `.tee()` to split the stream.');\n            }\n            consumed = true;\n            let done = false;\n            try {\n                for await (const line of iterLines()) {\n                    if (done)\n                        continue;\n                    if (line)\n                        yield JSON.parse(line);\n                }\n                done = true;\n            }\n            catch (e) {\n                // If the user calls `stream.controller.abort()`, we should exit without throwing.\n                if (e instanceof Error && e.name === 'AbortError')\n                    return;\n                throw e;\n            }\n            finally {\n                // If the user `break`s, abort the ongoing request.\n                if (!done)\n                    controller.abort();\n            }\n        }\n        return new Stream(iterator, controller);\n    }\n    [Symbol.asyncIterator]() {\n        return this.iterator();\n    }\n    /**\n     * Splits the stream into two streams which can be\n     * independently read from at different speeds.\n     */\n    tee() {\n        const left = [];\n        const right = [];\n        const iterator = this.iterator();\n        const teeIterator = (queue) => {\n            return {\n                next: () => {\n                    if (queue.length === 0) {\n                        const result = iterator.next();\n                        left.push(result);\n                        right.push(result);\n                    }\n                    return queue.shift();\n                },\n            };\n        };\n        return [\n            new Stream(() => teeIterator(left), this.controller),\n            new Stream(() => teeIterator(right), this.controller),\n        ];\n    }\n    /**\n     * Converts this stream to a newline-separated ReadableStream of\n     * JSON stringified values in the stream\n     * which can be turned back into a Stream with `Stream.fromReadableStream()`.\n     */\n    toReadableStream() {\n        const self = this;\n        let iter;\n        const encoder = new TextEncoder();\n        return new ReadableStream({\n            async start() {\n                iter = self[Symbol.asyncIterator]();\n            },\n            async pull(ctrl) {\n                try {\n                    const { value, done } = await iter.next();\n                    if (done)\n                        return ctrl.close();\n                    const bytes = encoder.encode(JSON.stringify(value) + '\\n');\n                    ctrl.enqueue(bytes);\n                }\n                catch (err) {\n                    ctrl.error(err);\n                }\n            },\n            async cancel() {\n                await iter.return?.();\n            },\n        });\n    }\n}\nexport async function* _iterSSEMessages(response, controller) {\n    if (!response.body) {\n        controller.abort();\n        throw new OpenAIError(`Attempted to iterate over a response with no body`);\n    }\n    const sseDecoder = new SSEDecoder();\n    const lineDecoder = new LineDecoder();\n    const iter = readableStreamAsyncIterable(response.body);\n    for await (const sseChunk of iterSSEChunks(iter)) {\n        for (const line of lineDecoder.decode(sseChunk)) {\n            const sse = sseDecoder.decode(line);\n            if (sse)\n                yield sse;\n        }\n    }\n    for (const line of lineDecoder.flush()) {\n        const sse = sseDecoder.decode(line);\n        if (sse)\n            yield sse;\n    }\n}\n/**\n * Given an async iterable iterator, iterates over it and yields full\n * SSE chunks, i.e. yields when a double new-line is encountered.\n */\nasync function* iterSSEChunks(iterator) {\n    let data = new Uint8Array();\n    for await (const chunk of iterator) {\n        if (chunk == null) {\n            continue;\n        }\n        const binaryChunk = chunk instanceof ArrayBuffer ? new Uint8Array(chunk)\n            : typeof chunk === 'string' ? new TextEncoder().encode(chunk)\n                : chunk;\n        let newData = new Uint8Array(data.length + binaryChunk.length);\n        newData.set(data);\n        newData.set(binaryChunk, data.length);\n        data = newData;\n        let patternIndex;\n        while ((patternIndex = findDoubleNewlineIndex(data)) !== -1) {\n            yield data.slice(0, patternIndex);\n            data = data.slice(patternIndex);\n        }\n    }\n    if (data.length > 0) {\n        yield data;\n    }\n}\nfunction findDoubleNewlineIndex(buffer) {\n    // This function searches the buffer for the end patterns (\\r\\r, \\n\\n, \\r\\n\\r\\n)\n    // and returns the index right after the first occurrence of any pattern,\n    // or -1 if none of the patterns are found.\n    const newline = 0x0a; // \\n\n    const carriage = 0x0d; // \\r\n    for (let i = 0; i < buffer.length - 2; i++) {\n        if (buffer[i] === newline && buffer[i + 1] === newline) {\n            // \\n\\n\n            return i + 2;\n        }\n        if (buffer[i] === carriage && buffer[i + 1] === carriage) {\n            // \\r\\r\n            return i + 2;\n        }\n        if (buffer[i] === carriage &&\n            buffer[i + 1] === newline &&\n            i + 3 < buffer.length &&\n            buffer[i + 2] === carriage &&\n            buffer[i + 3] === newline) {\n            // \\r\\n\\r\\n\n            return i + 4;\n        }\n    }\n    return -1;\n}\nclass SSEDecoder {\n    constructor() {\n        this.event = null;\n        this.data = [];\n        this.chunks = [];\n    }\n    decode(line) {\n        if (line.endsWith('\\r')) {\n            line = line.substring(0, line.length - 1);\n        }\n        if (!line) {\n            // empty line and we didn't previously encounter any messages\n            if (!this.event && !this.data.length)\n                return null;\n            const sse = {\n                event: this.event,\n                data: this.data.join('\\n'),\n                raw: this.chunks,\n            };\n            this.event = null;\n            this.data = [];\n            this.chunks = [];\n            return sse;\n        }\n        this.chunks.push(line);\n        if (line.startsWith(':')) {\n            return null;\n        }\n        let [fieldname, _, value] = partition(line, ':');\n        if (value.startsWith(' ')) {\n            value = value.substring(1);\n        }\n        if (fieldname === 'event') {\n            this.event = value;\n        }\n        else if (fieldname === 'data') {\n            this.data.push(value);\n        }\n        return null;\n    }\n}\n/**\n * A re-implementation of httpx's `LineDecoder` in Python that handles incrementally\n * reading lines from text.\n *\n * https://github.com/encode/httpx/blob/920333ea98118e9cf617f246905d7b202510941c/httpx/_decoders.py#L258\n */\nclass LineDecoder {\n    constructor() {\n        this.buffer = [];\n        this.trailingCR = false;\n    }\n    decode(chunk) {\n        let text = this.decodeText(chunk);\n        if (this.trailingCR) {\n            text = '\\r' + text;\n            this.trailingCR = false;\n        }\n        if (text.endsWith('\\r')) {\n            this.trailingCR = true;\n            text = text.slice(0, -1);\n        }\n        if (!text) {\n            return [];\n        }\n        const trailingNewline = LineDecoder.NEWLINE_CHARS.has(text[text.length - 1] || '');\n        let lines = text.split(LineDecoder.NEWLINE_REGEXP);\n        // if there is a trailing new line then the last entry will be an empty\n        // string which we don't care about\n        if (trailingNewline) {\n            lines.pop();\n        }\n        if (lines.length === 1 && !trailingNewline) {\n            this.buffer.push(lines[0]);\n            return [];\n        }\n        if (this.buffer.length > 0) {\n            lines = [this.buffer.join('') + lines[0], ...lines.slice(1)];\n            this.buffer = [];\n        }\n        if (!trailingNewline) {\n            this.buffer = [lines.pop() || ''];\n        }\n        return lines;\n    }\n    decodeText(bytes) {\n        if (bytes == null)\n            return '';\n        if (typeof bytes === 'string')\n            return bytes;\n        // Node:\n        if (typeof Buffer !== 'undefined') {\n            if (bytes instanceof Buffer) {\n                return bytes.toString();\n            }\n            if (bytes instanceof Uint8Array) {\n                return Buffer.from(bytes).toString();\n            }\n            throw new OpenAIError(`Unexpected: received non-Uint8Array (${bytes.constructor.name}) stream chunk in an environment with a global \"Buffer\" defined, which this library assumes to be Node. Please report this error.`);\n        }\n        // Browser\n        if (typeof TextDecoder !== 'undefined') {\n            if (bytes instanceof Uint8Array || bytes instanceof ArrayBuffer) {\n                this.textDecoder ?? (this.textDecoder = new TextDecoder('utf8'));\n                return this.textDecoder.decode(bytes);\n            }\n            throw new OpenAIError(`Unexpected: received non-Uint8Array/ArrayBuffer (${bytes.constructor.name}) in a web platform. Please report this error.`);\n        }\n        throw new OpenAIError(`Unexpected: neither Buffer nor TextDecoder are available as globals. Please report this error.`);\n    }\n    flush() {\n        if (!this.buffer.length && !this.trailingCR) {\n            return [];\n        }\n        const lines = [this.buffer.join('')];\n        this.buffer = [];\n        this.trailingCR = false;\n        return lines;\n    }\n}\n// prettier-ignore\nLineDecoder.NEWLINE_CHARS = new Set(['\\n', '\\r']);\nLineDecoder.NEWLINE_REGEXP = /\\r\\n|[\\n\\r]/g;\n/** This is an internal helper function that's just used for testing */\nexport function _decodeChunks(chunks) {\n    const decoder = new LineDecoder();\n    const lines = [];\n    for (const chunk of chunks) {\n        lines.push(...decoder.decode(chunk));\n    }\n    return lines;\n}\nfunction partition(str, delimiter) {\n    const index = str.indexOf(delimiter);\n    if (index !== -1) {\n        return [str.substring(0, index), delimiter, str.substring(index + delimiter.length)];\n    }\n    return [str, '', ''];\n}\n/**\n * Most browsers don't yet have async iterable support for ReadableStream,\n * and Node has a very different way of reading bytes from its \"ReadableStream\".\n *\n * This polyfill was pulled from https://github.com/MattiasBuelens/web-streams-polyfill/pull/122#issuecomment-1627354490\n */\nexport function readableStreamAsyncIterable(stream) {\n    if (stream[Symbol.asyncIterator])\n        return stream;\n    const reader = stream.getReader();\n    return {\n        async next() {\n            try {\n                const result = await reader.read();\n                if (result?.done)\n                    reader.releaseLock(); // release lock when stream becomes closed\n                return result;\n            }\n            catch (e) {\n                reader.releaseLock(); // release lock when stream becomes errored\n                throw e;\n            }\n        },\n        async return() {\n            const cancelPromise = reader.cancel();\n            reader.releaseLock();\n            await cancelPromise;\n            return { done: true, value: undefined };\n        },\n        [Symbol.asyncIterator]() {\n            return this;\n        },\n    };\n}\n//# sourceMappingURL=streaming.mjs.map","var __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _AbstractPage_client;\nimport { VERSION } from \"./version.mjs\";\nimport { Stream } from \"./streaming.mjs\";\nimport { OpenAIError, APIError, APIConnectionError, APIConnectionTimeoutError, APIUserAbortError, } from \"./error.mjs\";\nimport { kind as shimsKind, getDefaultAgent, fetch, } from \"./_shims/index.mjs\";\nimport { isMultipartBody } from \"./uploads.mjs\";\nexport { maybeMultipartFormRequestOptions, multipartFormRequestOptions, createForm, } from \"./uploads.mjs\";\nasync function defaultParseResponse(props) {\n    const { response } = props;\n    if (props.options.stream) {\n        debug('response', response.status, response.url, response.headers, response.body);\n        // Note: there is an invariant here that isn't represented in the type system\n        // that if you set `stream: true` the response type must also be `Stream<T>`\n        if (props.options.__streamClass) {\n            return props.options.__streamClass.fromSSEResponse(response, props.controller);\n        }\n        return Stream.fromSSEResponse(response, props.controller);\n    }\n    // fetch refuses to read the body when the status code is 204.\n    if (response.status === 204) {\n        return null;\n    }\n    if (props.options.__binaryResponse) {\n        return response;\n    }\n    const contentType = response.headers.get('content-type');\n    const isJSON = contentType?.includes('application/json') || contentType?.includes('application/vnd.api+json');\n    if (isJSON) {\n        const json = await response.json();\n        debug('response', response.status, response.url, response.headers, json);\n        return json;\n    }\n    const text = await response.text();\n    debug('response', response.status, response.url, response.headers, text);\n    // TODO handle blob, arraybuffer, other content types, etc.\n    return text;\n}\n/**\n * A subclass of `Promise` providing additional helper methods\n * for interacting with the SDK.\n */\nexport class APIPromise extends Promise {\n    constructor(responsePromise, parseResponse = defaultParseResponse) {\n        super((resolve) => {\n            // this is maybe a bit weird but this has to be a no-op to not implicitly\n            // parse the response body; instead .then, .catch, .finally are overridden\n            // to parse the response\n            resolve(null);\n        });\n        this.responsePromise = responsePromise;\n        this.parseResponse = parseResponse;\n    }\n    _thenUnwrap(transform) {\n        return new APIPromise(this.responsePromise, async (props) => transform(await this.parseResponse(props)));\n    }\n    /**\n     * Gets the raw `Response` instance instead of parsing the response\n     * data.\n     *\n     * If you want to parse the response body but still get the `Response`\n     * instance, you can use {@link withResponse()}.\n     *\n     * ðŸ‘‹ Getting the wrong TypeScript type for `Response`?\n     * Try setting `\"moduleResolution\": \"NodeNext\"` if you can,\n     * or add one of these imports before your first `import â€¦ from 'openai'`:\n     * - `import 'openai/shims/node'` (if you're running on Node)\n     * - `import 'openai/shims/web'` (otherwise)\n     */\n    asResponse() {\n        return this.responsePromise.then((p) => p.response);\n    }\n    /**\n     * Gets the parsed response data and the raw `Response` instance.\n     *\n     * If you just want to get the raw `Response` instance without parsing it,\n     * you can use {@link asResponse()}.\n     *\n     *\n     * ðŸ‘‹ Getting the wrong TypeScript type for `Response`?\n     * Try setting `\"moduleResolution\": \"NodeNext\"` if you can,\n     * or add one of these imports before your first `import â€¦ from 'openai'`:\n     * - `import 'openai/shims/node'` (if you're running on Node)\n     * - `import 'openai/shims/web'` (otherwise)\n     */\n    async withResponse() {\n        const [data, response] = await Promise.all([this.parse(), this.asResponse()]);\n        return { data, response };\n    }\n    parse() {\n        if (!this.parsedPromise) {\n            this.parsedPromise = this.responsePromise.then(this.parseResponse);\n        }\n        return this.parsedPromise;\n    }\n    then(onfulfilled, onrejected) {\n        return this.parse().then(onfulfilled, onrejected);\n    }\n    catch(onrejected) {\n        return this.parse().catch(onrejected);\n    }\n    finally(onfinally) {\n        return this.parse().finally(onfinally);\n    }\n}\nexport class APIClient {\n    constructor({ baseURL, maxRetries = 2, timeout = 600000, // 10 minutes\n    httpAgent, fetch: overridenFetch, }) {\n        this.baseURL = baseURL;\n        this.maxRetries = validatePositiveInteger('maxRetries', maxRetries);\n        this.timeout = validatePositiveInteger('timeout', timeout);\n        this.httpAgent = httpAgent;\n        this.fetch = overridenFetch ?? fetch;\n    }\n    authHeaders(opts) {\n        return {};\n    }\n    /**\n     * Override this to add your own default headers, for example:\n     *\n     *  {\n     *    ...super.defaultHeaders(),\n     *    Authorization: 'Bearer 123',\n     *  }\n     */\n    defaultHeaders(opts) {\n        return {\n            Accept: 'application/json',\n            'Content-Type': 'application/json',\n            'User-Agent': this.getUserAgent(),\n            ...getPlatformHeaders(),\n            ...this.authHeaders(opts),\n        };\n    }\n    /**\n     * Override this to add your own headers validation:\n     */\n    validateHeaders(headers, customHeaders) { }\n    defaultIdempotencyKey() {\n        return `stainless-node-retry-${uuid4()}`;\n    }\n    get(path, opts) {\n        return this.methodRequest('get', path, opts);\n    }\n    post(path, opts) {\n        return this.methodRequest('post', path, opts);\n    }\n    patch(path, opts) {\n        return this.methodRequest('patch', path, opts);\n    }\n    put(path, opts) {\n        return this.methodRequest('put', path, opts);\n    }\n    delete(path, opts) {\n        return this.methodRequest('delete', path, opts);\n    }\n    methodRequest(method, path, opts) {\n        return this.request(Promise.resolve(opts).then((opts) => ({ method, path, ...opts })));\n    }\n    getAPIList(path, Page, opts) {\n        return this.requestAPIList(Page, { method: 'get', path, ...opts });\n    }\n    calculateContentLength(body) {\n        if (typeof body === 'string') {\n            if (typeof Buffer !== 'undefined') {\n                return Buffer.byteLength(body, 'utf8').toString();\n            }\n            if (typeof TextEncoder !== 'undefined') {\n                const encoder = new TextEncoder();\n                const encoded = encoder.encode(body);\n                return encoded.length.toString();\n            }\n        }\n        return null;\n    }\n    buildRequest(options) {\n        const { method, path, query, headers: headers = {} } = options;\n        const body = isMultipartBody(options.body) ? options.body.body\n            : options.body ? JSON.stringify(options.body, null, 2)\n                : null;\n        const contentLength = this.calculateContentLength(body);\n        const url = this.buildURL(path, query);\n        if ('timeout' in options)\n            validatePositiveInteger('timeout', options.timeout);\n        const timeout = options.timeout ?? this.timeout;\n        const httpAgent = options.httpAgent ?? this.httpAgent ?? getDefaultAgent(url);\n        const minAgentTimeout = timeout + 1000;\n        if (typeof httpAgent?.options?.timeout === 'number' &&\n            minAgentTimeout > (httpAgent.options.timeout ?? 0)) {\n            // Allow any given request to bump our agent active socket timeout.\n            // This may seem strange, but leaking active sockets should be rare and not particularly problematic,\n            // and without mutating agent we would need to create more of them.\n            // This tradeoff optimizes for performance.\n            httpAgent.options.timeout = minAgentTimeout;\n        }\n        if (this.idempotencyHeader && method !== 'get') {\n            if (!options.idempotencyKey)\n                options.idempotencyKey = this.defaultIdempotencyKey();\n            headers[this.idempotencyHeader] = options.idempotencyKey;\n        }\n        const reqHeaders = this.buildHeaders({ options, headers, contentLength });\n        const req = {\n            method,\n            ...(body && { body: body }),\n            headers: reqHeaders,\n            ...(httpAgent && { agent: httpAgent }),\n            // @ts-ignore node-fetch uses a custom AbortSignal type that is\n            // not compatible with standard web types\n            signal: options.signal ?? null,\n        };\n        return { req, url, timeout };\n    }\n    buildHeaders({ options, headers, contentLength, }) {\n        const reqHeaders = {};\n        if (contentLength) {\n            reqHeaders['content-length'] = contentLength;\n        }\n        const defaultHeaders = this.defaultHeaders(options);\n        applyHeadersMut(reqHeaders, defaultHeaders);\n        applyHeadersMut(reqHeaders, headers);\n        // let builtin fetch set the Content-Type for multipart bodies\n        if (isMultipartBody(options.body) && shimsKind !== 'node') {\n            delete reqHeaders['content-type'];\n        }\n        this.validateHeaders(reqHeaders, headers);\n        return reqHeaders;\n    }\n    /**\n     * Used as a callback for mutating the given `FinalRequestOptions` object.\n     */\n    async prepareOptions(options) { }\n    /**\n     * Used as a callback for mutating the given `RequestInit` object.\n     *\n     * This is useful for cases where you want to add certain headers based off of\n     * the request properties, e.g. `method` or `url`.\n     */\n    async prepareRequest(request, { url, options }) { }\n    parseHeaders(headers) {\n        return (!headers ? {}\n            : Symbol.iterator in headers ?\n                Object.fromEntries(Array.from(headers).map((header) => [...header]))\n                : { ...headers });\n    }\n    makeStatusError(status, error, message, headers) {\n        return APIError.generate(status, error, message, headers);\n    }\n    request(options, remainingRetries = null) {\n        return new APIPromise(this.makeRequest(options, remainingRetries));\n    }\n    async makeRequest(optionsInput, retriesRemaining) {\n        const options = await optionsInput;\n        if (retriesRemaining == null) {\n            retriesRemaining = options.maxRetries ?? this.maxRetries;\n        }\n        await this.prepareOptions(options);\n        const { req, url, timeout } = this.buildRequest(options);\n        await this.prepareRequest(req, { url, options });\n        debug('request', url, options, req.headers);\n        if (options.signal?.aborted) {\n            throw new APIUserAbortError();\n        }\n        const controller = new AbortController();\n        const response = await this.fetchWithTimeout(url, req, timeout, controller).catch(castToError);\n        if (response instanceof Error) {\n            if (options.signal?.aborted) {\n                throw new APIUserAbortError();\n            }\n            if (retriesRemaining) {\n                return this.retryRequest(options, retriesRemaining);\n            }\n            if (response.name === 'AbortError') {\n                throw new APIConnectionTimeoutError();\n            }\n            throw new APIConnectionError({ cause: response });\n        }\n        const responseHeaders = createResponseHeaders(response.headers);\n        if (!response.ok) {\n            if (retriesRemaining && this.shouldRetry(response)) {\n                const retryMessage = `retrying, ${retriesRemaining} attempts remaining`;\n                debug(`response (error; ${retryMessage})`, response.status, url, responseHeaders);\n                return this.retryRequest(options, retriesRemaining, responseHeaders);\n            }\n            const errText = await response.text().catch((e) => castToError(e).message);\n            const errJSON = safeJSON(errText);\n            const errMessage = errJSON ? undefined : errText;\n            const retryMessage = retriesRemaining ? `(error; no more retries left)` : `(error; not retryable)`;\n            debug(`response (error; ${retryMessage})`, response.status, url, responseHeaders, errMessage);\n            const err = this.makeStatusError(response.status, errJSON, errMessage, responseHeaders);\n            throw err;\n        }\n        return { response, options, controller };\n    }\n    requestAPIList(Page, options) {\n        const request = this.makeRequest(options, null);\n        return new PagePromise(this, request, Page);\n    }\n    buildURL(path, query) {\n        const url = isAbsoluteURL(path) ?\n            new URL(path)\n            : new URL(this.baseURL + (this.baseURL.endsWith('/') && path.startsWith('/') ? path.slice(1) : path));\n        const defaultQuery = this.defaultQuery();\n        if (!isEmptyObj(defaultQuery)) {\n            query = { ...defaultQuery, ...query };\n        }\n        if (typeof query === 'object' && query && !Array.isArray(query)) {\n            url.search = this.stringifyQuery(query);\n        }\n        return url.toString();\n    }\n    stringifyQuery(query) {\n        return Object.entries(query)\n            .filter(([_, value]) => typeof value !== 'undefined')\n            .map(([key, value]) => {\n            if (typeof value === 'string' || typeof value === 'number' || typeof value === 'boolean') {\n                return `${encodeURIComponent(key)}=${encodeURIComponent(value)}`;\n            }\n            if (value === null) {\n                return `${encodeURIComponent(key)}=`;\n            }\n            throw new OpenAIError(`Cannot stringify type ${typeof value}; Expected string, number, boolean, or null. If you need to pass nested query parameters, you can manually encode them, e.g. { query: { 'foo[key1]': value1, 'foo[key2]': value2 } }, and please open a GitHub issue requesting better support for your use case.`);\n        })\n            .join('&');\n    }\n    async fetchWithTimeout(url, init, ms, controller) {\n        const { signal, ...options } = init || {};\n        if (signal)\n            signal.addEventListener('abort', () => controller.abort());\n        const timeout = setTimeout(() => controller.abort(), ms);\n        return (this.getRequestClient()\n            // use undefined this binding; fetch errors if bound to something else in browser/cloudflare\n            .fetch.call(undefined, url, { signal: controller.signal, ...options })\n            .finally(() => {\n            clearTimeout(timeout);\n        }));\n    }\n    getRequestClient() {\n        return { fetch: this.fetch };\n    }\n    shouldRetry(response) {\n        // Note this is not a standard header.\n        const shouldRetryHeader = response.headers.get('x-should-retry');\n        // If the server explicitly says whether or not to retry, obey.\n        if (shouldRetryHeader === 'true')\n            return true;\n        if (shouldRetryHeader === 'false')\n            return false;\n        // Retry on request timeouts.\n        if (response.status === 408)\n            return true;\n        // Retry on lock timeouts.\n        if (response.status === 409)\n            return true;\n        // Retry on rate limits.\n        if (response.status === 429)\n            return true;\n        // Retry internal errors.\n        if (response.status >= 500)\n            return true;\n        return false;\n    }\n    async retryRequest(options, retriesRemaining, responseHeaders) {\n        let timeoutMillis;\n        // Note the `retry-after-ms` header may not be standard, but is a good idea and we'd like proactive support for it.\n        const retryAfterMillisHeader = responseHeaders?.['retry-after-ms'];\n        if (retryAfterMillisHeader) {\n            const timeoutMs = parseFloat(retryAfterMillisHeader);\n            if (!Number.isNaN(timeoutMs)) {\n                timeoutMillis = timeoutMs;\n            }\n        }\n        // About the Retry-After header: https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Retry-After\n        const retryAfterHeader = responseHeaders?.['retry-after'];\n        if (retryAfterHeader && !timeoutMillis) {\n            const timeoutSeconds = parseFloat(retryAfterHeader);\n            if (!Number.isNaN(timeoutSeconds)) {\n                timeoutMillis = timeoutSeconds * 1000;\n            }\n            else {\n                timeoutMillis = Date.parse(retryAfterHeader) - Date.now();\n            }\n        }\n        // If the API asks us to wait a certain amount of time (and it's a reasonable amount),\n        // just do what it says, but otherwise calculate a default\n        if (!(timeoutMillis && 0 <= timeoutMillis && timeoutMillis < 60 * 1000)) {\n            const maxRetries = options.maxRetries ?? this.maxRetries;\n            timeoutMillis = this.calculateDefaultRetryTimeoutMillis(retriesRemaining, maxRetries);\n        }\n        await sleep(timeoutMillis);\n        return this.makeRequest(options, retriesRemaining - 1);\n    }\n    calculateDefaultRetryTimeoutMillis(retriesRemaining, maxRetries) {\n        const initialRetryDelay = 0.5;\n        const maxRetryDelay = 8.0;\n        const numRetries = maxRetries - retriesRemaining;\n        // Apply exponential backoff, but not more than the max.\n        const sleepSeconds = Math.min(initialRetryDelay * Math.pow(2, numRetries), maxRetryDelay);\n        // Apply some jitter, take up to at most 25 percent of the retry time.\n        const jitter = 1 - Math.random() * 0.25;\n        return sleepSeconds * jitter * 1000;\n    }\n    getUserAgent() {\n        return `${this.constructor.name}/JS ${VERSION}`;\n    }\n}\nexport class AbstractPage {\n    constructor(client, response, body, options) {\n        _AbstractPage_client.set(this, void 0);\n        __classPrivateFieldSet(this, _AbstractPage_client, client, \"f\");\n        this.options = options;\n        this.response = response;\n        this.body = body;\n    }\n    hasNextPage() {\n        const items = this.getPaginatedItems();\n        if (!items.length)\n            return false;\n        return this.nextPageInfo() != null;\n    }\n    async getNextPage() {\n        const nextInfo = this.nextPageInfo();\n        if (!nextInfo) {\n            throw new OpenAIError('No next page expected; please check `.hasNextPage()` before calling `.getNextPage()`.');\n        }\n        const nextOptions = { ...this.options };\n        if ('params' in nextInfo && typeof nextOptions.query === 'object') {\n            nextOptions.query = { ...nextOptions.query, ...nextInfo.params };\n        }\n        else if ('url' in nextInfo) {\n            const params = [...Object.entries(nextOptions.query || {}), ...nextInfo.url.searchParams.entries()];\n            for (const [key, value] of params) {\n                nextInfo.url.searchParams.set(key, value);\n            }\n            nextOptions.query = undefined;\n            nextOptions.path = nextInfo.url.toString();\n        }\n        return await __classPrivateFieldGet(this, _AbstractPage_client, \"f\").requestAPIList(this.constructor, nextOptions);\n    }\n    async *iterPages() {\n        // eslint-disable-next-line @typescript-eslint/no-this-alias\n        let page = this;\n        yield page;\n        while (page.hasNextPage()) {\n            page = await page.getNextPage();\n            yield page;\n        }\n    }\n    async *[(_AbstractPage_client = new WeakMap(), Symbol.asyncIterator)]() {\n        for await (const page of this.iterPages()) {\n            for (const item of page.getPaginatedItems()) {\n                yield item;\n            }\n        }\n    }\n}\n/**\n * This subclass of Promise will resolve to an instantiated Page once the request completes.\n *\n * It also implements AsyncIterable to allow auto-paginating iteration on an unawaited list call, eg:\n *\n *    for await (const item of client.items.list()) {\n *      console.log(item)\n *    }\n */\nexport class PagePromise extends APIPromise {\n    constructor(client, request, Page) {\n        super(request, async (props) => new Page(client, props.response, await defaultParseResponse(props), props.options));\n    }\n    /**\n     * Allow auto-paginating iteration on an unawaited list call, eg:\n     *\n     *    for await (const item of client.items.list()) {\n     *      console.log(item)\n     *    }\n     */\n    async *[Symbol.asyncIterator]() {\n        const page = await this;\n        for await (const item of page) {\n            yield item;\n        }\n    }\n}\nexport const createResponseHeaders = (headers) => {\n    return new Proxy(Object.fromEntries(\n    // @ts-ignore\n    headers.entries()), {\n        get(target, name) {\n            const key = name.toString();\n            return target[key.toLowerCase()] || target[key];\n        },\n    });\n};\n// This is required so that we can determine if a given object matches the RequestOptions\n// type at runtime. While this requires duplication, it is enforced by the TypeScript\n// compiler such that any missing / extraneous keys will cause an error.\nconst requestOptionsKeys = {\n    method: true,\n    path: true,\n    query: true,\n    body: true,\n    headers: true,\n    maxRetries: true,\n    stream: true,\n    timeout: true,\n    httpAgent: true,\n    signal: true,\n    idempotencyKey: true,\n    __binaryResponse: true,\n    __streamClass: true,\n};\nexport const isRequestOptions = (obj) => {\n    return (typeof obj === 'object' &&\n        obj !== null &&\n        !isEmptyObj(obj) &&\n        Object.keys(obj).every((k) => hasOwn(requestOptionsKeys, k)));\n};\nconst getPlatformProperties = () => {\n    if (typeof Deno !== 'undefined' && Deno.build != null) {\n        return {\n            'X-Stainless-Lang': 'js',\n            'X-Stainless-Package-Version': VERSION,\n            'X-Stainless-OS': normalizePlatform(Deno.build.os),\n            'X-Stainless-Arch': normalizeArch(Deno.build.arch),\n            'X-Stainless-Runtime': 'deno',\n            'X-Stainless-Runtime-Version': typeof Deno.version === 'string' ? Deno.version : Deno.version?.deno ?? 'unknown',\n        };\n    }\n    if (typeof EdgeRuntime !== 'undefined') {\n        return {\n            'X-Stainless-Lang': 'js',\n            'X-Stainless-Package-Version': VERSION,\n            'X-Stainless-OS': 'Unknown',\n            'X-Stainless-Arch': `other:${EdgeRuntime}`,\n            'X-Stainless-Runtime': 'edge',\n            'X-Stainless-Runtime-Version': process.version,\n        };\n    }\n    // Check if Node.js\n    if (Object.prototype.toString.call(typeof process !== 'undefined' ? process : 0) === '[object process]') {\n        return {\n            'X-Stainless-Lang': 'js',\n            'X-Stainless-Package-Version': VERSION,\n            'X-Stainless-OS': normalizePlatform(process.platform),\n            'X-Stainless-Arch': normalizeArch(process.arch),\n            'X-Stainless-Runtime': 'node',\n            'X-Stainless-Runtime-Version': process.version,\n        };\n    }\n    const browserInfo = getBrowserInfo();\n    if (browserInfo) {\n        return {\n            'X-Stainless-Lang': 'js',\n            'X-Stainless-Package-Version': VERSION,\n            'X-Stainless-OS': 'Unknown',\n            'X-Stainless-Arch': 'unknown',\n            'X-Stainless-Runtime': `browser:${browserInfo.browser}`,\n            'X-Stainless-Runtime-Version': browserInfo.version,\n        };\n    }\n    // TODO add support for Cloudflare workers, etc.\n    return {\n        'X-Stainless-Lang': 'js',\n        'X-Stainless-Package-Version': VERSION,\n        'X-Stainless-OS': 'Unknown',\n        'X-Stainless-Arch': 'unknown',\n        'X-Stainless-Runtime': 'unknown',\n        'X-Stainless-Runtime-Version': 'unknown',\n    };\n};\n// Note: modified from https://github.com/JS-DevTools/host-environment/blob/b1ab79ecde37db5d6e163c050e54fe7d287d7c92/src/isomorphic.browser.ts\nfunction getBrowserInfo() {\n    if (typeof navigator === 'undefined' || !navigator) {\n        return null;\n    }\n    // NOTE: The order matters here!\n    const browserPatterns = [\n        { key: 'edge', pattern: /Edge(?:\\W+(\\d+)\\.(\\d+)(?:\\.(\\d+))?)?/ },\n        { key: 'ie', pattern: /MSIE(?:\\W+(\\d+)\\.(\\d+)(?:\\.(\\d+))?)?/ },\n        { key: 'ie', pattern: /Trident(?:.*rv\\:(\\d+)\\.(\\d+)(?:\\.(\\d+))?)?/ },\n        { key: 'chrome', pattern: /Chrome(?:\\W+(\\d+)\\.(\\d+)(?:\\.(\\d+))?)?/ },\n        { key: 'firefox', pattern: /Firefox(?:\\W+(\\d+)\\.(\\d+)(?:\\.(\\d+))?)?/ },\n        { key: 'safari', pattern: /(?:Version\\W+(\\d+)\\.(\\d+)(?:\\.(\\d+))?)?(?:\\W+Mobile\\S*)?\\W+Safari/ },\n    ];\n    // Find the FIRST matching browser\n    for (const { key, pattern } of browserPatterns) {\n        const match = pattern.exec(navigator.userAgent);\n        if (match) {\n            const major = match[1] || 0;\n            const minor = match[2] || 0;\n            const patch = match[3] || 0;\n            return { browser: key, version: `${major}.${minor}.${patch}` };\n        }\n    }\n    return null;\n}\nconst normalizeArch = (arch) => {\n    // Node docs:\n    // - https://nodejs.org/api/process.html#processarch\n    // Deno docs:\n    // - https://doc.deno.land/deno/stable/~/Deno.build\n    if (arch === 'x32')\n        return 'x32';\n    if (arch === 'x86_64' || arch === 'x64')\n        return 'x64';\n    if (arch === 'arm')\n        return 'arm';\n    if (arch === 'aarch64' || arch === 'arm64')\n        return 'arm64';\n    if (arch)\n        return `other:${arch}`;\n    return 'unknown';\n};\nconst normalizePlatform = (platform) => {\n    // Node platforms:\n    // - https://nodejs.org/api/process.html#processplatform\n    // Deno platforms:\n    // - https://doc.deno.land/deno/stable/~/Deno.build\n    // - https://github.com/denoland/deno/issues/14799\n    platform = platform.toLowerCase();\n    // NOTE: this iOS check is untested and may not work\n    // Node does not work natively on IOS, there is a fork at\n    // https://github.com/nodejs-mobile/nodejs-mobile\n    // however it is unknown at the time of writing how to detect if it is running\n    if (platform.includes('ios'))\n        return 'iOS';\n    if (platform === 'android')\n        return 'Android';\n    if (platform === 'darwin')\n        return 'MacOS';\n    if (platform === 'win32')\n        return 'Windows';\n    if (platform === 'freebsd')\n        return 'FreeBSD';\n    if (platform === 'openbsd')\n        return 'OpenBSD';\n    if (platform === 'linux')\n        return 'Linux';\n    if (platform)\n        return `Other:${platform}`;\n    return 'Unknown';\n};\nlet _platformHeaders;\nconst getPlatformHeaders = () => {\n    return (_platformHeaders ?? (_platformHeaders = getPlatformProperties()));\n};\nexport const safeJSON = (text) => {\n    try {\n        return JSON.parse(text);\n    }\n    catch (err) {\n        return undefined;\n    }\n};\n// https://stackoverflow.com/a/19709846\nconst startsWithSchemeRegexp = new RegExp('^(?:[a-z]+:)?//', 'i');\nconst isAbsoluteURL = (url) => {\n    return startsWithSchemeRegexp.test(url);\n};\nexport const sleep = (ms) => new Promise((resolve) => setTimeout(resolve, ms));\nconst validatePositiveInteger = (name, n) => {\n    if (typeof n !== 'number' || !Number.isInteger(n)) {\n        throw new OpenAIError(`${name} must be an integer`);\n    }\n    if (n < 0) {\n        throw new OpenAIError(`${name} must be a positive integer`);\n    }\n    return n;\n};\nexport const castToError = (err) => {\n    if (err instanceof Error)\n        return err;\n    return new Error(err);\n};\nexport const ensurePresent = (value) => {\n    if (value == null)\n        throw new OpenAIError(`Expected a value to be given but received ${value} instead.`);\n    return value;\n};\n/**\n * Read an environment variable.\n *\n * Trims beginning and trailing whitespace.\n *\n * Will return undefined if the environment variable doesn't exist or cannot be accessed.\n */\nexport const readEnv = (env) => {\n    if (typeof process !== 'undefined') {\n        return process.env?.[env]?.trim() ?? undefined;\n    }\n    if (typeof Deno !== 'undefined') {\n        return Deno.env?.get?.(env)?.trim();\n    }\n    return undefined;\n};\nexport const coerceInteger = (value) => {\n    if (typeof value === 'number')\n        return Math.round(value);\n    if (typeof value === 'string')\n        return parseInt(value, 10);\n    throw new OpenAIError(`Could not coerce ${value} (type: ${typeof value}) into a number`);\n};\nexport const coerceFloat = (value) => {\n    if (typeof value === 'number')\n        return value;\n    if (typeof value === 'string')\n        return parseFloat(value);\n    throw new OpenAIError(`Could not coerce ${value} (type: ${typeof value}) into a number`);\n};\nexport const coerceBoolean = (value) => {\n    if (typeof value === 'boolean')\n        return value;\n    if (typeof value === 'string')\n        return value === 'true';\n    return Boolean(value);\n};\nexport const maybeCoerceInteger = (value) => {\n    if (value === undefined) {\n        return undefined;\n    }\n    return coerceInteger(value);\n};\nexport const maybeCoerceFloat = (value) => {\n    if (value === undefined) {\n        return undefined;\n    }\n    return coerceFloat(value);\n};\nexport const maybeCoerceBoolean = (value) => {\n    if (value === undefined) {\n        return undefined;\n    }\n    return coerceBoolean(value);\n};\n// https://stackoverflow.com/a/34491287\nexport function isEmptyObj(obj) {\n    if (!obj)\n        return true;\n    for (const _k in obj)\n        return false;\n    return true;\n}\n// https://eslint.org/docs/latest/rules/no-prototype-builtins\nexport function hasOwn(obj, key) {\n    return Object.prototype.hasOwnProperty.call(obj, key);\n}\n/**\n * Copies headers from \"newHeaders\" onto \"targetHeaders\",\n * using lower-case for all properties,\n * ignoring any keys with undefined values,\n * and deleting any keys with null values.\n */\nfunction applyHeadersMut(targetHeaders, newHeaders) {\n    for (const k in newHeaders) {\n        if (!hasOwn(newHeaders, k))\n            continue;\n        const lowerKey = k.toLowerCase();\n        if (!lowerKey)\n            continue;\n        const val = newHeaders[k];\n        if (val === null) {\n            delete targetHeaders[lowerKey];\n        }\n        else if (val !== undefined) {\n            targetHeaders[lowerKey] = val;\n        }\n    }\n}\nexport function debug(action, ...args) {\n    if (typeof process !== 'undefined' && process?.env?.['DEBUG'] === 'true') {\n        console.log(`OpenAI:DEBUG:${action}`, ...args);\n    }\n}\n/**\n * https://stackoverflow.com/a/2117523\n */\nconst uuid4 = () => {\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, (c) => {\n        const r = (Math.random() * 16) | 0;\n        const v = c === 'x' ? r : (r & 0x3) | 0x8;\n        return v.toString(16);\n    });\n};\nexport const isRunningInBrowser = () => {\n    return (\n    // @ts-ignore\n    typeof window !== 'undefined' &&\n        // @ts-ignore\n        typeof window.document !== 'undefined' &&\n        // @ts-ignore\n        typeof navigator !== 'undefined');\n};\nexport const isHeadersProtocol = (headers) => {\n    return typeof headers?.get === 'function';\n};\nexport const getRequiredHeader = (headers, header) => {\n    const lowerCasedHeader = header.toLowerCase();\n    if (isHeadersProtocol(headers)) {\n        // to deal with the case where the header looks like Stainless-Event-Id\n        const intercapsHeader = header[0]?.toUpperCase() +\n            header.substring(1).replace(/([^\\w])(\\w)/g, (_m, g1, g2) => g1 + g2.toUpperCase());\n        for (const key of [header, lowerCasedHeader, header.toUpperCase(), intercapsHeader]) {\n            const value = headers.get(key);\n            if (value) {\n                return value;\n            }\n        }\n    }\n    for (const [key, value] of Object.entries(headers)) {\n        if (key.toLowerCase() === lowerCasedHeader) {\n            if (Array.isArray(value)) {\n                if (value.length <= 1)\n                    return value[0];\n                console.warn(`Received ${value.length} entries for the ${header} header, using the first entry.`);\n                return value[0];\n            }\n            return value;\n        }\n    }\n    throw new Error(`Could not find ${header} header`);\n};\n/**\n * Encodes a string to Base64 format.\n */\nexport const toBase64 = (str) => {\n    if (!str)\n        return '';\n    if (typeof Buffer !== 'undefined') {\n        return Buffer.from(str).toString('base64');\n    }\n    if (typeof btoa !== 'undefined') {\n        return btoa(str);\n    }\n    throw new OpenAIError('Cannot generate b64 string; Expected `Buffer` or `btoa` to be defined');\n};\nexport function isObj(obj) {\n    return obj != null && typeof obj === 'object' && !Array.isArray(obj);\n}\n//# sourceMappingURL=core.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { castToError } from \"./core.mjs\";\nexport class OpenAIError extends Error {\n}\nexport class APIError extends OpenAIError {\n    constructor(status, error, message, headers) {\n        super(`${APIError.makeMessage(status, error, message)}`);\n        this.status = status;\n        this.headers = headers;\n        this.request_id = headers?.['x-request-id'];\n        const data = error;\n        this.error = data;\n        this.code = data?.['code'];\n        this.param = data?.['param'];\n        this.type = data?.['type'];\n    }\n    static makeMessage(status, error, message) {\n        const msg = error?.message ?\n            typeof error.message === 'string' ?\n                error.message\n                : JSON.stringify(error.message)\n            : error ? JSON.stringify(error)\n                : message;\n        if (status && msg) {\n            return `${status} ${msg}`;\n        }\n        if (status) {\n            return `${status} status code (no body)`;\n        }\n        if (msg) {\n            return msg;\n        }\n        return '(no status code or body)';\n    }\n    static generate(status, errorResponse, message, headers) {\n        if (!status) {\n            return new APIConnectionError({ cause: castToError(errorResponse) });\n        }\n        const error = errorResponse?.['error'];\n        if (status === 400) {\n            return new BadRequestError(status, error, message, headers);\n        }\n        if (status === 401) {\n            return new AuthenticationError(status, error, message, headers);\n        }\n        if (status === 403) {\n            return new PermissionDeniedError(status, error, message, headers);\n        }\n        if (status === 404) {\n            return new NotFoundError(status, error, message, headers);\n        }\n        if (status === 409) {\n            return new ConflictError(status, error, message, headers);\n        }\n        if (status === 422) {\n            return new UnprocessableEntityError(status, error, message, headers);\n        }\n        if (status === 429) {\n            return new RateLimitError(status, error, message, headers);\n        }\n        if (status >= 500) {\n            return new InternalServerError(status, error, message, headers);\n        }\n        return new APIError(status, error, message, headers);\n    }\n}\nexport class APIUserAbortError extends APIError {\n    constructor({ message } = {}) {\n        super(undefined, undefined, message || 'Request was aborted.', undefined);\n        this.status = undefined;\n    }\n}\nexport class APIConnectionError extends APIError {\n    constructor({ message, cause }) {\n        super(undefined, undefined, message || 'Connection error.', undefined);\n        this.status = undefined;\n        // in some environments the 'cause' property is already declared\n        // @ts-ignore\n        if (cause)\n            this.cause = cause;\n    }\n}\nexport class APIConnectionTimeoutError extends APIConnectionError {\n    constructor({ message } = {}) {\n        super({ message: message ?? 'Request timed out.' });\n    }\n}\nexport class BadRequestError extends APIError {\n    constructor() {\n        super(...arguments);\n        this.status = 400;\n    }\n}\nexport class AuthenticationError extends APIError {\n    constructor() {\n        super(...arguments);\n        this.status = 401;\n    }\n}\nexport class PermissionDeniedError extends APIError {\n    constructor() {\n        super(...arguments);\n        this.status = 403;\n    }\n}\nexport class NotFoundError extends APIError {\n    constructor() {\n        super(...arguments);\n        this.status = 404;\n    }\n}\nexport class ConflictError extends APIError {\n    constructor() {\n        super(...arguments);\n        this.status = 409;\n    }\n}\nexport class UnprocessableEntityError extends APIError {\n    constructor() {\n        super(...arguments);\n        this.status = 422;\n    }\n}\nexport class RateLimitError extends APIError {\n    constructor() {\n        super(...arguments);\n        this.status = 429;\n    }\n}\nexport class InternalServerError extends APIError {\n}\n//# sourceMappingURL=error.mjs.map","export function isRunnableFunctionWithParse(fn) {\n    return typeof fn.parse === 'function';\n}\n/**\n * This is helper class for passing a `function` and `parse` where the `function`\n * argument type matches the `parse` return type.\n *\n * @deprecated - please use ParsingToolFunction instead.\n */\nexport class ParsingFunction {\n    constructor(input) {\n        this.function = input.function;\n        this.parse = input.parse;\n        this.parameters = input.parameters;\n        this.description = input.description;\n        this.name = input.name;\n    }\n}\n/**\n * This is helper class for passing a `function` and `parse` where the `function`\n * argument type matches the `parse` return type.\n */\nexport class ParsingToolFunction {\n    constructor(input) {\n        this.type = 'function';\n        this.function = input;\n    }\n}\n//# sourceMappingURL=RunnableFunction.mjs.map","export const isAssistantMessage = (message) => {\n    return message?.role === 'assistant';\n};\nexport const isFunctionMessage = (message) => {\n    return message?.role === 'function';\n};\nexport const isToolMessage = (message) => {\n    return message?.role === 'tool';\n};\nexport function isPresent(obj) {\n    return obj != null;\n}\n//# sourceMappingURL=chatCompletionUtils.mjs.map","var __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _AbstractChatCompletionRunner_instances, _AbstractChatCompletionRunner_connectedPromise, _AbstractChatCompletionRunner_resolveConnectedPromise, _AbstractChatCompletionRunner_rejectConnectedPromise, _AbstractChatCompletionRunner_endPromise, _AbstractChatCompletionRunner_resolveEndPromise, _AbstractChatCompletionRunner_rejectEndPromise, _AbstractChatCompletionRunner_listeners, _AbstractChatCompletionRunner_ended, _AbstractChatCompletionRunner_errored, _AbstractChatCompletionRunner_aborted, _AbstractChatCompletionRunner_catchingPromiseCreated, _AbstractChatCompletionRunner_getFinalContent, _AbstractChatCompletionRunner_getFinalMessage, _AbstractChatCompletionRunner_getFinalFunctionCall, _AbstractChatCompletionRunner_getFinalFunctionCallResult, _AbstractChatCompletionRunner_calculateTotalUsage, _AbstractChatCompletionRunner_handleError, _AbstractChatCompletionRunner_validateParams, _AbstractChatCompletionRunner_stringifyFunctionCallResult;\nimport { APIUserAbortError, OpenAIError } from 'openai/error';\nimport { isRunnableFunctionWithParse, } from \"./RunnableFunction.mjs\";\nimport { isAssistantMessage, isFunctionMessage, isToolMessage } from \"./chatCompletionUtils.mjs\";\nconst DEFAULT_MAX_CHAT_COMPLETIONS = 10;\nexport class AbstractChatCompletionRunner {\n    constructor() {\n        _AbstractChatCompletionRunner_instances.add(this);\n        this.controller = new AbortController();\n        _AbstractChatCompletionRunner_connectedPromise.set(this, void 0);\n        _AbstractChatCompletionRunner_resolveConnectedPromise.set(this, () => { });\n        _AbstractChatCompletionRunner_rejectConnectedPromise.set(this, () => { });\n        _AbstractChatCompletionRunner_endPromise.set(this, void 0);\n        _AbstractChatCompletionRunner_resolveEndPromise.set(this, () => { });\n        _AbstractChatCompletionRunner_rejectEndPromise.set(this, () => { });\n        _AbstractChatCompletionRunner_listeners.set(this, {});\n        this._chatCompletions = [];\n        this.messages = [];\n        _AbstractChatCompletionRunner_ended.set(this, false);\n        _AbstractChatCompletionRunner_errored.set(this, false);\n        _AbstractChatCompletionRunner_aborted.set(this, false);\n        _AbstractChatCompletionRunner_catchingPromiseCreated.set(this, false);\n        _AbstractChatCompletionRunner_handleError.set(this, (error) => {\n            __classPrivateFieldSet(this, _AbstractChatCompletionRunner_errored, true, \"f\");\n            if (error instanceof Error && error.name === 'AbortError') {\n                error = new APIUserAbortError();\n            }\n            if (error instanceof APIUserAbortError) {\n                __classPrivateFieldSet(this, _AbstractChatCompletionRunner_aborted, true, \"f\");\n                return this._emit('abort', error);\n            }\n            if (error instanceof OpenAIError) {\n                return this._emit('error', error);\n            }\n            if (error instanceof Error) {\n                const openAIError = new OpenAIError(error.message);\n                // @ts-ignore\n                openAIError.cause = error;\n                return this._emit('error', openAIError);\n            }\n            return this._emit('error', new OpenAIError(String(error)));\n        });\n        __classPrivateFieldSet(this, _AbstractChatCompletionRunner_connectedPromise, new Promise((resolve, reject) => {\n            __classPrivateFieldSet(this, _AbstractChatCompletionRunner_resolveConnectedPromise, resolve, \"f\");\n            __classPrivateFieldSet(this, _AbstractChatCompletionRunner_rejectConnectedPromise, reject, \"f\");\n        }), \"f\");\n        __classPrivateFieldSet(this, _AbstractChatCompletionRunner_endPromise, new Promise((resolve, reject) => {\n            __classPrivateFieldSet(this, _AbstractChatCompletionRunner_resolveEndPromise, resolve, \"f\");\n            __classPrivateFieldSet(this, _AbstractChatCompletionRunner_rejectEndPromise, reject, \"f\");\n        }), \"f\");\n        // Don't let these promises cause unhandled rejection errors.\n        // we will manually cause an unhandled rejection error later\n        // if the user hasn't registered any error listener or called\n        // any promise-returning method.\n        __classPrivateFieldGet(this, _AbstractChatCompletionRunner_connectedPromise, \"f\").catch(() => { });\n        __classPrivateFieldGet(this, _AbstractChatCompletionRunner_endPromise, \"f\").catch(() => { });\n    }\n    _run(executor) {\n        // Unfortunately if we call `executor()` immediately we get runtime errors about\n        // references to `this` before the `super()` constructor call returns.\n        setTimeout(() => {\n            executor().then(() => {\n                this._emitFinal();\n                this._emit('end');\n            }, __classPrivateFieldGet(this, _AbstractChatCompletionRunner_handleError, \"f\"));\n        }, 0);\n    }\n    _addChatCompletion(chatCompletion) {\n        this._chatCompletions.push(chatCompletion);\n        this._emit('chatCompletion', chatCompletion);\n        const message = chatCompletion.choices[0]?.message;\n        if (message)\n            this._addMessage(message);\n        return chatCompletion;\n    }\n    _addMessage(message, emit = true) {\n        if (!('content' in message))\n            message.content = null;\n        this.messages.push(message);\n        if (emit) {\n            this._emit('message', message);\n            if ((isFunctionMessage(message) || isToolMessage(message)) && message.content) {\n                // Note, this assumes that {role: 'tool', content: â€¦} is always the result of a call of tool of type=function.\n                this._emit('functionCallResult', message.content);\n            }\n            else if (isAssistantMessage(message) && message.function_call) {\n                this._emit('functionCall', message.function_call);\n            }\n            else if (isAssistantMessage(message) && message.tool_calls) {\n                for (const tool_call of message.tool_calls) {\n                    if (tool_call.type === 'function') {\n                        this._emit('functionCall', tool_call.function);\n                    }\n                }\n            }\n        }\n    }\n    _connected() {\n        if (this.ended)\n            return;\n        __classPrivateFieldGet(this, _AbstractChatCompletionRunner_resolveConnectedPromise, \"f\").call(this);\n        this._emit('connect');\n    }\n    get ended() {\n        return __classPrivateFieldGet(this, _AbstractChatCompletionRunner_ended, \"f\");\n    }\n    get errored() {\n        return __classPrivateFieldGet(this, _AbstractChatCompletionRunner_errored, \"f\");\n    }\n    get aborted() {\n        return __classPrivateFieldGet(this, _AbstractChatCompletionRunner_aborted, \"f\");\n    }\n    abort() {\n        this.controller.abort();\n    }\n    /**\n     * Adds the listener function to the end of the listeners array for the event.\n     * No checks are made to see if the listener has already been added. Multiple calls passing\n     * the same combination of event and listener will result in the listener being added, and\n     * called, multiple times.\n     * @returns this ChatCompletionStream, so that calls can be chained\n     */\n    on(event, listener) {\n        const listeners = __classPrivateFieldGet(this, _AbstractChatCompletionRunner_listeners, \"f\")[event] || (__classPrivateFieldGet(this, _AbstractChatCompletionRunner_listeners, \"f\")[event] = []);\n        listeners.push({ listener });\n        return this;\n    }\n    /**\n     * Removes the specified listener from the listener array for the event.\n     * off() will remove, at most, one instance of a listener from the listener array. If any single\n     * listener has been added multiple times to the listener array for the specified event, then\n     * off() must be called multiple times to remove each instance.\n     * @returns this ChatCompletionStream, so that calls can be chained\n     */\n    off(event, listener) {\n        const listeners = __classPrivateFieldGet(this, _AbstractChatCompletionRunner_listeners, \"f\")[event];\n        if (!listeners)\n            return this;\n        const index = listeners.findIndex((l) => l.listener === listener);\n        if (index >= 0)\n            listeners.splice(index, 1);\n        return this;\n    }\n    /**\n     * Adds a one-time listener function for the event. The next time the event is triggered,\n     * this listener is removed and then invoked.\n     * @returns this ChatCompletionStream, so that calls can be chained\n     */\n    once(event, listener) {\n        const listeners = __classPrivateFieldGet(this, _AbstractChatCompletionRunner_listeners, \"f\")[event] || (__classPrivateFieldGet(this, _AbstractChatCompletionRunner_listeners, \"f\")[event] = []);\n        listeners.push({ listener, once: true });\n        return this;\n    }\n    /**\n     * This is similar to `.once()`, but returns a Promise that resolves the next time\n     * the event is triggered, instead of calling a listener callback.\n     * @returns a Promise that resolves the next time given event is triggered,\n     * or rejects if an error is emitted.  (If you request the 'error' event,\n     * returns a promise that resolves with the error).\n     *\n     * Example:\n     *\n     *   const message = await stream.emitted('message') // rejects if the stream errors\n     */\n    emitted(event) {\n        return new Promise((resolve, reject) => {\n            __classPrivateFieldSet(this, _AbstractChatCompletionRunner_catchingPromiseCreated, true, \"f\");\n            if (event !== 'error')\n                this.once('error', reject);\n            this.once(event, resolve);\n        });\n    }\n    async done() {\n        __classPrivateFieldSet(this, _AbstractChatCompletionRunner_catchingPromiseCreated, true, \"f\");\n        await __classPrivateFieldGet(this, _AbstractChatCompletionRunner_endPromise, \"f\");\n    }\n    /**\n     * @returns a promise that resolves with the final ChatCompletion, or rejects\n     * if an error occurred or the stream ended prematurely without producing a ChatCompletion.\n     */\n    async finalChatCompletion() {\n        await this.done();\n        const completion = this._chatCompletions[this._chatCompletions.length - 1];\n        if (!completion)\n            throw new OpenAIError('stream ended without producing a ChatCompletion');\n        return completion;\n    }\n    /**\n     * @returns a promise that resolves with the content of the final ChatCompletionMessage, or rejects\n     * if an error occurred or the stream ended prematurely without producing a ChatCompletionMessage.\n     */\n    async finalContent() {\n        await this.done();\n        return __classPrivateFieldGet(this, _AbstractChatCompletionRunner_instances, \"m\", _AbstractChatCompletionRunner_getFinalContent).call(this);\n    }\n    /**\n     * @returns a promise that resolves with the the final assistant ChatCompletionMessage response,\n     * or rejects if an error occurred or the stream ended prematurely without producing a ChatCompletionMessage.\n     */\n    async finalMessage() {\n        await this.done();\n        return __classPrivateFieldGet(this, _AbstractChatCompletionRunner_instances, \"m\", _AbstractChatCompletionRunner_getFinalMessage).call(this);\n    }\n    /**\n     * @returns a promise that resolves with the content of the final FunctionCall, or rejects\n     * if an error occurred or the stream ended prematurely without producing a ChatCompletionMessage.\n     */\n    async finalFunctionCall() {\n        await this.done();\n        return __classPrivateFieldGet(this, _AbstractChatCompletionRunner_instances, \"m\", _AbstractChatCompletionRunner_getFinalFunctionCall).call(this);\n    }\n    async finalFunctionCallResult() {\n        await this.done();\n        return __classPrivateFieldGet(this, _AbstractChatCompletionRunner_instances, \"m\", _AbstractChatCompletionRunner_getFinalFunctionCallResult).call(this);\n    }\n    async totalUsage() {\n        await this.done();\n        return __classPrivateFieldGet(this, _AbstractChatCompletionRunner_instances, \"m\", _AbstractChatCompletionRunner_calculateTotalUsage).call(this);\n    }\n    allChatCompletions() {\n        return [...this._chatCompletions];\n    }\n    _emit(event, ...args) {\n        // make sure we don't emit any events after end\n        if (__classPrivateFieldGet(this, _AbstractChatCompletionRunner_ended, \"f\")) {\n            return;\n        }\n        if (event === 'end') {\n            __classPrivateFieldSet(this, _AbstractChatCompletionRunner_ended, true, \"f\");\n            __classPrivateFieldGet(this, _AbstractChatCompletionRunner_resolveEndPromise, \"f\").call(this);\n        }\n        const listeners = __classPrivateFieldGet(this, _AbstractChatCompletionRunner_listeners, \"f\")[event];\n        if (listeners) {\n            __classPrivateFieldGet(this, _AbstractChatCompletionRunner_listeners, \"f\")[event] = listeners.filter((l) => !l.once);\n            listeners.forEach(({ listener }) => listener(...args));\n        }\n        if (event === 'abort') {\n            const error = args[0];\n            if (!__classPrivateFieldGet(this, _AbstractChatCompletionRunner_catchingPromiseCreated, \"f\") && !listeners?.length) {\n                Promise.reject(error);\n            }\n            __classPrivateFieldGet(this, _AbstractChatCompletionRunner_rejectConnectedPromise, \"f\").call(this, error);\n            __classPrivateFieldGet(this, _AbstractChatCompletionRunner_rejectEndPromise, \"f\").call(this, error);\n            this._emit('end');\n            return;\n        }\n        if (event === 'error') {\n            // NOTE: _emit('error', error) should only be called from #handleError().\n            const error = args[0];\n            if (!__classPrivateFieldGet(this, _AbstractChatCompletionRunner_catchingPromiseCreated, \"f\") && !listeners?.length) {\n                // Trigger an unhandled rejection if the user hasn't registered any error handlers.\n                // If you are seeing stack traces here, make sure to handle errors via either:\n                // - runner.on('error', () => ...)\n                // - await runner.done()\n                // - await runner.finalChatCompletion()\n                // - etc.\n                Promise.reject(error);\n            }\n            __classPrivateFieldGet(this, _AbstractChatCompletionRunner_rejectConnectedPromise, \"f\").call(this, error);\n            __classPrivateFieldGet(this, _AbstractChatCompletionRunner_rejectEndPromise, \"f\").call(this, error);\n            this._emit('end');\n        }\n    }\n    _emitFinal() {\n        const completion = this._chatCompletions[this._chatCompletions.length - 1];\n        if (completion)\n            this._emit('finalChatCompletion', completion);\n        const finalMessage = __classPrivateFieldGet(this, _AbstractChatCompletionRunner_instances, \"m\", _AbstractChatCompletionRunner_getFinalMessage).call(this);\n        if (finalMessage)\n            this._emit('finalMessage', finalMessage);\n        const finalContent = __classPrivateFieldGet(this, _AbstractChatCompletionRunner_instances, \"m\", _AbstractChatCompletionRunner_getFinalContent).call(this);\n        if (finalContent)\n            this._emit('finalContent', finalContent);\n        const finalFunctionCall = __classPrivateFieldGet(this, _AbstractChatCompletionRunner_instances, \"m\", _AbstractChatCompletionRunner_getFinalFunctionCall).call(this);\n        if (finalFunctionCall)\n            this._emit('finalFunctionCall', finalFunctionCall);\n        const finalFunctionCallResult = __classPrivateFieldGet(this, _AbstractChatCompletionRunner_instances, \"m\", _AbstractChatCompletionRunner_getFinalFunctionCallResult).call(this);\n        if (finalFunctionCallResult != null)\n            this._emit('finalFunctionCallResult', finalFunctionCallResult);\n        if (this._chatCompletions.some((c) => c.usage)) {\n            this._emit('totalUsage', __classPrivateFieldGet(this, _AbstractChatCompletionRunner_instances, \"m\", _AbstractChatCompletionRunner_calculateTotalUsage).call(this));\n        }\n    }\n    async _createChatCompletion(completions, params, options) {\n        const signal = options?.signal;\n        if (signal) {\n            if (signal.aborted)\n                this.controller.abort();\n            signal.addEventListener('abort', () => this.controller.abort());\n        }\n        __classPrivateFieldGet(this, _AbstractChatCompletionRunner_instances, \"m\", _AbstractChatCompletionRunner_validateParams).call(this, params);\n        const chatCompletion = await completions.create({ ...params, stream: false }, { ...options, signal: this.controller.signal });\n        this._connected();\n        return this._addChatCompletion(chatCompletion);\n    }\n    async _runChatCompletion(completions, params, options) {\n        for (const message of params.messages) {\n            this._addMessage(message, false);\n        }\n        return await this._createChatCompletion(completions, params, options);\n    }\n    async _runFunctions(completions, params, options) {\n        const role = 'function';\n        const { function_call = 'auto', stream, ...restParams } = params;\n        const singleFunctionToCall = typeof function_call !== 'string' && function_call?.name;\n        const { maxChatCompletions = DEFAULT_MAX_CHAT_COMPLETIONS } = options || {};\n        const functionsByName = {};\n        for (const f of params.functions) {\n            functionsByName[f.name || f.function.name] = f;\n        }\n        const functions = params.functions.map((f) => ({\n            name: f.name || f.function.name,\n            parameters: f.parameters,\n            description: f.description,\n        }));\n        for (const message of params.messages) {\n            this._addMessage(message, false);\n        }\n        for (let i = 0; i < maxChatCompletions; ++i) {\n            const chatCompletion = await this._createChatCompletion(completions, {\n                ...restParams,\n                function_call,\n                functions,\n                messages: [...this.messages],\n            }, options);\n            const message = chatCompletion.choices[0]?.message;\n            if (!message) {\n                throw new OpenAIError(`missing message in ChatCompletion response`);\n            }\n            if (!message.function_call)\n                return;\n            const { name, arguments: args } = message.function_call;\n            const fn = functionsByName[name];\n            if (!fn) {\n                const content = `Invalid function_call: ${JSON.stringify(name)}. Available options are: ${functions\n                    .map((f) => JSON.stringify(f.name))\n                    .join(', ')}. Please try again`;\n                this._addMessage({ role, name, content });\n                continue;\n            }\n            else if (singleFunctionToCall && singleFunctionToCall !== name) {\n                const content = `Invalid function_call: ${JSON.stringify(name)}. ${JSON.stringify(singleFunctionToCall)} requested. Please try again`;\n                this._addMessage({ role, name, content });\n                continue;\n            }\n            let parsed;\n            try {\n                parsed = isRunnableFunctionWithParse(fn) ? await fn.parse(args) : args;\n            }\n            catch (error) {\n                this._addMessage({\n                    role,\n                    name,\n                    content: error instanceof Error ? error.message : String(error),\n                });\n                continue;\n            }\n            // @ts-expect-error it can't rule out `never` type.\n            const rawContent = await fn.function(parsed, this);\n            const content = __classPrivateFieldGet(this, _AbstractChatCompletionRunner_instances, \"m\", _AbstractChatCompletionRunner_stringifyFunctionCallResult).call(this, rawContent);\n            this._addMessage({ role, name, content });\n            if (singleFunctionToCall)\n                return;\n        }\n    }\n    async _runTools(completions, params, options) {\n        const role = 'tool';\n        const { tool_choice = 'auto', stream, ...restParams } = params;\n        const singleFunctionToCall = typeof tool_choice !== 'string' && tool_choice?.function?.name;\n        const { maxChatCompletions = DEFAULT_MAX_CHAT_COMPLETIONS } = options || {};\n        const functionsByName = {};\n        for (const f of params.tools) {\n            if (f.type === 'function') {\n                functionsByName[f.function.name || f.function.function.name] = f.function;\n            }\n        }\n        const tools = 'tools' in params ?\n            params.tools.map((t) => t.type === 'function' ?\n                {\n                    type: 'function',\n                    function: {\n                        name: t.function.name || t.function.function.name,\n                        parameters: t.function.parameters,\n                        description: t.function.description,\n                    },\n                }\n                : t)\n            : undefined;\n        for (const message of params.messages) {\n            this._addMessage(message, false);\n        }\n        for (let i = 0; i < maxChatCompletions; ++i) {\n            const chatCompletion = await this._createChatCompletion(completions, {\n                ...restParams,\n                tool_choice,\n                tools,\n                messages: [...this.messages],\n            }, options);\n            const message = chatCompletion.choices[0]?.message;\n            if (!message) {\n                throw new OpenAIError(`missing message in ChatCompletion response`);\n            }\n            if (!message.tool_calls) {\n                return;\n            }\n            for (const tool_call of message.tool_calls) {\n                if (tool_call.type !== 'function')\n                    continue;\n                const tool_call_id = tool_call.id;\n                const { name, arguments: args } = tool_call.function;\n                const fn = functionsByName[name];\n                if (!fn) {\n                    const content = `Invalid tool_call: ${JSON.stringify(name)}. Available options are: ${tools\n                        .map((f) => JSON.stringify(f.function.name))\n                        .join(', ')}. Please try again`;\n                    this._addMessage({ role, tool_call_id, content });\n                    continue;\n                }\n                else if (singleFunctionToCall && singleFunctionToCall !== name) {\n                    const content = `Invalid tool_call: ${JSON.stringify(name)}. ${JSON.stringify(singleFunctionToCall)} requested. Please try again`;\n                    this._addMessage({ role, tool_call_id, content });\n                    continue;\n                }\n                let parsed;\n                try {\n                    parsed = isRunnableFunctionWithParse(fn) ? await fn.parse(args) : args;\n                }\n                catch (error) {\n                    const content = error instanceof Error ? error.message : String(error);\n                    this._addMessage({ role, tool_call_id, content });\n                    continue;\n                }\n                // @ts-expect-error it can't rule out `never` type.\n                const rawContent = await fn.function(parsed, this);\n                const content = __classPrivateFieldGet(this, _AbstractChatCompletionRunner_instances, \"m\", _AbstractChatCompletionRunner_stringifyFunctionCallResult).call(this, rawContent);\n                this._addMessage({ role, tool_call_id, content });\n                if (singleFunctionToCall) {\n                    return;\n                }\n            }\n        }\n        return;\n    }\n}\n_AbstractChatCompletionRunner_connectedPromise = new WeakMap(), _AbstractChatCompletionRunner_resolveConnectedPromise = new WeakMap(), _AbstractChatCompletionRunner_rejectConnectedPromise = new WeakMap(), _AbstractChatCompletionRunner_endPromise = new WeakMap(), _AbstractChatCompletionRunner_resolveEndPromise = new WeakMap(), _AbstractChatCompletionRunner_rejectEndPromise = new WeakMap(), _AbstractChatCompletionRunner_listeners = new WeakMap(), _AbstractChatCompletionRunner_ended = new WeakMap(), _AbstractChatCompletionRunner_errored = new WeakMap(), _AbstractChatCompletionRunner_aborted = new WeakMap(), _AbstractChatCompletionRunner_catchingPromiseCreated = new WeakMap(), _AbstractChatCompletionRunner_handleError = new WeakMap(), _AbstractChatCompletionRunner_instances = new WeakSet(), _AbstractChatCompletionRunner_getFinalContent = function _AbstractChatCompletionRunner_getFinalContent() {\n    return __classPrivateFieldGet(this, _AbstractChatCompletionRunner_instances, \"m\", _AbstractChatCompletionRunner_getFinalMessage).call(this).content ?? null;\n}, _AbstractChatCompletionRunner_getFinalMessage = function _AbstractChatCompletionRunner_getFinalMessage() {\n    let i = this.messages.length;\n    while (i-- > 0) {\n        const message = this.messages[i];\n        if (isAssistantMessage(message)) {\n            return { ...message, content: message.content ?? null };\n        }\n    }\n    throw new OpenAIError('stream ended without producing a ChatCompletionMessage with role=assistant');\n}, _AbstractChatCompletionRunner_getFinalFunctionCall = function _AbstractChatCompletionRunner_getFinalFunctionCall() {\n    for (let i = this.messages.length - 1; i >= 0; i--) {\n        const message = this.messages[i];\n        if (isAssistantMessage(message) && message?.function_call) {\n            return message.function_call;\n        }\n        if (isAssistantMessage(message) && message?.tool_calls?.length) {\n            return message.tool_calls.at(-1)?.function;\n        }\n    }\n    return;\n}, _AbstractChatCompletionRunner_getFinalFunctionCallResult = function _AbstractChatCompletionRunner_getFinalFunctionCallResult() {\n    for (let i = this.messages.length - 1; i >= 0; i--) {\n        const message = this.messages[i];\n        if (isFunctionMessage(message) && message.content != null) {\n            return message.content;\n        }\n        if (isToolMessage(message) &&\n            message.content != null &&\n            this.messages.some((x) => x.role === 'assistant' &&\n                x.tool_calls?.some((y) => y.type === 'function' && y.id === message.tool_call_id))) {\n            return message.content;\n        }\n    }\n    return;\n}, _AbstractChatCompletionRunner_calculateTotalUsage = function _AbstractChatCompletionRunner_calculateTotalUsage() {\n    const total = {\n        completion_tokens: 0,\n        prompt_tokens: 0,\n        total_tokens: 0,\n    };\n    for (const { usage } of this._chatCompletions) {\n        if (usage) {\n            total.completion_tokens += usage.completion_tokens;\n            total.prompt_tokens += usage.prompt_tokens;\n            total.total_tokens += usage.total_tokens;\n        }\n    }\n    return total;\n}, _AbstractChatCompletionRunner_validateParams = function _AbstractChatCompletionRunner_validateParams(params) {\n    if (params.n != null && params.n > 1) {\n        throw new OpenAIError('ChatCompletion convenience helpers only support n=1 at this time. To use n>1, please use chat.completions.create() directly.');\n    }\n}, _AbstractChatCompletionRunner_stringifyFunctionCallResult = function _AbstractChatCompletionRunner_stringifyFunctionCallResult(rawContent) {\n    return (typeof rawContent === 'string' ? rawContent\n        : rawContent === undefined ? 'undefined'\n            : JSON.stringify(rawContent));\n};\n//# sourceMappingURL=AbstractChatCompletionRunner.mjs.map","var __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar _ChatCompletionStream_instances, _ChatCompletionStream_currentChatCompletionSnapshot, _ChatCompletionStream_beginRequest, _ChatCompletionStream_addChunk, _ChatCompletionStream_endRequest, _ChatCompletionStream_accumulateChatCompletion;\nimport { OpenAIError, APIUserAbortError } from 'openai/error';\nimport { AbstractChatCompletionRunner, } from \"./AbstractChatCompletionRunner.mjs\";\nimport { Stream } from 'openai/streaming';\nexport class ChatCompletionStream extends AbstractChatCompletionRunner {\n    constructor() {\n        super(...arguments);\n        _ChatCompletionStream_instances.add(this);\n        _ChatCompletionStream_currentChatCompletionSnapshot.set(this, void 0);\n    }\n    get currentChatCompletionSnapshot() {\n        return __classPrivateFieldGet(this, _ChatCompletionStream_currentChatCompletionSnapshot, \"f\");\n    }\n    /**\n     * Intended for use on the frontend, consuming a stream produced with\n     * `.toReadableStream()` on the backend.\n     *\n     * Note that messages sent to the model do not appear in `.on('message')`\n     * in this context.\n     */\n    static fromReadableStream(stream) {\n        const runner = new ChatCompletionStream();\n        runner._run(() => runner._fromReadableStream(stream));\n        return runner;\n    }\n    static createChatCompletion(completions, params, options) {\n        const runner = new ChatCompletionStream();\n        runner._run(() => runner._runChatCompletion(completions, { ...params, stream: true }, { ...options, headers: { ...options?.headers, 'X-Stainless-Helper-Method': 'stream' } }));\n        return runner;\n    }\n    async _createChatCompletion(completions, params, options) {\n        const signal = options?.signal;\n        if (signal) {\n            if (signal.aborted)\n                this.controller.abort();\n            signal.addEventListener('abort', () => this.controller.abort());\n        }\n        __classPrivateFieldGet(this, _ChatCompletionStream_instances, \"m\", _ChatCompletionStream_beginRequest).call(this);\n        const stream = await completions.create({ ...params, stream: true }, { ...options, signal: this.controller.signal });\n        this._connected();\n        for await (const chunk of stream) {\n            __classPrivateFieldGet(this, _ChatCompletionStream_instances, \"m\", _ChatCompletionStream_addChunk).call(this, chunk);\n        }\n        if (stream.controller.signal?.aborted) {\n            throw new APIUserAbortError();\n        }\n        return this._addChatCompletion(__classPrivateFieldGet(this, _ChatCompletionStream_instances, \"m\", _ChatCompletionStream_endRequest).call(this));\n    }\n    async _fromReadableStream(readableStream, options) {\n        const signal = options?.signal;\n        if (signal) {\n            if (signal.aborted)\n                this.controller.abort();\n            signal.addEventListener('abort', () => this.controller.abort());\n        }\n        __classPrivateFieldGet(this, _ChatCompletionStream_instances, \"m\", _ChatCompletionStream_beginRequest).call(this);\n        this._connected();\n        const stream = Stream.fromReadableStream(readableStream, this.controller);\n        let chatId;\n        for await (const chunk of stream) {\n            if (chatId && chatId !== chunk.id) {\n                // A new request has been made.\n                this._addChatCompletion(__classPrivateFieldGet(this, _ChatCompletionStream_instances, \"m\", _ChatCompletionStream_endRequest).call(this));\n            }\n            __classPrivateFieldGet(this, _ChatCompletionStream_instances, \"m\", _ChatCompletionStream_addChunk).call(this, chunk);\n            chatId = chunk.id;\n        }\n        if (stream.controller.signal?.aborted) {\n            throw new APIUserAbortError();\n        }\n        return this._addChatCompletion(__classPrivateFieldGet(this, _ChatCompletionStream_instances, \"m\", _ChatCompletionStream_endRequest).call(this));\n    }\n    [(_ChatCompletionStream_currentChatCompletionSnapshot = new WeakMap(), _ChatCompletionStream_instances = new WeakSet(), _ChatCompletionStream_beginRequest = function _ChatCompletionStream_beginRequest() {\n        if (this.ended)\n            return;\n        __classPrivateFieldSet(this, _ChatCompletionStream_currentChatCompletionSnapshot, undefined, \"f\");\n    }, _ChatCompletionStream_addChunk = function _ChatCompletionStream_addChunk(chunk) {\n        if (this.ended)\n            return;\n        const completion = __classPrivateFieldGet(this, _ChatCompletionStream_instances, \"m\", _ChatCompletionStream_accumulateChatCompletion).call(this, chunk);\n        this._emit('chunk', chunk, completion);\n        const delta = chunk.choices[0]?.delta?.content;\n        const snapshot = completion.choices[0]?.message;\n        if (delta != null && snapshot?.role === 'assistant' && snapshot?.content) {\n            this._emit('content', delta, snapshot.content);\n        }\n    }, _ChatCompletionStream_endRequest = function _ChatCompletionStream_endRequest() {\n        if (this.ended) {\n            throw new OpenAIError(`stream has ended, this shouldn't happen`);\n        }\n        const snapshot = __classPrivateFieldGet(this, _ChatCompletionStream_currentChatCompletionSnapshot, \"f\");\n        if (!snapshot) {\n            throw new OpenAIError(`request ended without sending any chunks`);\n        }\n        __classPrivateFieldSet(this, _ChatCompletionStream_currentChatCompletionSnapshot, undefined, \"f\");\n        return finalizeChatCompletion(snapshot);\n    }, _ChatCompletionStream_accumulateChatCompletion = function _ChatCompletionStream_accumulateChatCompletion(chunk) {\n        var _a, _b, _c;\n        let snapshot = __classPrivateFieldGet(this, _ChatCompletionStream_currentChatCompletionSnapshot, \"f\");\n        const { choices, ...rest } = chunk;\n        if (!snapshot) {\n            snapshot = __classPrivateFieldSet(this, _ChatCompletionStream_currentChatCompletionSnapshot, {\n                ...rest,\n                choices: [],\n            }, \"f\");\n        }\n        else {\n            Object.assign(snapshot, rest);\n        }\n        for (const { delta, finish_reason, index, logprobs = null, ...other } of chunk.choices) {\n            let choice = snapshot.choices[index];\n            if (!choice) {\n                choice = snapshot.choices[index] = { finish_reason, index, message: {}, logprobs, ...other };\n            }\n            if (logprobs) {\n                if (!choice.logprobs) {\n                    choice.logprobs = Object.assign({}, logprobs);\n                }\n                else {\n                    const { content, ...rest } = logprobs;\n                    Object.assign(choice.logprobs, rest);\n                    if (content) {\n                        (_a = choice.logprobs).content ?? (_a.content = []);\n                        choice.logprobs.content.push(...content);\n                    }\n                }\n            }\n            if (finish_reason)\n                choice.finish_reason = finish_reason;\n            Object.assign(choice, other);\n            if (!delta)\n                continue; // Shouldn't happen; just in case.\n            const { content, function_call, role, tool_calls, ...rest } = delta;\n            Object.assign(choice.message, rest);\n            if (content)\n                choice.message.content = (choice.message.content || '') + content;\n            if (role)\n                choice.message.role = role;\n            if (function_call) {\n                if (!choice.message.function_call) {\n                    choice.message.function_call = function_call;\n                }\n                else {\n                    if (function_call.name)\n                        choice.message.function_call.name = function_call.name;\n                    if (function_call.arguments) {\n                        (_b = choice.message.function_call).arguments ?? (_b.arguments = '');\n                        choice.message.function_call.arguments += function_call.arguments;\n                    }\n                }\n            }\n            if (tool_calls) {\n                if (!choice.message.tool_calls)\n                    choice.message.tool_calls = [];\n                for (const { index, id, type, function: fn, ...rest } of tool_calls) {\n                    const tool_call = ((_c = choice.message.tool_calls)[index] ?? (_c[index] = {}));\n                    Object.assign(tool_call, rest);\n                    if (id)\n                        tool_call.id = id;\n                    if (type)\n                        tool_call.type = type;\n                    if (fn)\n                        tool_call.function ?? (tool_call.function = { arguments: '' });\n                    if (fn?.name)\n                        tool_call.function.name = fn.name;\n                    if (fn?.arguments)\n                        tool_call.function.arguments += fn.arguments;\n                }\n            }\n        }\n        return snapshot;\n    }, Symbol.asyncIterator)]() {\n        const pushQueue = [];\n        const readQueue = [];\n        let done = false;\n        this.on('chunk', (chunk) => {\n            const reader = readQueue.shift();\n            if (reader) {\n                reader.resolve(chunk);\n            }\n            else {\n                pushQueue.push(chunk);\n            }\n        });\n        this.on('end', () => {\n            done = true;\n            for (const reader of readQueue) {\n                reader.resolve(undefined);\n            }\n            readQueue.length = 0;\n        });\n        this.on('abort', (err) => {\n            done = true;\n            for (const reader of readQueue) {\n                reader.reject(err);\n            }\n            readQueue.length = 0;\n        });\n        this.on('error', (err) => {\n            done = true;\n            for (const reader of readQueue) {\n                reader.reject(err);\n            }\n            readQueue.length = 0;\n        });\n        return {\n            next: async () => {\n                if (!pushQueue.length) {\n                    if (done) {\n                        return { value: undefined, done: true };\n                    }\n                    return new Promise((resolve, reject) => readQueue.push({ resolve, reject })).then((chunk) => (chunk ? { value: chunk, done: false } : { value: undefined, done: true }));\n                }\n                const chunk = pushQueue.shift();\n                return { value: chunk, done: false };\n            },\n            return: async () => {\n                this.abort();\n                return { value: undefined, done: true };\n            },\n        };\n    }\n    toReadableStream() {\n        const stream = new Stream(this[Symbol.asyncIterator].bind(this), this.controller);\n        return stream.toReadableStream();\n    }\n}\nfunction finalizeChatCompletion(snapshot) {\n    const { id, choices, created, model, system_fingerprint, ...rest } = snapshot;\n    return {\n        ...rest,\n        id,\n        choices: choices.map(({ message, finish_reason, index, logprobs, ...choiceRest }) => {\n            if (!finish_reason)\n                throw new OpenAIError(`missing finish_reason for choice ${index}`);\n            const { content = null, function_call, tool_calls, ...messageRest } = message;\n            const role = message.role; // this is what we expect; in theory it could be different which would make our types a slight lie but would be fine.\n            if (!role)\n                throw new OpenAIError(`missing role for choice ${index}`);\n            if (function_call) {\n                const { arguments: args, name } = function_call;\n                if (args == null)\n                    throw new OpenAIError(`missing function_call.arguments for choice ${index}`);\n                if (!name)\n                    throw new OpenAIError(`missing function_call.name for choice ${index}`);\n                return {\n                    ...choiceRest,\n                    message: { content, function_call: { arguments: args, name }, role },\n                    finish_reason,\n                    index,\n                    logprobs,\n                };\n            }\n            if (tool_calls) {\n                return {\n                    ...choiceRest,\n                    index,\n                    finish_reason,\n                    logprobs,\n                    message: {\n                        ...messageRest,\n                        role,\n                        content,\n                        tool_calls: tool_calls.map((tool_call, i) => {\n                            const { function: fn, type, id, ...toolRest } = tool_call;\n                            const { arguments: args, name, ...fnRest } = fn || {};\n                            if (id == null)\n                                throw new OpenAIError(`missing choices[${index}].tool_calls[${i}].id\\n${str(snapshot)}`);\n                            if (type == null)\n                                throw new OpenAIError(`missing choices[${index}].tool_calls[${i}].type\\n${str(snapshot)}`);\n                            if (name == null)\n                                throw new OpenAIError(`missing choices[${index}].tool_calls[${i}].function.name\\n${str(snapshot)}`);\n                            if (args == null)\n                                throw new OpenAIError(`missing choices[${index}].tool_calls[${i}].function.arguments\\n${str(snapshot)}`);\n                            return { ...toolRest, id, type, function: { ...fnRest, name, arguments: args } };\n                        }),\n                    },\n                };\n            }\n            return {\n                ...choiceRest,\n                message: { ...messageRest, content, role },\n                finish_reason,\n                index,\n                logprobs,\n            };\n        }),\n        created,\n        model,\n        object: 'chat.completion',\n        ...(system_fingerprint ? { system_fingerprint } : {}),\n    };\n}\nfunction str(x) {\n    return JSON.stringify(x);\n}\n//# sourceMappingURL=ChatCompletionStream.mjs.map","export class ChatLog {\n  private conversation_log: { role: string; content: string }[]; // keeps track of previous conversation to send to GPT\n  private final_data: { role: string; content: string; time: number; keyPressLog?: any }[]; // keeps track of data to print\n  private prompt: string;\n\n  constructor() {\n    this.conversation_log = [];\n    this.final_data = [];\n  }\n\n  setPrompt(prompt) {\n    const time = Math.round(performance.now());\n\n    const newMessage = {\n      role: \"system\",\n      content: prompt,\n      time: time,\n    };\n\n    this.final_data.push(newMessage);\n    this.prompt = prompt;\n  }\n\n  getPrompt() {\n    const newElement = { role: \"system\", content: this.prompt };\n    const tempConversationLog = [...this.conversation_log, newElement];\n    return tempConversationLog;\n  }\n\n  getChatLogs() {\n    return this.final_data;\n  }\n\n  // updates current prompt, possibly replace to pass in objct\n  updateConversationLog(content, role, keyPressLog?, message?): void {\n    if (role === \"system\")\n      console.log(\n        \"WARNING: this case is not caught and is incorrectly trigerring outadated method\",\n        \"content:\",\n        content,\n        \"role:\",\n        role\n      );\n\n    const time = Math.round(performance.now());\n    const newPrompt = { role: role, content: content };\n    this.conversation_log.push(newPrompt);\n\n    const newMessage = {\n      role: role,\n      content: content,\n      time: time,\n      ...(message ? { message: message } : {}),\n      ...(keyPressLog ? { keyPressLog: keyPressLog } : {}),\n    };\n    this.final_data.push(newMessage);\n  }\n\n  // logMessage adds message to final data but not conversatin log\n  logMessage(message, role) {\n    const time = Math.round(performance.now());\n\n    const newMessage = {\n      role: role,\n      content: message,\n      time: time,\n    };\n    this.final_data.push(newMessage);\n  }\n\n  // Chain Condition -- have it be a list of the chain and what happens before and after\n  // called when temporary chainPrompting\n  cleanConversation(): {}[] {\n    const res = this.conversation_log.filter((message: any, index: number, array: any[]) => {\n      if (\"role\" in message && message[\"role\"] === \"system\") {\n        return false;\n      }\n      // Exclude the last message because will be user message - only want existing conversation\n      if (index === array.length - 1) {\n        return false;\n      }\n      return true;\n    });\n\n    return res;\n  }\n\n  // call when adding a new prompt\n  cleanSystem(prompt, message?) {\n    // cleans existing prompts\n    const res = this.conversation_log.filter((message: any) => {\n      if (\"role\" in message && message[\"role\"] === \"system\") {\n        return false;\n      }\n      return true;\n    });\n\n    this.conversation_log = res;\n\n    this.setPrompt(prompt);\n    return this.getPrompt();\n  }\n}\n","import { JsPsych, JsPsychPlugin, ParameterType, TrialType } from \"jspsych\";\nimport { ChatCompletionStream } from \"openai/lib/ChatCompletionStream\";\n\nimport { ChatLog } from \"./ChatLog\";\n\nconst info = <const>{\n  name: \"chat\",\n  parameters: {\n    // BOOL, STRING, INT, FLOAT, FUNCTION, KEY, KEYS, SELECT, HTML_STRING, IMAGE, AUDIO, VIDEO, OBJECT, COMPLEX\n    ai_prompt: {\n      type: ParameterType.STRING,\n      default: undefined,\n    },\n    ai_model: {\n      type: ParameterType.STRING,\n      default: \"gpt-4o\",\n    },\n    chat_field_placeholder: {\n      type: ParameterType.STRING,\n      default: \"Type your message here...\",\n    },\n    // bot_name: {\n    //   type: ParameterType.STRING,\n    //   default: undefined,\n    // },\n    continue_button: {\n      type: ParameterType.COMPLEX,\n      default: { message_trigger: 0 },\n      nested: {\n        timer_trigger: {\n          type: ParameterType.INT,\n        },\n        message_trigger: {\n          type: ParameterType.INT,\n        },\n        message: {\n          type: ParameterType.STRING,\n        },\n      },\n    },\n    additional_prompts: {\n      type: ParameterType.COMPLEX,\n      array: true,\n      default: undefined,\n      nested: {\n        message: {\n          // messages to display on screen\n          type: ParameterType.STRING,\n          default: \"\",\n        },\n        prompt: {\n          // prompting to pass in\n          type: ParameterType.STRING,\n          default: null,\n        },\n        role: {\n          // \"prompt\" (\"system-prompt\"), \"chatbot-message\",\"chatbot-prompt\"\n          type: ParameterType.STRING,\n          default: \"system-prompt\",\n        },\n        message_trigger: {\n          type: ParameterType.INT,\n          default: null,\n        },\n        timer_trigger: {\n          type: ParameterType.INT,\n          default: null,\n        },\n      },\n    },\n    // when triggers it doesn't stop, do we want to give it a stop?\n    prompt_chain: {\n      type: ParameterType.COMPLEX,\n      default: [],\n      nested: {\n        prompts: {\n          type: ParameterType.STRING,\n          array: true,\n          default: [],\n        },\n        message_trigger: {\n          type: ParameterType.INT,\n          default: 99999999999999999999999, // silencing error message\n        },\n        timer_trigger: {\n          type: ParameterType.INT,\n          default: null,\n        },\n      },\n    },\n    selection_prompt: {\n      type: ParameterType.COMPLEX,\n      default: {},\n      nested: {\n        prompts: {\n          type: ParameterType.STRING,\n          array: true,\n          default: [],\n        },\n        selection_prompt: {\n          type: ParameterType.STRING,\n          default: \"Select one of these prompts:\",\n        },\n        message_trigger: {\n          type: ParameterType.INT,\n          default: 99999999999999999999999, // silencing error message\n        },\n        timer_trigger: {\n          type: ParameterType.INT,\n          default: null,\n        },\n      },\n    },\n  },\n};\n\ntype Info = typeof info;\n\n/**\n * **chat**\n *\n * Chat interface for running experiments using LLMs\n *\n * @author Victor Zhang and Niranjan Baskaran\n * @see {@link https://github.com/jspsych/jspsych-contrib/packages/plugin-chat/README.md}}\n */\nclass ChatPlugin implements JsPsychPlugin<Info> {\n  static info = info;\n  private researcher_prompts: {}[]; // keeps track of researcher's prompts that need to be displayed\n  private prompt_chain: {};\n  private selection_prompt: {};\n  private messages_sent: number; // notes number of messages sent to calculate prompts\n  private timer_start: number; // notes beginning of session in order to calculate prompts\n  private ai_model: string; // keeps track of model\n  private chatLog: ChatLog;\n\n  constructor(private jsPsych: JsPsych) {}\n\n  trial(display_element: HTMLElement, trial: TrialType<Info>) {\n    this.initializeTrialVariables(trial);\n    // var botTitle = trial.bot_name\n    //   ? `<div class=\"bot-title\">\n    //   <h1 class=\"bot-title-text\">` +\n    //     trial.bot_name +\n    //     `</h1>\n    // </div>`\n    //   : \"\";\n\n    var html =\n      `<div class=\"chat-page\">` +\n      // botTitle +\n      `<div class=\"chat-container\">\n        <div class=\"chat-box\" id=\"chat-box\"></div>\n\n        <div class=\"chat-fields\"> \n          <textarea type=\"text\" id=\"user-input\" placeholder=\"` +\n      trial.chat_field_placeholder +\n      `\"></textarea>\n          <button id=\"send-btn\">Send</button>\n          <button id=\"continue-btn\" style=\"display: none;\">Continue</button>\n        </div>\n      </div>\n    </div>`;\n\n    display_element.innerHTML = html;\n    document.body.style.backgroundColor = \"#9c9ad05c\";\n    const chatBox = display_element.querySelector(\"#chat-box\") as HTMLElement;\n    const userInput = display_element.querySelector(\"#user-input\") as HTMLInputElement;\n    const sendButton = display_element.querySelector(\"#send-btn\") as HTMLButtonElement;\n    const continueButton = display_element.querySelector(\"#continue-btn\") as HTMLButtonElement;\n    var keyPressLog = [];\n\n    // Setting up Trial Logic\n    // Function to handle logic of sending user message, and data collection\n    const sendMessage = async () => {\n      const message = userInput.value.trim();\n      this.addMessage(\"user\", message, chatBox, (keyPressLog = keyPressLog));\n      keyPressLog = [];\n      userInput.value = \"\";\n\n      // prompt chaining or simple requests\n      if (message !== \"\" && this.selection_prompt && this.checkCondition(\"selection_prompt\"))\n        await this.selectionPrompt(message, chatBox);\n      else if (message !== \"\" && this.prompt_chain && this.checkCondition(\"prompt_chain\")) {\n        await this.chainPrompts(message, chatBox);\n      } else if (message !== \"\") {\n        await this.updateAndProcessGPT(chatBox);\n      }\n\n      chatBox.scrollTop = chatBox.scrollHeight;\n      // inc messages and check researcher prompts\n      this.messages_sent += 1;\n      this.checkResearcherPrompts(chatBox, continueButton);\n    };\n\n    // Event listener for send button click\n    sendButton.addEventListener(\"click\", function (event) {\n      if (userInput.value.trim() != \"\") {\n        sendMessage();\n      }\n    });\n\n    // Event listener for Enter key press\n    userInput.addEventListener(\"keydown\", function (event) {\n      if (event.key === \"Enter\") {\n        if (!event.shiftKey) {\n          event.preventDefault(); // Prevent default behavior of adding new line\n          sendMessage();\n        }\n      }\n    });\n\n    // Event listener for all keypresses on userInput\n    userInput.addEventListener(\"keydown\", function (event) {\n      keyPressLog.push(event.key);\n    });\n\n    continueButton.addEventListener(\"click\", () => {\n      this.jsPsych.finishTrial({\n        logs: this.chatLog.getChatLogs(),\n      });\n    });\n\n    // Setting up Trial\n    this.checkResearcherPrompts(chatBox, continueButton);\n  }\n\n  // includes error checking to minimize error checking later\n  initializeTrialVariables(trial: TrialType<Info>) {\n    this.timer_start = performance.now();\n    this.chatLog = new ChatLog();\n    this.messages_sent = 0;\n    this.ai_model = trial.ai_model;\n\n    // this.chatLog.updateConversationLog(trial.ai_prompt, \"system\");\n    this.chatLog.setPrompt(trial.ai_prompt); // sets researcher prompts and removes any that can't trigger\n\n    this.researcher_prompts = trial.additional_prompts\n      ? trial.additional_prompts.filter((researcher_prompt) => {\n          if (\n            researcher_prompt[\"message_trigger\"] === null &&\n            researcher_prompt[\"timer_trigger\"] === null\n          ) {\n            console.error(\"Missing required property in researcher prompt:\", researcher_prompt);\n            return false;\n          }\n          return true;\n        })\n      : [];\n\n    // sets continue button and removes any that can't trigger\n    const continue_button = trial.continue_button;\n    if (continue_button[\"message_trigger\"] === null && continue_button[\"timer_trigger\"] === null) {\n      console.error(\"Missing required trigger property in continue prompt, will never display\");\n    } else {\n      continue_button[\"role\"] = \"continue\";\n      this.researcher_prompts.push(continue_button);\n    }\n\n    // sets prompt chain and removes any that can't trigger\n    if (\n      trial.prompt_chain &&\n      trial.prompt_chain[\"message_trigger\"] === null &&\n      trial.prompt_chain[\"timer_trigger\"] === null\n    ) {\n      console.error(\"Missing required trigger property in prompt_chain, will never trigger\");\n    } else {\n      this.prompt_chain = trial.prompt_chain;\n    }\n\n    if (\n      trial.selection_prompt &&\n      trial.selection_prompt[\"message_trigger\"] === null &&\n      trial.selection_prompt[\"timer_trigger\"] === null\n    ) {\n      console.error(\"Missing required trigger property in selection_prompt, will never trigger\");\n    } else {\n      this.selection_prompt = trial.selection_prompt;\n    }\n  }\n\n  // Call to backend, newMessage is the document item to print (optional because when chaining don't want them to display)\n  async fetchGPT(messages, chatBox, newMessage?) {\n    try {\n      var response;\n      if (window.location.href.includes(\"127.0.0.1\")) {\n        // local chat vs hosting\n        response = await fetch(\"http://localhost:3000/api/chat\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify({ messages, ai_model: this.ai_model }), // Corrected JSON structure\n        });\n      } else {\n        response = await fetch(\"/api/chat\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify({ messages, ai_model: this.ai_model }), // Corrected JSON structure\n        });\n      }\n\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n\n      const runner = ChatCompletionStream.fromReadableStream(response.body);\n\n      if (newMessage) {\n        // prints to screen if specified, otherwise only fetch\n        runner.on(\"content\", (delta, snapshot) => {\n          newMessage.innerHTML += delta.replace(/\\n/g, \"<br>\");\n          chatBox.scrollTop = chatBox.scrollHeight;\n        });\n      }\n\n      await runner.finalChatCompletion(); // waits before returning the actual content\n      return runner[\"messages\"][0][\"content\"];\n    } catch (error) {\n      console.error(\"Error fetching GPT data:\", error);\n      throw error; // Rethrow the error after logging it\n    }\n  }\n\n  // Handles updates to system with the prompt and to the screen\n  addMessage(role, message, chatBox, keyPressLog?) {\n    const newMessage = document.createElement(\"div\");\n    // Handles logic of updating prompts and error checking\n    switch (role) {\n      case \"chatbot\": // writing to screen handled caller function\n        this.chatLog.updateConversationLog(message, \"assistant\");\n        return;\n      case \"user\":\n        this.chatLog.updateConversationLog(message, \"user\", keyPressLog);\n        break;\n      case \"chatbot-message\": // set by researcher, needs be seperate case because doesn't update prompts\n        role = \"chatbot\";\n        this.chatLog.logMessage(message, role);\n        break;\n      case \"system-prompt\": // set by researcher\n        this.chatLog.logMessage(message, role);\n        break;\n      case \"chatbot-prompt\": // logging already handled by \"cleanSystem\"\n        role = \"system-prompt\";\n        break;\n      default:\n        console.error(\"Incorrect role\");\n        return;\n    }\n\n    newMessage.className = role + \"-message\";\n    newMessage.innerHTML = \"\";\n    chatBox.appendChild(newMessage);\n    newMessage.innerHTML = message.replace(/\\n/g, \"<br>\");\n    chatBox.scrollTop = chatBox.scrollHeight;\n  }\n\n  // updates and processes to the screen, workflow for one message (can be used in the process of workflow for mulitple messages)\n  async updateAndProcessGPT(chatBox, prompt?) {\n    const newMessage = document.createElement(\"div\");\n    newMessage.className = \"chatbot\" + \"-message\";\n    newMessage.innerHTML = \"\";\n    chatBox.appendChild(newMessage);\n\n    try {\n      var response = undefined;\n\n      if (prompt) {\n        // allows to pass in non defined prompts\n        response = await this.fetchGPT(prompt, chatBox, newMessage);\n        console.log(prompt);\n      } else {\n        // special case when wanting to prompt with own thing\n        response = await this.fetchGPT(this.chatLog.getPrompt(), chatBox, newMessage);\n        console.log(this.chatLog.getPrompt());\n      }\n\n      chatBox.scrollTop = chatBox.scrollHeight;\n      this.addMessage(\"chatbot\", response, chatBox); // saves to prompt\n      return response;\n    } catch (error) {\n      newMessage.innerHTML = \"error fetching bot response\";\n      return \"error fetching response\";\n    }\n  }\n\n  // logic for triggering logic\n  checkResearcherPrompts(chatBox, continueButton): void {\n    this.researcher_prompts = this.researcher_prompts.filter((researcher_prompt) => {\n      const message_trigger = researcher_prompt[\"message_trigger\"];\n      const timer_trigger = researcher_prompt[\"timer_trigger\"];\n      const time_elapsed = performance.now() - this.timer_start; // could instead keep subtracting from time_elapsed\n\n      if (\n        (message_trigger !== null && this.messages_sent >= message_trigger) ||\n        (timer_trigger !== null && time_elapsed >= timer_trigger)\n      ) {\n        // Checking with prompt to trigger\n        switch (researcher_prompt[\"role\"]) {\n          case \"chatbot-message\": // case is needed because of chatbot updating prompt\n          case \"system-prompt\": // want these cases to have the same functionality\n            this.addMessage(researcher_prompt[\"role\"], researcher_prompt[\"message\"], chatBox);\n            break;\n          case \"chatbot-prompt\": // checks messages, updates prompt and prints sytem message if exists\n            const prompt = researcher_prompt[\"prompt\"];\n            const message = researcher_prompt[\"message\"];\n\n            if (prompt !== null && typeof prompt === \"string\") {\n              this.chatLog.cleanSystem(prompt, message);\n            } else\n              console.error(\n                researcher_prompt,\n                \"is missing prompt field or it isn't in the correct format\"\n              );\n\n            if (message !== null && typeof prompt === \"string\" && message !== \"\") {\n              this.addMessage(researcher_prompt[\"role\"], message, chatBox);\n            }\n            break;\n          case \"continue\": // displays continue button, error checking that pipelining is working\n            if (!continueButton) {\n              console.error(\"No continue button to display\");\n              return false;\n            }\n            continueButton.style.display = \"block\";\n            // implement check here\n            this.addMessage(\"system-prompt\", researcher_prompt[\"message\"], chatBox);\n            break;\n          default:\n            console.error(\"Incorrect role for prompting\");\n        }\n\n        return false; // Remove this item from the array\n      }\n      return true; // Keep this item in the array\n    });\n  }\n\n  // checking whether chain prompts can trigger\n  private checkCondition(name) {\n    const time_elapsed = performance.now() - this.timer_start; // could instead keep subtracting from time_elapsed\n    const message_trigger = this[name][\"message_trigger\"];\n    const timer_trigger = this[name][\"timer_trigger\"];\n\n    if (\n      (message_trigger !== null && this.messages_sent >= message_trigger) ||\n      (timer_trigger !== null && time_elapsed >= timer_trigger)\n    )\n      return true;\n    else return false;\n  }\n\n  // triggering prompts in chain and prompting/logging logic\n  private async chainPrompts(message, chatBox) {\n    const cleaned_prompt = this.chatLog.cleanConversation();\n    const logChain = [];\n\n    for (let i = 0; i < this.prompt_chain[\"prompts\"].length; i++) {\n      const chain_prompt_system = this.prompt_chain[\"prompts\"][i];\n\n      const temp_prompt = [\n        ...cleaned_prompt,\n        {\n          role: \"system\",\n          content: chain_prompt_system,\n        },\n        {\n          role: \"user\",\n          content: message,\n        },\n      ];\n\n      logChain.push(\n        {\n          role: `chain-system-${i}`,\n          content: chain_prompt_system,\n        },\n        {\n          role: `link-response-${i}`,\n          content: message,\n        }\n      );\n\n      if (i === this.prompt_chain[\"prompts\"].length - 1) {\n        message = await this.updateAndProcessGPT(chatBox, temp_prompt);\n        logChain.push({ role: \"assistant\", content: message });\n      } else {\n        message = await this.fetchGPT(temp_prompt, chatBox); // Ensure to await if fetchGPT is asynchronous\n      }\n    }\n\n    this.chatLog.logMessage(logChain, \"chain-prompt\");\n  }\n\n  private async selectionPrompt(message, chatBox) {\n    const cleaned_prompt = this.chatLog.cleanConversation(); // maybe be able to refactor and cleanSystem()\n    var bot_responses = \"\";\n\n    for (var i = 0; i < this.selection_prompt[\"prompts\"].length; i++) {\n      const input_prompt = this.selection_prompt[\"prompts\"][i];\n      const combined_prompt = [\n        ...cleaned_prompt,\n        { role: \"system\", content: input_prompt },\n        { role: \"user\", content: message },\n      ];\n\n      console.log(\"individual_prompt:\", combined_prompt);\n      const response = await this.fetchGPT(combined_prompt, chatBox);\n\n      bot_responses = bot_responses + \"(\" + i + \") \" + response + \"\\n\\n\";\n    }\n\n    const system_user =\n      this.selection_prompt[\"selection_prompt\"] +\n      \"Task: You should select one of the three possible responses that would best achieve your goal with the intention of outputting it to the user\" +\n      \"What you should output: You should output the choice that you have selected, but without any indication that this was a numbered choice. Do not tell the user that you selected a certain response. The user should not know that there were choices.\" +\n      \" User message: `\" +\n      message +\n      \"`\";\n\n    this.chatLog.logMessage(\n      [\n        { role: \"prompt-selection\", content: system_user },\n        { role: \"content-choices/chatbot-answers\", content: bot_responses },\n      ],\n      \"selection_prompt\"\n    );\n\n    const prompt_select = [\n      ...cleaned_prompt,\n      { role: \"system\", content: system_user },\n      { role: \"user\", content: bot_responses },\n    ];\n\n    const response_message = await this.updateAndProcessGPT(chatBox, prompt_select);\n  }\n}\n\nexport default ChatPlugin;\n"],"names":["ReadableStream","shims.kind","shims.setShims","auto.getRuntime","this","__classPrivateFieldSet","__classPrivateFieldGet","ParameterType"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10]}