{"version":3,"file":"index.js","sources":["../src/gamepads/xbox_360_controller.ts","../src/gamepad-model.ts","../src/index.ts"],"sourcesContent":["import { GamepadModel } from \"../gamepad-model\";\n\nexport function xbox_360_controller(gamepad: Gamepad, parent: HTMLElement): GamepadModel {\n  let model: GamepadModel = new GamepadModel(gamepad, parent, 441);\n\n  model.draw_outline = (context: CanvasRenderingContext2D) => {\n    context.save();\n    context.lineWidth = 3;\n\n    let outline_left: Path2D = new Path2D(\n      \"M220.5 323.5L150 323.5C105 323.5 81.5 407.5 49.5 407.5C17.5 407.5 4 392.9 4 346.5C4 300.1 43.5 194.5 55 166.5C66.5 138.5 95.5 121 128 121L220.5 121\"\n    );\n    let outline_right: Path2D = new Path2D(\n      \"M220.5 323.5L291 323.5C336 323.5 359.5 407.5 391.5 407.5C423.5 407.5 437 392.9 437 346.5C437 300.1 397.5 194.5 386 166.5C374.5 138.5 345.5 121 313 121L220.5 121\"\n    );\n    context.stroke(outline_left);\n    context.stroke(outline_right);\n\n    let ls_outline: Path2D = new Path2D();\n    ls_outline.arc(113, 189, 37.5, 0, Math.PI * 2);\n    context.stroke(ls_outline);\n\n    let rs_outline: Path2D = new Path2D();\n    rs_outline.arc(278, 267, 37.5, 0, Math.PI * 2);\n    context.stroke(rs_outline);\n\n    let d_outline: Path2D = new Path2D();\n    d_outline.arc(163, 267, 37.5, 0, Math.PI * 2);\n    context.stroke(d_outline);\n\n    context.restore();\n  };\n\n  model.draw_component({ x: 113, y: 189, radius: 30 }, 0, 10); // left stick\n  model.draw_component({ x: 278, y: 267, radius: 30 }, 1, 11); // right stick\n\n  model.draw_component({ x: 328, y: 207, radius: 8 }, -1, 0); // A\n  model.draw_component({ x: 346, y: 189, radius: 8 }, -1, 1); // B\n  model.draw_component({ x: 310, y: 189, radius: 8 }, -1, 2); // X\n  model.draw_component({ x: 328, y: 171, radius: 8 }, -1, 3); // Y\n\n  model.draw_component(\n    new Path2D(\n      \"M111.5 90.5L152.5 90.5C160 90.5 160 103.5 152.5 103.5L111.5 103.5C104 103.5 104 90.5 111.5 90.5\"\n    ),\n    -1,\n    4\n  ); // LB\n  model.draw_component(\n    new Path2D(\n      \"M329.5 90.5L288.5 90.5C281 90.5 281 103.5 288.5 103.5L329.5 103.5C337 103.5 337 90.5 329.5 90.5\"\n    ),\n    -1,\n    5\n  ); // RB\n\n  model.draw_component(\n    new Path2D(\n      \"M152.5 66C152.5 70 149 73.5 145 73.5H132C128 73.5 124.5 70 124.5 66V45.5C124.5 38 131 31.5 138.5 31.5C146 31.5 152.5 38 152.5 45.5V66Z\"\n    ),\n    -1,\n    6\n  ); // LT\n  model.draw_component(\n    new Path2D(\n      \"M288.5 66C289.5 70 292 73.5 296 73.5H309C313 73.5 316.5 70 316.5 66V45.5C316.5 38 310 31.5 302.5 31.5C295 31.5 288.5 38 288.5 45.5V66Z\"\n    ),\n    -1,\n    7\n  ); // RT\n\n  model.draw_component({ x: 185, y: 191, radius: 8 }, -1, 8); // Left meta\n  model.draw_component({ x: 259, y: 191, radius: 8 }, -1, 9); // Right meta\n\n  model.draw_component({ x: 163, y: 249, radius: 8 }, -1, 12); // DUp\n  model.draw_component({ x: 163, y: 285, radius: 8 }, -1, 13); // DDown\n  model.draw_component({ x: 145, y: 267, radius: 8 }, -1, 14); // DLeft\n  model.draw_component({ x: 181, y: 267, radius: 8 }, -1, 15); // DRight\n\n  return model;\n}\n","import { xbox_360_controller } from \"./gamepads/xbox_360_controller\";\n\nexport class GamepadModel {\n  constructor(private gamepad: Gamepad, parent: HTMLElement, private size: number) {\n    this.canvas = document.createElement(\"canvas\");\n    this.canvas.width = this.size;\n    this.canvas.height = this.size;\n    this.canvas.style.width = \"100%\";\n\n    parent.appendChild(this.canvas);\n\n    this.context = this.canvas.getContext(\"2d\", { willReadFrequently: true });\n  }\n\n  private canvas: HTMLCanvasElement;\n\n  private context: CanvasRenderingContext2D;\n\n  private draw_call_list: Array<Function> = [];\n\n  public draw_outline: (context: CanvasRenderingContext2D) => void = (\n    _context: CanvasRenderingContext2D\n  ) => {};\n\n  // set button_id to -1 if the current component cannot be pressed\n  public draw_component(component: ComponentPath, axes_id: number, button_id: number): void {\n    if (component instanceof Path2D) {\n      this.draw_call_list.push(() => {\n        this.context.save();\n        this.context.fillStyle = `rgba(0, 0, 0, ${this.gamepad.buttons[button_id]?.value})`;\n        this.context.lineWidth = 3;\n        this.context.stroke(component);\n        this.context.fill(component);\n        this.context.restore();\n      });\n    } else {\n      this.draw_call_list.push(() => {\n        let axes_1: number = axes_id === -1 ? 0 : this.gamepad.axes[axes_id * 2];\n        let axes_2: number = axes_id === -1 ? 0 : this.gamepad.axes[axes_id * 2 + 1];\n\n        let path: Path2D = new Path2D();\n        path.arc(\n          component.x + (axes_1 * component.radius) / 2,\n          component.y + (axes_2 * component.radius) / 2,\n          component.radius,\n          0,\n          Math.PI * 2\n        );\n\n        this.context.stroke(path);\n\n        this.context.save();\n        this.context.fillStyle = `rgba(0, 0, 0, ${this.gamepad.buttons[button_id]?.value})`;\n        this.context.lineWidth = 3;\n        this.context.stroke(path);\n        this.context.fill(path);\n        this.context.restore();\n      });\n    }\n  }\n\n  public update(gamepad: Gamepad | null): void {\n    if (gamepad !== null) {\n      this.gamepad = gamepad;\n    }\n    this.context.clearRect(0, 0, this.size, this.size);\n    this.draw_outline(this.context);\n    for (let func of this.draw_call_list) {\n      func();\n    }\n  }\n}\n\ntype ComponentPath = Path2D | { x: number; y: number; radius: number };\n\ntype GamepadTemplate = (gamepad: Gamepad, parent: HTMLElement) => GamepadModel;\n\nexport let GamepadModels: { [prop: string]: GamepadTemplate } = {\n  \"Xbox 360 Controller (XInput STANDARD GAMEPAD)\": xbox_360_controller,\n};\n","import { JsPsych, JsPsychPlugin, ParameterType, TrialType } from \"jspsych\";\n\nimport { GamepadModel, GamepadModels } from \"./gamepad-model\";\n\nconst info = <const>{\n  name: \"jspsych-gamepad\",\n  parameters: {\n    /**\n     * The size of the canvas element\n     */\n    canvas_size: {\n      type: ParameterType.INT,\n      default: [500, 500],\n      array: true,\n    },\n    /**\n     * Whether to display a minature gamepad on the page.\n     * If set to true, a minature gamepad would be rendered, which simultaneously reflects the button presses and\n     * joystick movements of the gamepad.\n     * This should only be used for debug purposes, though.\n     * Note: at the current stage, there is only limited support to this feature\n     */\n    display_minature_gamepad: {\n      type: ParameterType.BOOL,\n      default: false,\n    },\n    /**\n     * The function which, when returning true, would terminate the current trial.\n     * This function is called once every frame.\n     *\n     * @param {CanvasRenderingContext2D} context: The context to draw upon\n     * @param {Gamepad} gamepad: The gamepad object connected\n     * @param {number} time_stamp: The milliseconds that have elapsed since the first frame\n     * @param {number} delta_time: The milliseconds that have elapsed since the last frame\n     */\n    end_trial: {\n      type: ParameterType.FUNCTION,\n      default: (\n        _context: CanvasRenderingContext2D,\n        _gamepad: Gamepad,\n        _time_stamp: number,\n        _delta_time: number\n      ) => {\n        return _time_stamp > 2000;\n      },\n    },\n    /**\n     * The message to display above the canvas when no gamepad is connected or when connection is lost.\n     */\n    gamepad_connection_prompt: {\n      type: ParameterType.STRING,\n      default: \"Awaiting gamepad connection...\",\n    },\n    /**\n     * The function that runs in every frame update.\n     *\n     * @param {CanvasRenderingContext2D} context: The context to draw upon\n     * @param {Gamepad} gamepad: The gamepad object connected\n     * @param {number} time_stamp: The milliseconds that have elapsed since the first frame\n     * @param {number} delta_time: The milliseconds that have elapsed since the last frame\n     */\n    on_frame_update: {\n      type: ParameterType.FUNCTION,\n      default: (\n        _context: CanvasRenderingContext2D,\n        _gamepad: Gamepad,\n        _time_stamp: number,\n        _delta_time: number\n      ) => {},\n    },\n    /**\n     * The function to draw on the canvas.\n     * This function automatically takes a canvas context as its only argument\n     * The content of the stimulus is only drawn once in the first frame, and is then copy-pasted in subsequent frames.\n     * Therefore, this parameter is best suited for drawing contents that does not change throughout the entire trial.\n     * One can return a Promise object with the function, which will be automatically detected by the plugin.\n     */\n    stimulus: {\n      type: ParameterType.FUNCTION,\n      default: (_context: CanvasRenderingContext2D) => {},\n    },\n  },\n};\n\ntype Info = typeof info;\n\n/**\n * **jspsych-gamepad**\n *\n * A jsPsych plugin for using gamepad in behavioral experiments.\n *\n * @author Shaobin Jiang\n */\nclass GamepadPlugin implements JsPsychPlugin<Info> {\n  static info = info;\n\n  constructor(private jsPsych: JsPsych) {}\n\n  private gamepad: Gamepad | null;\n  private gamepad_is_connected: boolean = false;\n\n  private minature_gamepad: GamepadModel | null = null;\n  private minature_gamepad_wrapper: HTMLDivElement;\n\n  private start_time_stamp: number = 0;\n  private last_frame_time_stamp: number = 0;\n\n  private animation_frame_id: number = -1;\n  private frame_request_callback: FrameRequestCallback = (_time: DOMHighResTimeStamp) => {};\n\n  private gamepad_inputs: Array<Gamepad> = [];\n\n  private find_gamepad(): void {\n    this.gamepad = null;\n    this.gamepad_is_connected = false;\n    for (let gamepad of navigator.getGamepads()) {\n      if (gamepad instanceof Gamepad) {\n        let previous_gamepad_id = this.gamepad?.id;\n\n        this.gamepad = gamepad;\n        this.gamepad_is_connected = true;\n\n        if (gamepad.id !== previous_gamepad_id) {\n          this.minature_gamepad_wrapper.innerHTML = \"\";\n          this.minature_gamepad = GamepadModels[gamepad.id](gamepad, this.minature_gamepad_wrapper);\n        }\n        break;\n      }\n    }\n  }\n\n  public trial(display_element: HTMLElement, trial: TrialType<Info>, on_load: Function) {\n    // Initialize the canvas element\n    let canvas: HTMLCanvasElement = document.createElement(\"canvas\");\n    canvas.width = trial.canvas_size[0];\n    canvas.height = trial.canvas_size[1];\n\n    // Initialize the prompt element\n    let gamepad_connection_prompt: HTMLParagraphElement = document.createElement(\"p\");\n    gamepad_connection_prompt.style.textAlign = \"center\";\n    gamepad_connection_prompt.innerHTML = trial.gamepad_connection_prompt;\n\n    display_element.appendChild(canvas);\n    display_element.appendChild(gamepad_connection_prompt);\n\n    this.minature_gamepad_wrapper = document.createElement(\"div\");\n    this.minature_gamepad_wrapper.id = \"gamepad-model-wrapper\";\n    this.minature_gamepad_wrapper.style.width = \"10%\";\n    this.minature_gamepad_wrapper.style.position = \"absolute\";\n    this.jsPsych.getDisplayContainerElement().appendChild(this.minature_gamepad_wrapper);\n\n    let context: CanvasRenderingContext2D = canvas.getContext(\"2d\", { willReadFrequently: true });\n\n    let stimulus: any = trial.stimulus(context);\n    let promise: Promise<any>;\n    if (stimulus instanceof Promise) {\n      promise = stimulus;\n    } else {\n      promise = Promise.resolve(stimulus);\n    }\n\n    promise.then(() => {\n      let image_data: ImageData = context.getImageData(0, 0, canvas.width, canvas.height);\n\n      this.frame_request_callback = (now: DOMHighResTimeStamp) => {\n        if (this.start_time_stamp === 0) {\n          this.start_time_stamp = now;\n        }\n\n        this.find_gamepad();\n\n        // If gamepad_is_connected is true, then gamepad_connection_prompt should be empty and vice versa\n        gamepad_connection_prompt.style.visibility = this.gamepad_is_connected ? \"hidden\" : \"\";\n\n        let time_stamp: number = now - this.start_time_stamp;\n        let delta: number = this.last_frame_time_stamp === 0 ? 0 : now - this.last_frame_time_stamp;\n\n        context.putImageData(image_data, 0, 0);\n        trial.on_frame_update(context, this.gamepad, time_stamp, delta);\n\n        if (trial.display_minature_gamepad && this.minature_gamepad_wrapper !== null) {\n          this.minature_gamepad?.update(this.gamepad);\n        }\n\n        this.gamepad_inputs.push(this.gamepad);\n\n        if (trial.end_trial(context, this.gamepad, time_stamp, delta)) {\n          finish_trial({\n            rt: time_stamp,\n            input: this.gamepad_inputs,\n          });\n        }\n\n        this.last_frame_time_stamp = now;\n\n        this.animation_frame_id = window.requestAnimationFrame(this.frame_request_callback);\n      };\n\n      on_load();\n\n      this.animation_frame_id = window.requestAnimationFrame(this.frame_request_callback);\n    });\n\n    let finish_trial: Function = (data: object) => {\n      window.cancelAnimationFrame(this.animation_frame_id);\n      display_element.innerHTML = \"\";\n      this.minature_gamepad_wrapper.remove();\n      this.jsPsych.finishTrial(data);\n    };\n  }\n}\n\nexport default GamepadPlugin;\n"],"names":[],"mappings":"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"}